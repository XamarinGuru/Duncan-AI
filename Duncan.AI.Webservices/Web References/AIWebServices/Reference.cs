//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Duncan.AI.Webservices.AIWebServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AutoISSUEHostServiceSoap", Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class AutoISSUEHostService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RestoreFireBirdDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFireBirdVerboseTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListFilesAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneHotSheetFileAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback BuildDataRelationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginListEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndListEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelListEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginHotSheetEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndHotSheetEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelHotSheetEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileNamesForTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMTX_LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryGeoCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEffectiveDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositeDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositeFileInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositeFileInformationForHHPlatformOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshCompositeFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshCompositeFiles2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadACompositeFileChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeCompositeListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveEDTFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveHotSheetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHotSheetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePopularFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTablesThatBelongToSubConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistryItemsFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteRegistryItemsFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubConfigurationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSubConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginSubConfigurationEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndSubConfigurationEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSubConfigurationEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSubConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameSubConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompositeListFileDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryIssuanceRecord_BasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryIssuanceRecord_ExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogEvent_MultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GarbageCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMTXReportObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveReportRunParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginReportParameterEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndReportParameterEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelReportParameterEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportFileDirectoryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExportDefinitionsNameAndNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOldReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExeFileListForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExeFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExeFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumLogicalDrivesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumDirectoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTextToGenericLogFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateParkeonMeterClusterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVerboseParkNOWProgressTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateParkNOWMeterClusterListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePayByCellZoneListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePayByCellZoneList_PassportVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseOutCurrentUserFromDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoLoginAsMasterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersWithHandheldRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrUpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback EffectiveUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EffectiveRoleRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetRightsForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiReplaceRightsForRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetRoleByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiAddRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiSaveRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiDeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetRolesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiReplaceRolesForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetUserByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiAddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiSaveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetCitationImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetCitationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetCitationNumberFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiPemsDBPushTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushNoteRecordsDataToPEMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetAllListGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiGetListGroupDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApiSaveListGroupDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeRoleRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserKeyForNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleKeyForNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameAccessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessRightKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccessRightToRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAccessRightToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSecurityPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateHandheldUserStructFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateHandheldUserStructFile_ExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSessionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenLocksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionUserNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupSecurityTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreSecurityTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserWithDefaultRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyMgr_GetEncryptionConfigDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyMgr_AddNewEncryptionKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyMgr_GetVerboseProgressTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerializedClientDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientDefFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientDefFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAllocationRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteAllocToTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSerialNoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommSerialNoInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUpdateUnitIntoTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSequenceNamesForCustomerCfgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewUnitBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCurrentUnitBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecordUnloadedUnitBooksInDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSerialNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAssignedBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocationLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocationBooksLeftOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitCfgInDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutAcwRangeFileInTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitStatusAtomicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitLastCommDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFreezeOrThawUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnassignedSerialNoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnitBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBookLastIssuedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitSubCfgInDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUnitMeterTraxCfgInDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitsAssignedToSubConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkAllocAndSequenceAsDeletedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignNewSubConfigToUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllocationsAndSequencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCommLogIntoTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterTraxFileBytesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefinitionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImportExportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveImportExportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginDefinitionEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndDefinitionEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDefinitionEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImportExportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImportExportDelimitersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveImportExportDelimitersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveImportExportDefinitionHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveImportExportExecuteHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveImportExportSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWarningsTrackingExportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteImportExportDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteImpExpDef_ReturnSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForDefinitionRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDefinitionRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteExportToByteArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportExportFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportExportFileDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteFTPSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteExternalExeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGeoCodeInformationForTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveCourtObjectsAStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCourtObjectsFromStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteOutCourtDateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadInNSWXMLFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsNSWClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferNSWFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNSWFileTransferVerboseOutputOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTaskGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginTaskGroupEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndTaskGroupEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTaskGroupEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleRowVersionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshScheduleListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginScheduleRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndScheduleRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginScheduleEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndScheduleEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelScheduleEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupTaskTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreTaskTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewCommSessionFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFileInCommSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInCommSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportCommSessionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportCommSessionData_ExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportHHEventLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompressHandheldFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHHConfigFileInfoAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHHConfigFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHHPlatformFileInfoAsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHHPlatformFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHHFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandheldIsValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandheldIsValidForParkeonOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandheldIsValidForParkNOWOperationCompleted;
        
        private System.Threading.SendOrPostCallback HandheldIsValidForDPTOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchHotSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWirelessSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutWirelessFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndWirelessSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveOldSessionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchemaForAutoCITEDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderInformationByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveConnectionNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetActiveConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstalledRootFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIssueApFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAgencyListFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImpExpDefFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportHistoryPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExportHistoryPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportParameterFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommHandheldsPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommPlatformsPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommConfigurationsPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommSessionsPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommWirelessSessionsPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSuppliedListsRootPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAcwRangePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXMLDownloadPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceConfigEncryptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllConfigurationItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAllConfigurationItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneConfigurationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOneConfigurationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOneConfigurationItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEagleProgramDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPopularListNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupConfigurationTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreConfigurationTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupSystemFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreSystemFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisteredComputerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRegisteredComputerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComputerTableChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldVirtualFldTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ParentStructNameForDetailStructOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PerformExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertData_AlwaysSetGeneratedKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataOneTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportRecordAndReturnDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostDataFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TranslateProviderSpecificCharOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderSpecificParameterNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderSpecificStartWithStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackupFireBirdDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunReportAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteImportExportDefinitionAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteFTPSessionAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadInNSWXMLFilesAsynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferNSWFilesAsynchronousOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AutoISSUEHostService() {
            this.Url = global::Duncan.AI.Webservices.Properties.Settings.Default.Duncan_AI_Webservices_AIWebServices_AutoISSUEHostService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RestoreFireBirdDBCompletedEventHandler RestoreFireBirdDBCompleted;
        
        /// <remarks/>
        public event GetFireBirdVerboseTextCompletedEventHandler GetFireBirdVerboseTextCompleted;
        
        /// <remarks/>
        public event GetListFilesCompletedEventHandler GetListFilesCompleted;
        
        /// <remarks/>
        public event GetListFilesAsDataSetCompletedEventHandler GetListFilesAsDataSetCompleted;
        
        /// <remarks/>
        public event GetOneHotSheetFileAsDataSetCompletedEventHandler GetOneHotSheetFileAsDataSetCompleted;
        
        /// <remarks/>
        public event BuildDataRelationsCompletedEventHandler BuildDataRelationsCompleted;
        
        /// <remarks/>
        public event BeginListEditCompletedEventHandler BeginListEditCompleted;
        
        /// <remarks/>
        public event EndListEditCompletedEventHandler EndListEditCompleted;
        
        /// <remarks/>
        public event CancelListEditCompletedEventHandler CancelListEditCompleted;
        
        /// <remarks/>
        public event BeginHotSheetEditCompletedEventHandler BeginHotSheetEditCompleted;
        
        /// <remarks/>
        public event EndHotSheetEditCompletedEventHandler EndHotSheetEditCompleted;
        
        /// <remarks/>
        public event CancelHotSheetEditCompletedEventHandler CancelHotSheetEditCompleted;
        
        /// <remarks/>
        public event GetAllFileNamesForTableCompletedEventHandler GetAllFileNamesForTableCompleted;
        
        /// <remarks/>
        public event UpdateMTX_LocationCompletedEventHandler UpdateMTX_LocationCompleted;
        
        /// <remarks/>
        public event GetInventoryGeoCodeCompletedEventHandler GetInventoryGeoCodeCompleted;
        
        /// <remarks/>
        public event GetEffectiveDateCompletedEventHandler GetEffectiveDateCompleted;
        
        /// <remarks/>
        public event GetCompositeDateCompletedEventHandler GetCompositeDateCompleted;
        
        /// <remarks/>
        public event GetCompositeFileInformationCompletedEventHandler GetCompositeFileInformationCompleted;
        
        /// <remarks/>
        public event GetCompositeFileInformationForHHPlatformCompletedEventHandler GetCompositeFileInformationForHHPlatformCompleted;
        
        /// <remarks/>
        public event RefreshCompositeFilesCompletedEventHandler RefreshCompositeFilesCompleted;
        
        /// <remarks/>
        public event RefreshCompositeFiles2CompletedEventHandler RefreshCompositeFiles2Completed;
        
        /// <remarks/>
        public event DownloadACompositeFileChunkCompletedEventHandler DownloadACompositeFileChunkCompleted;
        
        /// <remarks/>
        public event MakeCompositeListsCompletedEventHandler MakeCompositeListsCompleted;
        
        /// <remarks/>
        public event RemoveEDTFileCompletedEventHandler RemoveEDTFileCompleted;
        
        /// <remarks/>
        public event RemoveHotSheetFileCompletedEventHandler RemoveHotSheetFileCompleted;
        
        /// <remarks/>
        public event AddHotSheetFileCompletedEventHandler AddHotSheetFileCompleted;
        
        /// <remarks/>
        public event RemovePopularFileCompletedEventHandler RemovePopularFileCompleted;
        
        /// <remarks/>
        public event GetTablesThatBelongToSubConfigurationCompletedEventHandler GetTablesThatBelongToSubConfigurationCompleted;
        
        /// <remarks/>
        public event GetRegistryItemsFileDataCompletedEventHandler GetRegistryItemsFileDataCompleted;
        
        /// <remarks/>
        public event WriteRegistryItemsFileDataCompletedEventHandler WriteRegistryItemsFileDataCompleted;
        
        /// <remarks/>
        public event GetSubConfigurationListCompletedEventHandler GetSubConfigurationListCompleted;
        
        /// <remarks/>
        public event GetSubConfigurationCompletedEventHandler GetSubConfigurationCompleted;
        
        /// <remarks/>
        public event SaveSubConfigurationCompletedEventHandler SaveSubConfigurationCompleted;
        
        /// <remarks/>
        public event BeginSubConfigurationEditCompletedEventHandler BeginSubConfigurationEditCompleted;
        
        /// <remarks/>
        public event EndSubConfigurationEditCompletedEventHandler EndSubConfigurationEditCompleted;
        
        /// <remarks/>
        public event CancelSubConfigurationEditCompletedEventHandler CancelSubConfigurationEditCompleted;
        
        /// <remarks/>
        public event DeleteSubConfigurationCompletedEventHandler DeleteSubConfigurationCompleted;
        
        /// <remarks/>
        public event RenameSubConfigurationCompletedEventHandler RenameSubConfigurationCompleted;
        
        /// <remarks/>
        public event PlaceLockCompletedEventHandler PlaceLockCompleted;
        
        /// <remarks/>
        public event RemoveLockCompletedEventHandler RemoveLockCompleted;
        
        /// <remarks/>
        public event GetCompositeListFileDateTimeCompletedEventHandler GetCompositeListFileDateTimeCompleted;
        
        /// <remarks/>
        public event QueryIssuanceRecord_BasicCompletedEventHandler QueryIssuanceRecord_BasicCompleted;
        
        /// <remarks/>
        public event QueryIssuanceRecord_ExtendedCompletedEventHandler QueryIssuanceRecord_ExtendedCompleted;
        
        /// <remarks/>
        public event QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventHandler QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompleted;
        
        /// <remarks/>
        public event LogEventCompletedEventHandler LogEventCompleted;
        
        /// <remarks/>
        public event LogEvent_MultipleCompletedEventHandler LogEvent_MultipleCompleted;
        
        /// <remarks/>
        public event GarbageCollectionCompletedEventHandler GarbageCollectionCompleted;
        
        /// <remarks/>
        public event GetReportObjectCompletedEventHandler GetReportObjectCompleted;
        
        /// <remarks/>
        public event GetMTXReportObjectCompletedEventHandler GetMTXReportObjectCompleted;
        
        /// <remarks/>
        public event SaveReportRunParametersCompletedEventHandler SaveReportRunParametersCompleted;
        
        /// <remarks/>
        public event BeginReportParameterEditCompletedEventHandler BeginReportParameterEditCompleted;
        
        /// <remarks/>
        public event EndReportParameterEditCompletedEventHandler EndReportParameterEditCompleted;
        
        /// <remarks/>
        public event CancelReportParameterEditCompletedEventHandler CancelReportParameterEditCompleted;
        
        /// <remarks/>
        public event RunReportCompletedEventHandler RunReportCompleted;
        
        /// <remarks/>
        public event GetReportFileInfoCompletedEventHandler GetReportFileInfoCompleted;
        
        /// <remarks/>
        public event GetReportFileDataCompletedEventHandler GetReportFileDataCompleted;
        
        /// <remarks/>
        public event GetReportFileDirectoryInfoCompletedEventHandler GetReportFileDirectoryInfoCompleted;
        
        /// <remarks/>
        public event GetExportDefinitionsNameAndNumberCompletedEventHandler GetExportDefinitionsNameAndNumberCompleted;
        
        /// <remarks/>
        public event RemoveOldReportsCompletedEventHandler RemoveOldReportsCompleted;
        
        /// <remarks/>
        public event GetExeFileListForClientCompletedEventHandler GetExeFileListForClientCompleted;
        
        /// <remarks/>
        public event GetExeFileInfoCompletedEventHandler GetExeFileInfoCompleted;
        
        /// <remarks/>
        public event GetExeFileDataCompletedEventHandler GetExeFileDataCompleted;
        
        /// <remarks/>
        public event EnumLogicalDrivesCompletedEventHandler EnumLogicalDrivesCompleted;
        
        /// <remarks/>
        public event EnumDirectoriesCompletedEventHandler EnumDirectoriesCompleted;
        
        /// <remarks/>
        public event EnumFilesCompletedEventHandler EnumFilesCompleted;
        
        /// <remarks/>
        public event AddTextToGenericLogFileCompletedEventHandler AddTextToGenericLogFileCompleted;
        
        /// <remarks/>
        public event UpdateParkeonMeterClusterListCompletedEventHandler UpdateParkeonMeterClusterListCompleted;
        
        /// <remarks/>
        public event GetVerboseParkNOWProgressTextCompletedEventHandler GetVerboseParkNOWProgressTextCompleted;
        
        /// <remarks/>
        public event UpdateParkNOWMeterClusterListCompletedEventHandler UpdateParkNOWMeterClusterListCompleted;
        
        /// <remarks/>
        public event UpdatePayByCellZoneListCompletedEventHandler UpdatePayByCellZoneListCompleted;
        
        /// <remarks/>
        public event UpdatePayByCellZoneList_PassportVendorCompletedEventHandler UpdatePayByCellZoneList_PassportVendorCompleted;
        
        /// <remarks/>
        public event CloseOutCurrentUserFromDatabaseCompletedEventHandler CloseOutCurrentUserFromDatabaseCompleted;
        
        /// <remarks/>
        public event AutoLoginAsMasterUserCompletedEventHandler AutoLoginAsMasterUserCompleted;
        
        /// <remarks/>
        public event LoginUserCompletedEventHandler LoginUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event GetUsersWithHandheldRightsCompletedEventHandler GetUsersWithHandheldRightsCompleted;
        
        /// <remarks/>
        public event GetAllRolesCompletedEventHandler GetAllRolesCompleted;
        
        /// <remarks/>
        public event GetAllRightsCompletedEventHandler GetAllRightsCompleted;
        
        /// <remarks/>
        public event InsertOrUpdateDataCompletedEventHandler InsertOrUpdateDataCompleted;
        
        /// <remarks/>
        public event EffectiveUserRightsCompletedEventHandler EffectiveUserRightsCompleted;
        
        /// <remarks/>
        public event EffectiveRoleRightsCompletedEventHandler EffectiveRoleRightsCompleted;
        
        /// <remarks/>
        public event ApiGetRightsForRoleCompletedEventHandler ApiGetRightsForRoleCompleted;
        
        /// <remarks/>
        public event ApiReplaceRightsForRoleCompletedEventHandler ApiReplaceRightsForRoleCompleted;
        
        /// <remarks/>
        public event ApiGetAllRolesCompletedEventHandler ApiGetAllRolesCompleted;
        
        /// <remarks/>
        public event ApiGetRoleCompletedEventHandler ApiGetRoleCompleted;
        
        /// <remarks/>
        public event ApiGetRoleByNameCompletedEventHandler ApiGetRoleByNameCompleted;
        
        /// <remarks/>
        public event ApiAddRoleCompletedEventHandler ApiAddRoleCompleted;
        
        /// <remarks/>
        public event ApiSaveRoleCompletedEventHandler ApiSaveRoleCompleted;
        
        /// <remarks/>
        public event ApiDeleteRoleCompletedEventHandler ApiDeleteRoleCompleted;
        
        /// <remarks/>
        public event ApiGetRolesForUserCompletedEventHandler ApiGetRolesForUserCompleted;
        
        /// <remarks/>
        public event ApiReplaceRolesForUserCompletedEventHandler ApiReplaceRolesForUserCompleted;
        
        /// <remarks/>
        public event ApiGetAllUsersCompletedEventHandler ApiGetAllUsersCompleted;
        
        /// <remarks/>
        public event ApiGetUserCompletedEventHandler ApiGetUserCompleted;
        
        /// <remarks/>
        public event ApiGetUserByUserNameCompletedEventHandler ApiGetUserByUserNameCompleted;
        
        /// <remarks/>
        public event ApiAddUserCompletedEventHandler ApiAddUserCompleted;
        
        /// <remarks/>
        public event ApiSaveUserCompletedEventHandler ApiSaveUserCompleted;
        
        /// <remarks/>
        public event ApiDeleteUserCompletedEventHandler ApiDeleteUserCompleted;
        
        /// <remarks/>
        public event ApiGetCitationImageCompletedEventHandler ApiGetCitationImageCompleted;
        
        /// <remarks/>
        public event ApiGetCitationDetailsCompletedEventHandler ApiGetCitationDetailsCompleted;
        
        /// <remarks/>
        public event ApiGetCitationNumberFormatCompletedEventHandler ApiGetCitationNumberFormatCompleted;
        
        /// <remarks/>
        public event ApiPemsDBPushTestCompletedEventHandler ApiPemsDBPushTestCompleted;
        
        /// <remarks/>
        public event PushNoteRecordsDataToPEMSCompletedEventHandler PushNoteRecordsDataToPEMSCompleted;
        
        /// <remarks/>
        public event ApiGetAllListGroupNamesCompletedEventHandler ApiGetAllListGroupNamesCompleted;
        
        /// <remarks/>
        public event ApiGetListGroupDataSetCompletedEventHandler ApiGetListGroupDataSetCompleted;
        
        /// <remarks/>
        public event ApiSaveListGroupDataSetCompletedEventHandler ApiSaveListGroupDataSetCompleted;
        
        /// <remarks/>
        public event ChangeRoleRightsCompletedEventHandler ChangeRoleRightsCompleted;
        
        /// <remarks/>
        public event ChangeUserRightsCompletedEventHandler ChangeUserRightsCompleted;
        
        /// <remarks/>
        public event GetUserKeyForNameCompletedEventHandler GetUserKeyForNameCompleted;
        
        /// <remarks/>
        public event GetRoleKeyForNameCompletedEventHandler GetRoleKeyForNameCompleted;
        
        /// <remarks/>
        public event ChangeUserRolesCompletedEventHandler ChangeUserRolesCompleted;
        
        /// <remarks/>
        public event GetUserRolesCompletedEventHandler GetUserRolesCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event DeleteRoleCompletedEventHandler DeleteRoleCompleted;
        
        /// <remarks/>
        public event RegisterAccessRightCompletedEventHandler RegisterAccessRightCompleted;
        
        /// <remarks/>
        public event RegisterAccessRightsCompletedEventHandler RegisterAccessRightsCompleted;
        
        /// <remarks/>
        public event DeleteAccessRightCompletedEventHandler DeleteAccessRightCompleted;
        
        /// <remarks/>
        public event RenameAccessRightCompletedEventHandler RenameAccessRightCompleted;
        
        /// <remarks/>
        public event GetAccessRightKeyCompletedEventHandler GetAccessRightKeyCompleted;
        
        /// <remarks/>
        public event AddAccessRightToRoleCompletedEventHandler AddAccessRightToRoleCompleted;
        
        /// <remarks/>
        public event AddAccessRightToUserCompletedEventHandler AddAccessRightToUserCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event GetSecurityPolicyCompletedEventHandler GetSecurityPolicyCompleted;
        
        /// <remarks/>
        public event SetSecurityPolicyCompletedEventHandler SetSecurityPolicyCompleted;
        
        /// <remarks/>
        public event GenerateHandheldUserStructFileCompletedEventHandler GenerateHandheldUserStructFileCompleted;
        
        /// <remarks/>
        public event GenerateHandheldUserStructFile_ExCompletedEventHandler GenerateHandheldUserStructFile_ExCompleted;
        
        /// <remarks/>
        public event GetUserSessionsCompletedEventHandler GetUserSessionsCompleted;
        
        /// <remarks/>
        public event GetOpenLocksCompletedEventHandler GetOpenLocksCompleted;
        
        /// <remarks/>
        public event GetSessionUserNamesCompletedEventHandler GetSessionUserNamesCompleted;
        
        /// <remarks/>
        public event GetEventLogDataCompletedEventHandler GetEventLogDataCompleted;
        
        /// <remarks/>
        public event BackupSecurityTablesCompletedEventHandler BackupSecurityTablesCompleted;
        
        /// <remarks/>
        public event RestoreSecurityTablesCompletedEventHandler RestoreSecurityTablesCompleted;
        
        /// <remarks/>
        public event AddUserWithDefaultRoleCompletedEventHandler AddUserWithDefaultRoleCompleted;
        
        /// <remarks/>
        public event KeyMgr_GetEncryptionConfigDataSetCompletedEventHandler KeyMgr_GetEncryptionConfigDataSetCompleted;
        
        /// <remarks/>
        public event KeyMgr_AddNewEncryptionKeyCompletedEventHandler KeyMgr_AddNewEncryptionKeyCompleted;
        
        /// <remarks/>
        public event KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventHandler KeyMgr_EnsureComplianceWithCurrentKeyCompleted;
        
        /// <remarks/>
        public event KeyMgr_GetVerboseProgressTextCompletedEventHandler KeyMgr_GetVerboseProgressTextCompleted;
        
        /// <remarks/>
        public event GetSerializedClientDefCompletedEventHandler GetSerializedClientDefCompleted;
        
        /// <remarks/>
        public event GetClientDefFileInfoCompletedEventHandler GetClientDefFileInfoCompleted;
        
        /// <remarks/>
        public event GetClientDefFileDataCompletedEventHandler GetClientDefFileDataCompleted;
        
        /// <remarks/>
        public event ValidateAllocationRangeCompletedEventHandler ValidateAllocationRangeCompleted;
        
        /// <remarks/>
        public event WriteAllocToTableCompletedEventHandler WriteAllocToTableCompleted;
        
        /// <remarks/>
        public event ImportAllocationCompletedEventHandler ImportAllocationCompleted;
        
        /// <remarks/>
        public event GetSerialNoInfoCompletedEventHandler GetSerialNoInfoCompleted;
        
        /// <remarks/>
        public event GetCommSerialNoInfoCompletedEventHandler GetCommSerialNoInfoCompleted;
        
        /// <remarks/>
        public event InsertUpdateUnitIntoTableCompletedEventHandler InsertUpdateUnitIntoTableCompleted;
        
        /// <remarks/>
        public event GetSequenceNamesForCustomerCfgCompletedEventHandler GetSequenceNamesForCustomerCfgCompleted;
        
        /// <remarks/>
        public event GetNewUnitBooksCompletedEventHandler GetNewUnitBooksCompleted;
        
        /// <remarks/>
        public event SendCurrentUnitBooksCompletedEventHandler SendCurrentUnitBooksCompleted;
        
        /// <remarks/>
        public event RecordUnloadedUnitBooksInDatabaseCompletedEventHandler RecordUnloadedUnitBooksInDatabaseCompleted;
        
        /// <remarks/>
        public event GetAllSerialNosCompletedEventHandler GetAllSerialNosCompleted;
        
        /// <remarks/>
        public event GetAllAssignedBooksCompletedEventHandler GetAllAssignedBooksCompleted;
        
        /// <remarks/>
        public event AllocationLeftCompletedEventHandler AllocationLeftCompleted;
        
        /// <remarks/>
        public event AllocationBooksLeftCompletedEventHandler AllocationBooksLeftCompleted;
        
        /// <remarks/>
        public event SetUnitCfgInDeviceCompletedEventHandler SetUnitCfgInDeviceCompleted;
        
        /// <remarks/>
        public event GetCommLogDataCompletedEventHandler GetCommLogDataCompleted;
        
        /// <remarks/>
        public event PutAcwRangeFileInTableCompletedEventHandler PutAcwRangeFileInTableCompleted;
        
        /// <remarks/>
        public event SetUnitStatusCompletedEventHandler SetUnitStatusCompleted;
        
        /// <remarks/>
        public event SetUnitStatusAtomicCompletedEventHandler SetUnitStatusAtomicCompleted;
        
        /// <remarks/>
        public event SetUnitLastCommDateCompletedEventHandler SetUnitLastCommDateCompleted;
        
        /// <remarks/>
        public event DeleteFreezeOrThawUnitCompletedEventHandler DeleteFreezeOrThawUnitCompleted;
        
        /// <remarks/>
        public event GetUnassignedSerialNoListCompletedEventHandler GetUnassignedSerialNoListCompleted;
        
        /// <remarks/>
        public event GetAllUnitBooksCompletedEventHandler GetAllUnitBooksCompleted;
        
        /// <remarks/>
        public event UpdateBookLastIssuedCompletedEventHandler UpdateBookLastIssuedCompleted;
        
        /// <remarks/>
        public event SetUnitSubCfgInDeviceCompletedEventHandler SetUnitSubCfgInDeviceCompleted;
        
        /// <remarks/>
        public event SetUnitMeterTraxCfgInDeviceCompletedEventHandler SetUnitMeterTraxCfgInDeviceCompleted;
        
        /// <remarks/>
        public event GetUnitsAssignedToSubConfigCompletedEventHandler GetUnitsAssignedToSubConfigCompleted;
        
        /// <remarks/>
        public event MarkAllocAndSequenceAsDeletedCompletedEventHandler MarkAllocAndSequenceAsDeletedCompleted;
        
        /// <remarks/>
        public event AssignNewSubConfigToUnitsCompletedEventHandler AssignNewSubConfigToUnitsCompleted;
        
        /// <remarks/>
        public event DeleteAllocationsAndSequencesCompletedEventHandler DeleteAllocationsAndSequencesCompleted;
        
        /// <remarks/>
        public event InsertCommLogIntoTableCompletedEventHandler InsertCommLogIntoTableCompleted;
        
        /// <remarks/>
        public event GetMeterTraxFileBytesCompletedEventHandler GetMeterTraxFileBytesCompleted;
        
        /// <remarks/>
        public event GetDefinitionListCompletedEventHandler GetDefinitionListCompleted;
        
        /// <remarks/>
        public event SaveImportExportDefinitionCompletedEventHandler SaveImportExportDefinitionCompleted;
        
        /// <remarks/>
        public event RetrieveImportExportDefinitionCompletedEventHandler RetrieveImportExportDefinitionCompleted;
        
        /// <remarks/>
        public event BeginDefinitionEditCompletedEventHandler BeginDefinitionEditCompleted;
        
        /// <remarks/>
        public event EndDefinitionEditCompletedEventHandler EndDefinitionEditCompleted;
        
        /// <remarks/>
        public event CancelDefinitionEditCompletedEventHandler CancelDefinitionEditCompleted;
        
        /// <remarks/>
        public event DeleteImportExportDefinitionCompletedEventHandler DeleteImportExportDefinitionCompleted;
        
        /// <remarks/>
        public event SaveImportExportDelimitersCompletedEventHandler SaveImportExportDelimitersCompleted;
        
        /// <remarks/>
        public event RetrieveImportExportDelimitersCompletedEventHandler RetrieveImportExportDelimitersCompleted;
        
        /// <remarks/>
        public event RetrieveImportExportDefinitionHistoryCompletedEventHandler RetrieveImportExportDefinitionHistoryCompleted;
        
        /// <remarks/>
        public event RetrieveImportExportExecuteHistoryCompletedEventHandler RetrieveImportExportExecuteHistoryCompleted;
        
        /// <remarks/>
        public event RetrieveImportExportSummaryCompletedEventHandler RetrieveImportExportSummaryCompleted;
        
        /// <remarks/>
        public event CreateWarningsTrackingExportsCompletedEventHandler CreateWarningsTrackingExportsCompleted;
        
        /// <remarks/>
        public event ExecuteImportExportDefinitionCompletedEventHandler ExecuteImportExportDefinitionCompleted;
        
        /// <remarks/>
        public event ExecuteImpExpDef_ReturnSummaryCompletedEventHandler ExecuteImpExpDef_ReturnSummaryCompleted;
        
        /// <remarks/>
        public event PrepareForDefinitionRunCompletedEventHandler PrepareForDefinitionRunCompleted;
        
        /// <remarks/>
        public event CancelDefinitionRunCompletedEventHandler CancelDefinitionRunCompleted;
        
        /// <remarks/>
        public event ExecuteExportToByteArrayCompletedEventHandler ExecuteExportToByteArrayCompleted;
        
        /// <remarks/>
        public event GetImportExportFileInfoCompletedEventHandler GetImportExportFileInfoCompleted;
        
        /// <remarks/>
        public event GetImportExportFileDataCompletedEventHandler GetImportExportFileDataCompleted;
        
        /// <remarks/>
        public event ExecuteFTPSessionCompletedEventHandler ExecuteFTPSessionCompleted;
        
        /// <remarks/>
        public event ExecuteExternalExeCompletedEventHandler ExecuteExternalExeCompleted;
        
        /// <remarks/>
        public event UpdateGeoCodeInformationForTableCompletedEventHandler UpdateGeoCodeInformationForTableCompleted;
        
        /// <remarks/>
        public event RetrieveCourtObjectsAStringCompletedEventHandler RetrieveCourtObjectsAStringCompleted;
        
        /// <remarks/>
        public event SaveCourtObjectsFromStringCompletedEventHandler SaveCourtObjectsFromStringCompleted;
        
        /// <remarks/>
        public event WriteOutCourtDateListCompletedEventHandler WriteOutCourtDateListCompleted;
        
        /// <remarks/>
        public event ReadInNSWXMLFilesCompletedEventHandler ReadInNSWXMLFilesCompleted;
        
        /// <remarks/>
        public event IsNSWClientCompletedEventHandler IsNSWClientCompleted;
        
        /// <remarks/>
        public event TransferNSWFilesCompletedEventHandler TransferNSWFilesCompleted;
        
        /// <remarks/>
        public event GetNSWFileTransferVerboseOutputCompletedEventHandler GetNSWFileTransferVerboseOutputCompleted;
        
        /// <remarks/>
        public event GetTaskGroupListCompletedEventHandler GetTaskGroupListCompleted;
        
        /// <remarks/>
        public event SaveTaskGroupCompletedEventHandler SaveTaskGroupCompleted;
        
        /// <remarks/>
        public event GetTaskGroupCompletedEventHandler GetTaskGroupCompleted;
        
        /// <remarks/>
        public event BeginTaskGroupEditCompletedEventHandler BeginTaskGroupEditCompleted;
        
        /// <remarks/>
        public event EndTaskGroupEditCompletedEventHandler EndTaskGroupEditCompleted;
        
        /// <remarks/>
        public event CancelTaskGroupEditCompletedEventHandler CancelTaskGroupEditCompleted;
        
        /// <remarks/>
        public event DeleteTaskGroupCompletedEventHandler DeleteTaskGroupCompleted;
        
        /// <remarks/>
        public event GetScheduleRowVersionListCompletedEventHandler GetScheduleRowVersionListCompleted;
        
        /// <remarks/>
        public event GetScheduleListCompletedEventHandler GetScheduleListCompleted;
        
        /// <remarks/>
        public event RefreshScheduleListCompletedEventHandler RefreshScheduleListCompleted;
        
        /// <remarks/>
        public event SaveScheduleCompletedEventHandler SaveScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleCompletedEventHandler GetScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleHistoryCompletedEventHandler GetScheduleHistoryCompleted;
        
        /// <remarks/>
        public event BeginScheduleRunCompletedEventHandler BeginScheduleRunCompleted;
        
        /// <remarks/>
        public event EndScheduleRunCompletedEventHandler EndScheduleRunCompleted;
        
        /// <remarks/>
        public event BeginScheduleEditCompletedEventHandler BeginScheduleEditCompleted;
        
        /// <remarks/>
        public event EndScheduleEditCompletedEventHandler EndScheduleEditCompleted;
        
        /// <remarks/>
        public event CancelScheduleEditCompletedEventHandler CancelScheduleEditCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event BackupTaskTablesCompletedEventHandler BackupTaskTablesCompleted;
        
        /// <remarks/>
        public event RestoreTaskTablesCompletedEventHandler RestoreTaskTablesCompleted;
        
        /// <remarks/>
        public event GetNewCommSessionFolderCompletedEventHandler GetNewCommSessionFolderCompleted;
        
        /// <remarks/>
        public event CreateFileInCommSessionCompletedEventHandler CreateFileInCommSessionCompleted;
        
        /// <remarks/>
        public event GetFileInCommSessionCompletedEventHandler GetFileInCommSessionCompleted;
        
        /// <remarks/>
        public event ImportCommSessionDataCompletedEventHandler ImportCommSessionDataCompleted;
        
        /// <remarks/>
        public event ImportCommSessionData_ExCompletedEventHandler ImportCommSessionData_ExCompleted;
        
        /// <remarks/>
        public event ImportHHEventLogCompletedEventHandler ImportHHEventLogCompleted;
        
        /// <remarks/>
        public event CompressHandheldFileCompletedEventHandler CompressHandheldFileCompleted;
        
        /// <remarks/>
        public event GetHHConfigFileInfoAsStringCompletedEventHandler GetHHConfigFileInfoAsStringCompleted;
        
        /// <remarks/>
        public event GetHHConfigFileCompletedEventHandler GetHHConfigFileCompleted;
        
        /// <remarks/>
        public event GetHHPlatformFileInfoAsStringCompletedEventHandler GetHHPlatformFileInfoAsStringCompleted;
        
        /// <remarks/>
        public event GetHHPlatformFileCompletedEventHandler GetHHPlatformFileCompleted;
        
        /// <remarks/>
        public event GetHHFileCompletedEventHandler GetHHFileCompleted;
        
        /// <remarks/>
        public event HandheldIsValidCompletedEventHandler HandheldIsValidCompleted;
        
        /// <remarks/>
        public event HandheldIsValidForParkeonCompletedEventHandler HandheldIsValidForParkeonCompleted;
        
        /// <remarks/>
        public event HandheldIsValidForParkNOWCompletedEventHandler HandheldIsValidForParkNOWCompleted;
        
        /// <remarks/>
        public event HandheldIsValidForDPTCompletedEventHandler HandheldIsValidForDPTCompleted;
        
        /// <remarks/>
        public event SearchHotSheetCompletedEventHandler SearchHotSheetCompleted;
        
        /// <remarks/>
        public event CreateWirelessSessionCompletedEventHandler CreateWirelessSessionCompleted;
        
        /// <remarks/>
        public event PutWirelessFileCompletedEventHandler PutWirelessFileCompleted;
        
        /// <remarks/>
        public event EndWirelessSessionCompletedEventHandler EndWirelessSessionCompleted;
        
        /// <remarks/>
        public event RemoveOldSessionsCompletedEventHandler RemoveOldSessionsCompleted;
        
        /// <remarks/>
        public event GetSchemaForAutoCITEDataCompletedEventHandler GetSchemaForAutoCITEDataCompleted;
        
        /// <remarks/>
        public event GetProviderInformationCompletedEventHandler GetProviderInformationCompleted;
        
        /// <remarks/>
        public event GetProviderInformationByNameCompletedEventHandler GetProviderInformationByNameCompleted;
        
        /// <remarks/>
        public event GetProviderTypeCompletedEventHandler GetProviderTypeCompleted;
        
        /// <remarks/>
        public event GetConnectionNamesCompletedEventHandler GetConnectionNamesCompleted;
        
        /// <remarks/>
        public event GetActiveConnectionNameCompletedEventHandler GetActiveConnectionNameCompleted;
        
        /// <remarks/>
        public event SetActiveConnectionCompletedEventHandler SetActiveConnectionCompleted;
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event GetConnectionStringByNameCompletedEventHandler GetConnectionStringByNameCompleted;
        
        /// <remarks/>
        public event AddConnectionStringCompletedEventHandler AddConnectionStringCompleted;
        
        /// <remarks/>
        public event GetInstalledRootFilePathCompletedEventHandler GetInstalledRootFilePathCompleted;
        
        /// <remarks/>
        public event GetIssueApFilePathCompletedEventHandler GetIssueApFilePathCompleted;
        
        /// <remarks/>
        public event GetAgencyListFilePathCompletedEventHandler GetAgencyListFilePathCompleted;
        
        /// <remarks/>
        public event GetImpExpDefFilePathCompletedEventHandler GetImpExpDefFilePathCompleted;
        
        /// <remarks/>
        public event GetImportHistoryPathCompletedEventHandler GetImportHistoryPathCompleted;
        
        /// <remarks/>
        public event GetExportHistoryPathCompletedEventHandler GetExportHistoryPathCompleted;
        
        /// <remarks/>
        public event GetReportParameterFilePathCompletedEventHandler GetReportParameterFilePathCompleted;
        
        /// <remarks/>
        public event GetCommHandheldsPathCompletedEventHandler GetCommHandheldsPathCompleted;
        
        /// <remarks/>
        public event GetCommPlatformsPathCompletedEventHandler GetCommPlatformsPathCompleted;
        
        /// <remarks/>
        public event GetCommConfigurationsPathCompletedEventHandler GetCommConfigurationsPathCompleted;
        
        /// <remarks/>
        public event GetCommSessionsPathCompletedEventHandler GetCommSessionsPathCompleted;
        
        /// <remarks/>
        public event GetCommWirelessSessionsPathCompletedEventHandler GetCommWirelessSessionsPathCompleted;
        
        /// <remarks/>
        public event GetUserSuppliedListsRootPathCompletedEventHandler GetUserSuppliedListsRootPathCompleted;
        
        /// <remarks/>
        public event GetAcwRangePathCompletedEventHandler GetAcwRangePathCompleted;
        
        /// <remarks/>
        public event GetXMLDownloadPathCompletedEventHandler GetXMLDownloadPathCompleted;
        
        /// <remarks/>
        public event ForceConfigEncryptionCompletedEventHandler ForceConfigEncryptionCompleted;
        
        /// <remarks/>
        public event GetAllConfigurationItemsCompletedEventHandler GetAllConfigurationItemsCompleted;
        
        /// <remarks/>
        public event SetAllConfigurationItemsCompletedEventHandler SetAllConfigurationItemsCompleted;
        
        /// <remarks/>
        public event GetOneConfigurationItemCompletedEventHandler GetOneConfigurationItemCompleted;
        
        /// <remarks/>
        public event SetOneConfigurationItemCompletedEventHandler SetOneConfigurationItemCompleted;
        
        /// <remarks/>
        public event DeleteOneConfigurationItemCompletedEventHandler DeleteOneConfigurationItemCompleted;
        
        /// <remarks/>
        public event GetEagleProgramDataCompletedEventHandler GetEagleProgramDataCompleted;
        
        /// <remarks/>
        public event GetPopularListNamesCompletedEventHandler GetPopularListNamesCompleted;
        
        /// <remarks/>
        public event BackupConfigurationTableCompletedEventHandler BackupConfigurationTableCompleted;
        
        /// <remarks/>
        public event RestoreConfigurationTableCompletedEventHandler RestoreConfigurationTableCompleted;
        
        /// <remarks/>
        public event BackupSystemFilesCompletedEventHandler BackupSystemFilesCompleted;
        
        /// <remarks/>
        public event RestoreSystemFilesCompletedEventHandler RestoreSystemFilesCompleted;
        
        /// <remarks/>
        public event RegisterComputerCompletedEventHandler RegisterComputerCompleted;
        
        /// <remarks/>
        public event GetRegisteredComputerListCompletedEventHandler GetRegisteredComputerListCompleted;
        
        /// <remarks/>
        public event UpdateRegisteredComputerListCompletedEventHandler UpdateRegisteredComputerListCompleted;
        
        /// <remarks/>
        public event ComputerTableChangedCompletedEventHandler ComputerTableChangedCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event HelloWorldVirtualFldTestCompletedEventHandler HelloWorldVirtualFldTestCompleted;
        
        /// <remarks/>
        public event ParentStructNameForDetailStructCompletedEventHandler ParentStructNameForDetailStructCompleted;
        
        /// <remarks/>
        public event PerformQueryCompletedEventHandler PerformQueryCompleted;
        
        /// <remarks/>
        public event PerformNonQueryCompletedEventHandler PerformNonQueryCompleted;
        
        /// <remarks/>
        public event PerformExecuteScalarCompletedEventHandler PerformExecuteScalarCompleted;
        
        /// <remarks/>
        public event InsertDataCompletedEventHandler InsertDataCompleted;
        
        /// <remarks/>
        public event InsertData_AlwaysSetGeneratedKeyCompletedEventHandler InsertData_AlwaysSetGeneratedKeyCompleted;
        
        /// <remarks/>
        public event UpdateDataCompletedEventHandler UpdateDataCompleted;
        
        /// <remarks/>
        public event UpdateDataOneTransactionCompletedEventHandler UpdateDataOneTransactionCompleted;
        
        /// <remarks/>
        public event AddStatusCompletedEventHandler AddStatusCompleted;
        
        /// <remarks/>
        public event ImportRecordCompletedEventHandler ImportRecordCompleted;
        
        /// <remarks/>
        public event ImportRecordAndReturnDataSetCompletedEventHandler ImportRecordAndReturnDataSetCompleted;
        
        /// <remarks/>
        public event PostDataFilesCompletedEventHandler PostDataFilesCompleted;
        
        /// <remarks/>
        public event TranslateProviderSpecificCharCompletedEventHandler TranslateProviderSpecificCharCompleted;
        
        /// <remarks/>
        public event GetProviderSpecificParameterNameCompletedEventHandler GetProviderSpecificParameterNameCompleted;
        
        /// <remarks/>
        public event GetProviderSpecificStartWithStringCompletedEventHandler GetProviderSpecificStartWithStringCompleted;
        
        /// <remarks/>
        public event BackupFireBirdDBCompletedEventHandler BackupFireBirdDBCompleted;
        
        /// <remarks/>
        public event RunReportAsynchronousCompletedEventHandler RunReportAsynchronousCompleted;
        
        /// <remarks/>
        public event KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventHandler KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompleted;
        
        /// <remarks/>
        public event ExecuteImportExportDefinitionAsynchronousCompletedEventHandler ExecuteImportExportDefinitionAsynchronousCompleted;
        
        /// <remarks/>
        public event ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventHandler ExecuteImpExpDef_ReturnSummaryAsynchronousCompleted;
        
        /// <remarks/>
        public event ExecuteFTPSessionAsynchronousCompletedEventHandler ExecuteFTPSessionAsynchronousCompleted;
        
        /// <remarks/>
        public event ReadInNSWXMLFilesAsynchronousCompletedEventHandler ReadInNSWXMLFilesAsynchronousCompleted;
        
        /// <remarks/>
        public event TransferNSWFilesAsynchronousCompletedEventHandler TransferNSWFilesAsynchronousCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RestoreFireBirdDB", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreFireBirdDB(string SrcFilename, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("RestoreFireBirdDB", new object[] {
                        SrcFilename,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreFireBirdDBAsync(string SrcFilename, string pAuthenticateKey, string errorMessage) {
            this.RestoreFireBirdDBAsync(SrcFilename, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void RestoreFireBirdDBAsync(string SrcFilename, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.RestoreFireBirdDBOperationCompleted == null)) {
                this.RestoreFireBirdDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreFireBirdDBOperationCompleted);
            }
            this.InvokeAsync("RestoreFireBirdDB", new object[] {
                        SrcFilename,
                        pAuthenticateKey,
                        errorMessage}, this.RestoreFireBirdDBOperationCompleted, userState);
        }
        
        private void OnRestoreFireBirdDBOperationCompleted(object arg) {
            if ((this.RestoreFireBirdDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreFireBirdDBCompleted(this, new RestoreFireBirdDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetFireBirdVerboseT" +
            "ext", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFireBirdVerboseText(string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetFireBirdVerboseText", new object[] {
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFireBirdVerboseTextAsync(string pAuthenticateKey, string errorMessage) {
            this.GetFireBirdVerboseTextAsync(pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetFireBirdVerboseTextAsync(string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetFireBirdVerboseTextOperationCompleted == null)) {
                this.GetFireBirdVerboseTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFireBirdVerboseTextOperationCompleted);
            }
            this.InvokeAsync("GetFireBirdVerboseText", new object[] {
                        pAuthenticateKey,
                        errorMessage}, this.GetFireBirdVerboseTextOperationCompleted, userState);
        }
        
        private void OnGetFireBirdVerboseTextOperationCompleted(object arg) {
            if ((this.GetFireBirdVerboseTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFireBirdVerboseTextCompleted(this, new GetFireBirdVerboseTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetListFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetListFiles(string[] tableNames, string lockHolder, ListFileType fileType, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetListFiles", new object[] {
                        tableNames,
                        lockHolder,
                        fileType,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetListFilesAsync(string[] tableNames, string lockHolder, ListFileType fileType, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetListFilesAsync(tableNames, lockHolder, fileType, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetListFilesAsync(string[] tableNames, string lockHolder, ListFileType fileType, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetListFilesOperationCompleted == null)) {
                this.GetListFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListFilesOperationCompleted);
            }
            this.InvokeAsync("GetListFiles", new object[] {
                        tableNames,
                        lockHolder,
                        fileType,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetListFilesOperationCompleted, userState);
        }
        
        private void OnGetListFilesOperationCompleted(object arg) {
            if ((this.GetListFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListFilesCompleted(this, new GetListFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetListFilesAsDataS" +
            "et", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetListFilesAsDataSet(string[] tableNames, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetListFilesAsDataSet", new object[] {
                        tableNames,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetListFilesAsDataSetAsync(string[] tableNames, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetListFilesAsDataSetAsync(tableNames, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetListFilesAsDataSetAsync(string[] tableNames, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetListFilesAsDataSetOperationCompleted == null)) {
                this.GetListFilesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListFilesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetListFilesAsDataSet", new object[] {
                        tableNames,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetListFilesAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetListFilesAsDataSetOperationCompleted(object arg) {
            if ((this.GetListFilesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListFilesAsDataSetCompleted(this, new GetListFilesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetOneHotSheetFileA" +
            "sDataSet", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOneHotSheetFileAsDataSet(string hotSheetName, string fileName, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetOneHotSheetFileAsDataSet", new object[] {
                        hotSheetName,
                        fileName,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneHotSheetFileAsDataSetAsync(string hotSheetName, string fileName, string pAuthenticateKey, string errorMessage) {
            this.GetOneHotSheetFileAsDataSetAsync(hotSheetName, fileName, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetOneHotSheetFileAsDataSetAsync(string hotSheetName, string fileName, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetOneHotSheetFileAsDataSetOperationCompleted == null)) {
                this.GetOneHotSheetFileAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneHotSheetFileAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetOneHotSheetFileAsDataSet", new object[] {
                        hotSheetName,
                        fileName,
                        pAuthenticateKey,
                        errorMessage}, this.GetOneHotSheetFileAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetOneHotSheetFileAsDataSetOperationCompleted(object arg) {
            if ((this.GetOneHotSheetFileAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneHotSheetFileAsDataSetCompleted(this, new GetOneHotSheetFileAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BuildDataRelations", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BuildDataRelations(System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("BuildDataRelations", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BuildDataRelationsAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.BuildDataRelationsAsync(dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void BuildDataRelationsAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.BuildDataRelationsOperationCompleted == null)) {
                this.BuildDataRelationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildDataRelationsOperationCompleted);
            }
            this.InvokeAsync("BuildDataRelations", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.BuildDataRelationsOperationCompleted, userState);
        }
        
        private void OnBuildDataRelationsOperationCompleted(object arg) {
            if ((this.BuildDataRelationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuildDataRelationsCompleted(this, new BuildDataRelationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginListEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BeginListEdit(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("BeginListEdit", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BeginListEditAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.BeginListEditAsync(listName, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void BeginListEditAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.BeginListEditOperationCompleted == null)) {
                this.BeginListEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginListEditOperationCompleted);
            }
            this.InvokeAsync("BeginListEdit", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.BeginListEditOperationCompleted, userState);
        }
        
        private void OnBeginListEditOperationCompleted(object arg) {
            if ((this.BeginListEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginListEditCompleted(this, new BeginListEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndListEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndListEdit(System.Data.DataSet dataSet, string listName, System.DateTime effectiveDate, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("EndListEdit", new object[] {
                        dataSet,
                        listName,
                        effectiveDate,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndListEditAsync(System.Data.DataSet dataSet, string listName, System.DateTime effectiveDate, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.EndListEditAsync(dataSet, listName, effectiveDate, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void EndListEditAsync(System.Data.DataSet dataSet, string listName, System.DateTime effectiveDate, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.EndListEditOperationCompleted == null)) {
                this.EndListEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndListEditOperationCompleted);
            }
            this.InvokeAsync("EndListEdit", new object[] {
                        dataSet,
                        listName,
                        effectiveDate,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.EndListEditOperationCompleted, userState);
        }
        
        private void OnEndListEditOperationCompleted(object arg) {
            if ((this.EndListEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndListEditCompleted(this, new EndListEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelListEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelListEdit(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("CancelListEdit", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelListEditAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.CancelListEditAsync(listName, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void CancelListEditAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.CancelListEditOperationCompleted == null)) {
                this.CancelListEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelListEditOperationCompleted);
            }
            this.InvokeAsync("CancelListEdit", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.CancelListEditOperationCompleted, userState);
        }
        
        private void OnCancelListEditOperationCompleted(object arg) {
            if ((this.CancelListEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelListEditCompleted(this, new CancelListEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginHotSheetEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BeginHotSheetEdit(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("BeginHotSheetEdit", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BeginHotSheetEditAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage) {
            this.BeginHotSheetEditAsync(hotSheetName, fileName, lockHolder, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void BeginHotSheetEditAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.BeginHotSheetEditOperationCompleted == null)) {
                this.BeginHotSheetEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginHotSheetEditOperationCompleted);
            }
            this.InvokeAsync("BeginHotSheetEdit", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage}, this.BeginHotSheetEditOperationCompleted, userState);
        }
        
        private void OnBeginHotSheetEditOperationCompleted(object arg) {
            if ((this.BeginHotSheetEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginHotSheetEditCompleted(this, new BeginHotSheetEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndHotSheetEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndHotSheetEdit(System.Data.DataSet dataSet, string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("EndHotSheetEdit", new object[] {
                        dataSet,
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndHotSheetEditAsync(System.Data.DataSet dataSet, string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage) {
            this.EndHotSheetEditAsync(dataSet, hotSheetName, fileName, lockHolder, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void EndHotSheetEditAsync(System.Data.DataSet dataSet, string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.EndHotSheetEditOperationCompleted == null)) {
                this.EndHotSheetEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndHotSheetEditOperationCompleted);
            }
            this.InvokeAsync("EndHotSheetEdit", new object[] {
                        dataSet,
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage}, this.EndHotSheetEditOperationCompleted, userState);
        }
        
        private void OnEndHotSheetEditOperationCompleted(object arg) {
            if ((this.EndHotSheetEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndHotSheetEditCompleted(this, new EndHotSheetEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelHotSheetEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelHotSheetEdit(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("CancelHotSheetEdit", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelHotSheetEditAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage) {
            this.CancelHotSheetEditAsync(hotSheetName, fileName, lockHolder, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void CancelHotSheetEditAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.CancelHotSheetEditOperationCompleted == null)) {
                this.CancelHotSheetEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelHotSheetEditOperationCompleted);
            }
            this.InvokeAsync("CancelHotSheetEdit", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage}, this.CancelHotSheetEditOperationCompleted, userState);
        }
        
        private void OnCancelHotSheetEditOperationCompleted(object arg) {
            if ((this.CancelHotSheetEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelHotSheetEditCompleted(this, new CancelHotSheetEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllFileNamesForT" +
            "able", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllFileNamesForTable(string tableName, ListFileType fileType, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetAllFileNamesForTable", new object[] {
                        tableName,
                        fileType,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileNamesForTableAsync(string tableName, ListFileType fileType, string pAuthenticateKey, string errorMessage) {
            this.GetAllFileNamesForTableAsync(tableName, fileType, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetAllFileNamesForTableAsync(string tableName, ListFileType fileType, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetAllFileNamesForTableOperationCompleted == null)) {
                this.GetAllFileNamesForTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileNamesForTableOperationCompleted);
            }
            this.InvokeAsync("GetAllFileNamesForTable", new object[] {
                        tableName,
                        fileType,
                        pAuthenticateKey,
                        errorMessage}, this.GetAllFileNamesForTableOperationCompleted, userState);
        }
        
        private void OnGetAllFileNamesForTableOperationCompleted(object arg) {
            if ((this.GetAllFileNamesForTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileNamesForTableCompleted(this, new GetAllFileNamesForTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateMTX_Location", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateMTX_Location(System.Data.DataSet uDataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("UpdateMTX_Location", new object[] {
                        uDataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMTX_LocationAsync(System.Data.DataSet uDataSet, string pAuthenticateKey, string errorMessage) {
            this.UpdateMTX_LocationAsync(uDataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void UpdateMTX_LocationAsync(System.Data.DataSet uDataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.UpdateMTX_LocationOperationCompleted == null)) {
                this.UpdateMTX_LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMTX_LocationOperationCompleted);
            }
            this.InvokeAsync("UpdateMTX_Location", new object[] {
                        uDataSet,
                        pAuthenticateKey,
                        errorMessage}, this.UpdateMTX_LocationOperationCompleted, userState);
        }
        
        private void OnUpdateMTX_LocationOperationCompleted(object arg) {
            if ((this.UpdateMTX_LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMTX_LocationCompleted(this, new UpdateMTX_LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetInventoryGeoCode" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetInventoryGeoCode(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetInventoryGeoCode", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryGeoCodeAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetInventoryGeoCodeAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetInventoryGeoCodeAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetInventoryGeoCodeOperationCompleted == null)) {
                this.GetInventoryGeoCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryGeoCodeOperationCompleted);
            }
            this.InvokeAsync("GetInventoryGeoCode", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetInventoryGeoCodeOperationCompleted, userState);
        }
        
        private void OnGetInventoryGeoCodeOperationCompleted(object arg) {
            if ((this.GetInventoryGeoCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryGeoCodeCompleted(this, new GetInventoryGeoCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetEffectiveDate", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetEffectiveDate(string tableName, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetEffectiveDate", new object[] {
                        tableName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetEffectiveDateAsync(string tableName, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetEffectiveDateAsync(tableName, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetEffectiveDateAsync(string tableName, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetEffectiveDateOperationCompleted == null)) {
                this.GetEffectiveDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEffectiveDateOperationCompleted);
            }
            this.InvokeAsync("GetEffectiveDate", new object[] {
                        tableName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetEffectiveDateOperationCompleted, userState);
        }
        
        private void OnGetEffectiveDateOperationCompleted(object arg) {
            if ((this.GetEffectiveDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEffectiveDateCompleted(this, new GetEffectiveDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCompositeDate", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetCompositeDate(string tableName, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetCompositeDate", new object[] {
                        tableName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositeDateAsync(string tableName, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetCompositeDateAsync(tableName, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetCompositeDateAsync(string tableName, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetCompositeDateOperationCompleted == null)) {
                this.GetCompositeDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositeDateOperationCompleted);
            }
            this.InvokeAsync("GetCompositeDate", new object[] {
                        tableName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetCompositeDateOperationCompleted, userState);
        }
        
        private void OnGetCompositeDateOperationCompleted(object arg) {
            if ((this.GetCompositeDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositeDateCompleted(this, new GetCompositeDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCompositeFileInf" +
            "ormation", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompositeFileInformation(int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetCompositeFileInformation", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositeFileInformationAsync(int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetCompositeFileInformationAsync(iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetCompositeFileInformationAsync(int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetCompositeFileInformationOperationCompleted == null)) {
                this.GetCompositeFileInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositeFileInformationOperationCompleted);
            }
            this.InvokeAsync("GetCompositeFileInformation", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetCompositeFileInformationOperationCompleted, userState);
        }
        
        private void OnGetCompositeFileInformationOperationCompleted(object arg) {
            if ((this.GetCompositeFileInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositeFileInformationCompleted(this, new GetCompositeFileInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCompositeFileInf" +
            "ormationForHHPlatform", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompositeFileInformationForHHPlatform(HardwareType iHardwareType, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetCompositeFileInformationForHHPlatform", new object[] {
                        iHardwareType,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositeFileInformationForHHPlatformAsync(HardwareType iHardwareType, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetCompositeFileInformationForHHPlatformAsync(iHardwareType, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetCompositeFileInformationForHHPlatformAsync(HardwareType iHardwareType, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetCompositeFileInformationForHHPlatformOperationCompleted == null)) {
                this.GetCompositeFileInformationForHHPlatformOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositeFileInformationForHHPlatformOperationCompleted);
            }
            this.InvokeAsync("GetCompositeFileInformationForHHPlatform", new object[] {
                        iHardwareType,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetCompositeFileInformationForHHPlatformOperationCompleted, userState);
        }
        
        private void OnGetCompositeFileInformationForHHPlatformOperationCompleted(object arg) {
            if ((this.GetCompositeFileInformationForHHPlatformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositeFileInformationForHHPlatformCompleted(this, new GetCompositeFileInformationForHHPlatformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RefreshCompositeFil" +
            "es", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshCompositeFiles(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, ref string errorMessage) {
            object[] results = this.Invoke("RefreshCompositeFiles", new object[] {
                        serializedFileSet,
                        iSubConfigKey,
                        pAuthenticateKey,
                        iPlatformSubFolder,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshCompositeFilesAsync(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, string errorMessage) {
            this.RefreshCompositeFilesAsync(serializedFileSet, iSubConfigKey, pAuthenticateKey, iPlatformSubFolder, errorMessage, null);
        }
        
        /// <remarks/>
        public void RefreshCompositeFilesAsync(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, string errorMessage, object userState) {
            if ((this.RefreshCompositeFilesOperationCompleted == null)) {
                this.RefreshCompositeFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshCompositeFilesOperationCompleted);
            }
            this.InvokeAsync("RefreshCompositeFiles", new object[] {
                        serializedFileSet,
                        iSubConfigKey,
                        pAuthenticateKey,
                        iPlatformSubFolder,
                        errorMessage}, this.RefreshCompositeFilesOperationCompleted, userState);
        }
        
        private void OnRefreshCompositeFilesOperationCompleted(object arg) {
            if ((this.RefreshCompositeFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshCompositeFilesCompleted(this, new RefreshCompositeFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RefreshCompositeFil" +
            "es2", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshCompositeFiles2(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, bool iAllowCompression, ref string errorMessage) {
            object[] results = this.Invoke("RefreshCompositeFiles2", new object[] {
                        serializedFileSet,
                        iSubConfigKey,
                        pAuthenticateKey,
                        iPlatformSubFolder,
                        iAllowCompression,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshCompositeFiles2Async(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, bool iAllowCompression, string errorMessage) {
            this.RefreshCompositeFiles2Async(serializedFileSet, iSubConfigKey, pAuthenticateKey, iPlatformSubFolder, iAllowCompression, errorMessage, null);
        }
        
        /// <remarks/>
        public void RefreshCompositeFiles2Async(string serializedFileSet, int iSubConfigKey, string pAuthenticateKey, string iPlatformSubFolder, bool iAllowCompression, string errorMessage, object userState) {
            if ((this.RefreshCompositeFiles2OperationCompleted == null)) {
                this.RefreshCompositeFiles2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshCompositeFiles2OperationCompleted);
            }
            this.InvokeAsync("RefreshCompositeFiles2", new object[] {
                        serializedFileSet,
                        iSubConfigKey,
                        pAuthenticateKey,
                        iPlatformSubFolder,
                        iAllowCompression,
                        errorMessage}, this.RefreshCompositeFiles2OperationCompleted, userState);
        }
        
        private void OnRefreshCompositeFiles2OperationCompleted(object arg) {
            if ((this.RefreshCompositeFiles2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshCompositeFiles2Completed(this, new RefreshCompositeFiles2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DownloadACompositeF" +
            "ileChunk", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadACompositeFileChunk(string serializedFileSet, int chunkStartByte, int chunkLength, int iSubConfigKey, string iPlatformSubFolder, bool iAllowCompression, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("DownloadACompositeFileChunk", new object[] {
                        serializedFileSet,
                        chunkStartByte,
                        chunkLength,
                        iSubConfigKey,
                        iPlatformSubFolder,
                        iAllowCompression,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadACompositeFileChunkAsync(string serializedFileSet, int chunkStartByte, int chunkLength, int iSubConfigKey, string iPlatformSubFolder, bool iAllowCompression, string pAuthenticateKey, string errorMessage) {
            this.DownloadACompositeFileChunkAsync(serializedFileSet, chunkStartByte, chunkLength, iSubConfigKey, iPlatformSubFolder, iAllowCompression, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void DownloadACompositeFileChunkAsync(string serializedFileSet, int chunkStartByte, int chunkLength, int iSubConfigKey, string iPlatformSubFolder, bool iAllowCompression, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.DownloadACompositeFileChunkOperationCompleted == null)) {
                this.DownloadACompositeFileChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadACompositeFileChunkOperationCompleted);
            }
            this.InvokeAsync("DownloadACompositeFileChunk", new object[] {
                        serializedFileSet,
                        chunkStartByte,
                        chunkLength,
                        iSubConfigKey,
                        iPlatformSubFolder,
                        iAllowCompression,
                        pAuthenticateKey,
                        errorMessage}, this.DownloadACompositeFileChunkOperationCompleted, userState);
        }
        
        private void OnDownloadACompositeFileChunkOperationCompleted(object arg) {
            if ((this.DownloadACompositeFileChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadACompositeFileChunkCompleted(this, new DownloadACompositeFileChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/MakeCompositeLists", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MakeCompositeLists(string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("MakeCompositeLists", new object[] {
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MakeCompositeListsAsync(string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.MakeCompositeListsAsync(lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void MakeCompositeListsAsync(string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.MakeCompositeListsOperationCompleted == null)) {
                this.MakeCompositeListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeCompositeListsOperationCompleted);
            }
            this.InvokeAsync("MakeCompositeLists", new object[] {
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.MakeCompositeListsOperationCompleted, userState);
        }
        
        private void OnMakeCompositeListsOperationCompleted(object arg) {
            if ((this.MakeCompositeListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeCompositeListsCompleted(this, new MakeCompositeListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemoveEDTFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveEDTFile(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("RemoveEDTFile", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveEDTFileAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.RemoveEDTFileAsync(listName, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void RemoveEDTFileAsync(string listName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.RemoveEDTFileOperationCompleted == null)) {
                this.RemoveEDTFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveEDTFileOperationCompleted);
            }
            this.InvokeAsync("RemoveEDTFile", new object[] {
                        listName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.RemoveEDTFileOperationCompleted, userState);
        }
        
        private void OnRemoveEDTFileOperationCompleted(object arg) {
            if ((this.RemoveEDTFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveEDTFileCompleted(this, new RemoveEDTFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemoveHotSheetFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveHotSheetFile(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("RemoveHotSheetFile", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveHotSheetFileAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage) {
            this.RemoveHotSheetFileAsync(hotSheetName, fileName, lockHolder, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void RemoveHotSheetFileAsync(string hotSheetName, string fileName, string lockHolder, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.RemoveHotSheetFileOperationCompleted == null)) {
                this.RemoveHotSheetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveHotSheetFileOperationCompleted);
            }
            this.InvokeAsync("RemoveHotSheetFile", new object[] {
                        hotSheetName,
                        fileName,
                        lockHolder,
                        pAuthenticateKey,
                        errorMessage}, this.RemoveHotSheetFileOperationCompleted, userState);
        }
        
        private void OnRemoveHotSheetFileOperationCompleted(object arg) {
            if ((this.RemoveHotSheetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveHotSheetFileCompleted(this, new RemoveHotSheetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddHotSheetFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddHotSheetFile(string hotSheetName, string fileName, string sessionID, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("AddHotSheetFile", new object[] {
                        hotSheetName,
                        fileName,
                        sessionID,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHotSheetFileAsync(string hotSheetName, string fileName, string sessionID, string pAuthenticateKey, string errorMessage) {
            this.AddHotSheetFileAsync(hotSheetName, fileName, sessionID, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void AddHotSheetFileAsync(string hotSheetName, string fileName, string sessionID, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.AddHotSheetFileOperationCompleted == null)) {
                this.AddHotSheetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHotSheetFileOperationCompleted);
            }
            this.InvokeAsync("AddHotSheetFile", new object[] {
                        hotSheetName,
                        fileName,
                        sessionID,
                        pAuthenticateKey,
                        errorMessage}, this.AddHotSheetFileOperationCompleted, userState);
        }
        
        private void OnAddHotSheetFileOperationCompleted(object arg) {
            if ((this.AddHotSheetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHotSheetFileCompleted(this, new AddHotSheetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemovePopularFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePopularFile(string tableName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("RemovePopularFile", new object[] {
                        tableName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePopularFileAsync(string tableName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.RemovePopularFileAsync(tableName, lockHolder, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void RemovePopularFileAsync(string tableName, string lockHolder, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.RemovePopularFileOperationCompleted == null)) {
                this.RemovePopularFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePopularFileOperationCompleted);
            }
            this.InvokeAsync("RemovePopularFile", new object[] {
                        tableName,
                        lockHolder,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.RemovePopularFileOperationCompleted, userState);
        }
        
        private void OnRemovePopularFileOperationCompleted(object arg) {
            if ((this.RemovePopularFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePopularFileCompleted(this, new RemovePopularFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetTablesThatBelong" +
            "ToSubConfiguration", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetTablesThatBelongToSubConfiguration(int iSubConfigKey, string pAuthenticateKey, ref string oSubConfigName, ref string oErrMsg) {
            object[] results = this.Invoke("GetTablesThatBelongToSubConfiguration", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        oSubConfigName,
                        oErrMsg});
            oSubConfigName = ((string)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTablesThatBelongToSubConfigurationAsync(int iSubConfigKey, string pAuthenticateKey, string oSubConfigName, string oErrMsg) {
            this.GetTablesThatBelongToSubConfigurationAsync(iSubConfigKey, pAuthenticateKey, oSubConfigName, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetTablesThatBelongToSubConfigurationAsync(int iSubConfigKey, string pAuthenticateKey, string oSubConfigName, string oErrMsg, object userState) {
            if ((this.GetTablesThatBelongToSubConfigurationOperationCompleted == null)) {
                this.GetTablesThatBelongToSubConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTablesThatBelongToSubConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetTablesThatBelongToSubConfiguration", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        oSubConfigName,
                        oErrMsg}, this.GetTablesThatBelongToSubConfigurationOperationCompleted, userState);
        }
        
        private void OnGetTablesThatBelongToSubConfigurationOperationCompleted(object arg) {
            if ((this.GetTablesThatBelongToSubConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTablesThatBelongToSubConfigurationCompleted(this, new GetTablesThatBelongToSubConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetRegistryItemsFil" +
            "eData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRegistryItemsFileData(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetRegistryItemsFileData", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistryItemsFileDataAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetRegistryItemsFileDataAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetRegistryItemsFileDataAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetRegistryItemsFileDataOperationCompleted == null)) {
                this.GetRegistryItemsFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistryItemsFileDataOperationCompleted);
            }
            this.InvokeAsync("GetRegistryItemsFileData", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetRegistryItemsFileDataOperationCompleted, userState);
        }
        
        private void OnGetRegistryItemsFileDataOperationCompleted(object arg) {
            if ((this.GetRegistryItemsFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistryItemsFileDataCompleted(this, new GetRegistryItemsFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/WriteRegistryItemsF" +
            "ileData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WriteRegistryItemsFileData(string pAuthenticateKey, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bDataSetRegXml, ref string oErrMsg) {
            object[] results = this.Invoke("WriteRegistryItemsFileData", new object[] {
                        pAuthenticateKey,
                        bDataSetRegXml,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteRegistryItemsFileDataAsync(string pAuthenticateKey, byte[] bDataSetRegXml, string oErrMsg) {
            this.WriteRegistryItemsFileDataAsync(pAuthenticateKey, bDataSetRegXml, oErrMsg, null);
        }
        
        /// <remarks/>
        public void WriteRegistryItemsFileDataAsync(string pAuthenticateKey, byte[] bDataSetRegXml, string oErrMsg, object userState) {
            if ((this.WriteRegistryItemsFileDataOperationCompleted == null)) {
                this.WriteRegistryItemsFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteRegistryItemsFileDataOperationCompleted);
            }
            this.InvokeAsync("WriteRegistryItemsFileData", new object[] {
                        pAuthenticateKey,
                        bDataSetRegXml,
                        oErrMsg}, this.WriteRegistryItemsFileDataOperationCompleted, userState);
        }
        
        private void OnWriteRegistryItemsFileDataOperationCompleted(object arg) {
            if ((this.WriteRegistryItemsFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteRegistryItemsFileDataCompleted(this, new WriteRegistryItemsFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSubConfiguration" +
            "List", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubConfigurationList(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSubConfigurationList", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubConfigurationListAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetSubConfigurationListAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSubConfigurationListAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSubConfigurationListOperationCompleted == null)) {
                this.GetSubConfigurationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubConfigurationListOperationCompleted);
            }
            this.InvokeAsync("GetSubConfigurationList", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetSubConfigurationListOperationCompleted, userState);
        }
        
        private void OnGetSubConfigurationListOperationCompleted(object arg) {
            if ((this.GetSubConfigurationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubConfigurationListCompleted(this, new GetSubConfigurationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSubConfiguration" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubConfiguration(int iSubConfigKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSubConfiguration", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubConfigurationAsync(int iSubConfigKey, string pAuthenticateKey, string oErrMsg) {
            this.GetSubConfigurationAsync(iSubConfigKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSubConfigurationAsync(int iSubConfigKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSubConfigurationOperationCompleted == null)) {
                this.GetSubConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetSubConfiguration", new object[] {
                        iSubConfigKey,
                        pAuthenticateKey,
                        oErrMsg}, this.GetSubConfigurationOperationCompleted, userState);
        }
        
        private void OnGetSubConfigurationOperationCompleted(object arg) {
            if ((this.GetSubConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubConfigurationCompleted(this, new GetSubConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveSubConfiguratio" +
            "n", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveSubConfiguration(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveSubConfiguration", new object[] {
                        iSerializedSubConfiguration,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSubConfigurationAsync(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.SaveSubConfigurationAsync(iSerializedSubConfiguration, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveSubConfigurationAsync(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveSubConfigurationOperationCompleted == null)) {
                this.SaveSubConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSubConfigurationOperationCompleted);
            }
            this.InvokeAsync("SaveSubConfiguration", new object[] {
                        iSerializedSubConfiguration,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveSubConfigurationOperationCompleted, userState);
        }
        
        private void OnSaveSubConfigurationOperationCompleted(object arg) {
            if ((this.SaveSubConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSubConfigurationCompleted(this, new SaveSubConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginSubConfigurati" +
            "onEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginSubConfigurationEdit(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BeginSubConfigurationEdit", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginSubConfigurationEditAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.BeginSubConfigurationEditAsync(iSubConfigKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginSubConfigurationEditAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BeginSubConfigurationEditOperationCompleted == null)) {
                this.BeginSubConfigurationEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginSubConfigurationEditOperationCompleted);
            }
            this.InvokeAsync("BeginSubConfigurationEdit", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.BeginSubConfigurationEditOperationCompleted, userState);
        }
        
        private void OnBeginSubConfigurationEditOperationCompleted(object arg) {
            if ((this.BeginSubConfigurationEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginSubConfigurationEditCompleted(this, new BeginSubConfigurationEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndSubConfiguration" +
            "Edit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndSubConfigurationEdit(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EndSubConfigurationEdit", new object[] {
                        iSerializedSubConfiguration,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndSubConfigurationEditAsync(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.EndSubConfigurationEditAsync(iSerializedSubConfiguration, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndSubConfigurationEditAsync(string iSerializedSubConfiguration, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EndSubConfigurationEditOperationCompleted == null)) {
                this.EndSubConfigurationEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndSubConfigurationEditOperationCompleted);
            }
            this.InvokeAsync("EndSubConfigurationEdit", new object[] {
                        iSerializedSubConfiguration,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.EndSubConfigurationEditOperationCompleted, userState);
        }
        
        private void OnEndSubConfigurationEditOperationCompleted(object arg) {
            if ((this.EndSubConfigurationEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndSubConfigurationEditCompleted(this, new EndSubConfigurationEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelSubConfigurat" +
            "ionEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelSubConfigurationEdit(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelSubConfigurationEdit", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSubConfigurationEditAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.CancelSubConfigurationEditAsync(iSubConfigKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelSubConfigurationEditAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelSubConfigurationEditOperationCompleted == null)) {
                this.CancelSubConfigurationEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSubConfigurationEditOperationCompleted);
            }
            this.InvokeAsync("CancelSubConfigurationEdit", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelSubConfigurationEditOperationCompleted, userState);
        }
        
        private void OnCancelSubConfigurationEditOperationCompleted(object arg) {
            if ((this.CancelSubConfigurationEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSubConfigurationEditCompleted(this, new CancelSubConfigurationEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteSubConfigurat" +
            "ion", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSubConfiguration(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteSubConfiguration", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSubConfigurationAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.DeleteSubConfigurationAsync(iSubConfigKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteSubConfigurationAsync(int iSubConfigKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteSubConfigurationOperationCompleted == null)) {
                this.DeleteSubConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSubConfigurationOperationCompleted);
            }
            this.InvokeAsync("DeleteSubConfiguration", new object[] {
                        iSubConfigKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteSubConfigurationOperationCompleted, userState);
        }
        
        private void OnDeleteSubConfigurationOperationCompleted(object arg) {
            if ((this.DeleteSubConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSubConfigurationCompleted(this, new DeleteSubConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RenameSubConfigurat" +
            "ion", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameSubConfiguration(string iOldName, string iNewName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RenameSubConfiguration", new object[] {
                        iOldName,
                        iNewName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameSubConfigurationAsync(string iOldName, string iNewName, string pAuthenticateKey, string oErrMsg) {
            this.RenameSubConfigurationAsync(iOldName, iNewName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RenameSubConfigurationAsync(string iOldName, string iNewName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RenameSubConfigurationOperationCompleted == null)) {
                this.RenameSubConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameSubConfigurationOperationCompleted);
            }
            this.InvokeAsync("RenameSubConfiguration", new object[] {
                        iOldName,
                        iNewName,
                        pAuthenticateKey,
                        oErrMsg}, this.RenameSubConfigurationOperationCompleted, userState);
        }
        
        private void OnRenameSubConfigurationOperationCompleted(object arg) {
            if ((this.RenameSubConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameSubConfigurationCompleted(this, new RenameSubConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PlaceLock", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long PlaceLock(string resourceName, string lockHolder, LockType lockType, int timeoutInSeconds, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("PlaceLock", new object[] {
                        resourceName,
                        lockHolder,
                        lockType,
                        timeoutInSeconds,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceLockAsync(string resourceName, string lockHolder, LockType lockType, int timeoutInSeconds, string pAuthenticateKey, string errorMessage) {
            this.PlaceLockAsync(resourceName, lockHolder, lockType, timeoutInSeconds, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void PlaceLockAsync(string resourceName, string lockHolder, LockType lockType, int timeoutInSeconds, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.PlaceLockOperationCompleted == null)) {
                this.PlaceLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceLockOperationCompleted);
            }
            this.InvokeAsync("PlaceLock", new object[] {
                        resourceName,
                        lockHolder,
                        lockType,
                        timeoutInSeconds,
                        pAuthenticateKey,
                        errorMessage}, this.PlaceLockOperationCompleted, userState);
        }
        
        private void OnPlaceLockOperationCompleted(object arg) {
            if ((this.PlaceLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceLockCompleted(this, new PlaceLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemoveLock", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveLock(long lockID, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("RemoveLock", new object[] {
                        lockID,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveLockAsync(long lockID, string pAuthenticateKey, string errorMessage) {
            this.RemoveLockAsync(lockID, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void RemoveLockAsync(long lockID, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.RemoveLockOperationCompleted == null)) {
                this.RemoveLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLockOperationCompleted);
            }
            this.InvokeAsync("RemoveLock", new object[] {
                        lockID,
                        pAuthenticateKey,
                        errorMessage}, this.RemoveLockOperationCompleted, userState);
        }
        
        private void OnRemoveLockOperationCompleted(object arg) {
            if ((this.RemoveLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLockCompleted(this, new RemoveLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCompositeListFil" +
            "eDateTime", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetCompositeListFileDateTime(string listName, int iSubConfigKey, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetCompositeListFileDateTime", new object[] {
                        listName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompositeListFileDateTimeAsync(string listName, int iSubConfigKey, string pAuthenticateKey, string errorMessage) {
            this.GetCompositeListFileDateTimeAsync(listName, iSubConfigKey, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetCompositeListFileDateTimeAsync(string listName, int iSubConfigKey, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetCompositeListFileDateTimeOperationCompleted == null)) {
                this.GetCompositeListFileDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompositeListFileDateTimeOperationCompleted);
            }
            this.InvokeAsync("GetCompositeListFileDateTime", new object[] {
                        listName,
                        iSubConfigKey,
                        pAuthenticateKey,
                        errorMessage}, this.GetCompositeListFileDateTimeOperationCompleted, userState);
        }
        
        private void OnGetCompositeListFileDateTimeOperationCompleted(object arg) {
            if ((this.GetCompositeListFileDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompositeListFileDateTimeCompleted(this, new GetCompositeListFileDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/QueryIssuanceRecord" +
            "_Basic", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryIssuanceRecord_Basic(string iSerializedParameters, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("QueryIssuanceRecord_Basic", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_BasicAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg) {
            this.QueryIssuanceRecord_BasicAsync(iSerializedParameters, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_BasicAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.QueryIssuanceRecord_BasicOperationCompleted == null)) {
                this.QueryIssuanceRecord_BasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryIssuanceRecord_BasicOperationCompleted);
            }
            this.InvokeAsync("QueryIssuanceRecord_Basic", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg}, this.QueryIssuanceRecord_BasicOperationCompleted, userState);
        }
        
        private void OnQueryIssuanceRecord_BasicOperationCompleted(object arg) {
            if ((this.QueryIssuanceRecord_BasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryIssuanceRecord_BasicCompleted(this, new QueryIssuanceRecord_BasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/QueryIssuanceRecord" +
            "_Extended", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryIssuanceRecord_Extended(string iSerializedParameters, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("QueryIssuanceRecord_Extended", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_ExtendedAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg) {
            this.QueryIssuanceRecord_ExtendedAsync(iSerializedParameters, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_ExtendedAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.QueryIssuanceRecord_ExtendedOperationCompleted == null)) {
                this.QueryIssuanceRecord_ExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryIssuanceRecord_ExtendedOperationCompleted);
            }
            this.InvokeAsync("QueryIssuanceRecord_Extended", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg}, this.QueryIssuanceRecord_ExtendedOperationCompleted, userState);
        }
        
        private void OnQueryIssuanceRecord_ExtendedOperationCompleted(object arg) {
            if ((this.QueryIssuanceRecord_ExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryIssuanceRecord_ExtendedCompleted(this, new QueryIssuanceRecord_ExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/QueryIssuanceRecord" +
            "_SupplementalMultimediaAttachments", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryIssuanceRecord_SupplementalMultimediaAttachments(string iSerializedParameters, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("QueryIssuanceRecord_SupplementalMultimediaAttachments", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_SupplementalMultimediaAttachmentsAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg) {
            this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsAsync(iSerializedParameters, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void QueryIssuanceRecord_SupplementalMultimediaAttachmentsAsync(string iSerializedParameters, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted == null)) {
                this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted);
            }
            this.InvokeAsync("QueryIssuanceRecord_SupplementalMultimediaAttachments", new object[] {
                        iSerializedParameters,
                        pAuthenticateKey,
                        oErrMsg}, this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted, userState);
        }
        
        private void OnQueryIssuanceRecord_SupplementalMultimediaAttachmentsOperationCompleted(object arg) {
            if ((this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompleted(this, new QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/LogEvent", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogEvent(string iUser_Session_KeyStr, string iActionTaken, string iActionDetail, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("LogEvent", new object[] {
                        iUser_Session_KeyStr,
                        iActionTaken,
                        iActionDetail,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogEventAsync(string iUser_Session_KeyStr, string iActionTaken, string iActionDetail, string pAuthenticateKey, string oErrMsg) {
            this.LogEventAsync(iUser_Session_KeyStr, iActionTaken, iActionDetail, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void LogEventAsync(string iUser_Session_KeyStr, string iActionTaken, string iActionDetail, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.LogEventOperationCompleted == null)) {
                this.LogEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogEventOperationCompleted);
            }
            this.InvokeAsync("LogEvent", new object[] {
                        iUser_Session_KeyStr,
                        iActionTaken,
                        iActionDetail,
                        pAuthenticateKey,
                        oErrMsg}, this.LogEventOperationCompleted, userState);
        }
        
        private void OnLogEventOperationCompleted(object arg) {
            if ((this.LogEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogEventCompleted(this, new LogEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/LogEvent_Multiple", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LogEvent_Multiple(string iUser_Session_KeyStr, string iActionTakenSerializedStringList, string iActionDetailSerializedStringList, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("LogEvent_Multiple", new object[] {
                        iUser_Session_KeyStr,
                        iActionTakenSerializedStringList,
                        iActionDetailSerializedStringList,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LogEvent_MultipleAsync(string iUser_Session_KeyStr, string iActionTakenSerializedStringList, string iActionDetailSerializedStringList, string pAuthenticateKey, string oErrMsg) {
            this.LogEvent_MultipleAsync(iUser_Session_KeyStr, iActionTakenSerializedStringList, iActionDetailSerializedStringList, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void LogEvent_MultipleAsync(string iUser_Session_KeyStr, string iActionTakenSerializedStringList, string iActionDetailSerializedStringList, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.LogEvent_MultipleOperationCompleted == null)) {
                this.LogEvent_MultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogEvent_MultipleOperationCompleted);
            }
            this.InvokeAsync("LogEvent_Multiple", new object[] {
                        iUser_Session_KeyStr,
                        iActionTakenSerializedStringList,
                        iActionDetailSerializedStringList,
                        pAuthenticateKey,
                        oErrMsg}, this.LogEvent_MultipleOperationCompleted, userState);
        }
        
        private void OnLogEvent_MultipleOperationCompleted(object arg) {
            if ((this.LogEvent_MultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogEvent_MultipleCompleted(this, new LogEvent_MultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GarbageCollection", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GarbageCollection(string pAuthenticateKey) {
            this.Invoke("GarbageCollection", new object[] {
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void GarbageCollectionAsync(string pAuthenticateKey) {
            this.GarbageCollectionAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GarbageCollectionAsync(string pAuthenticateKey, object userState) {
            if ((this.GarbageCollectionOperationCompleted == null)) {
                this.GarbageCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGarbageCollectionOperationCompleted);
            }
            this.InvokeAsync("GarbageCollection", new object[] {
                        pAuthenticateKey}, this.GarbageCollectionOperationCompleted, userState);
        }
        
        private void OnGarbageCollectionOperationCompleted(object arg) {
            if ((this.GarbageCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GarbageCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetReportObject", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportObject(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetReportObject", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportObjectAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetReportObjectAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetReportObjectAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetReportObjectOperationCompleted == null)) {
                this.GetReportObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportObjectOperationCompleted);
            }
            this.InvokeAsync("GetReportObject", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetReportObjectOperationCompleted, userState);
        }
        
        private void OnGetReportObjectOperationCompleted(object arg) {
            if ((this.GetReportObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportObjectCompleted(this, new GetReportObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetMTXReportObject", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMTXReportObject(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetMTXReportObject", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMTXReportObjectAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetMTXReportObjectAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetMTXReportObjectAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetMTXReportObjectOperationCompleted == null)) {
                this.GetMTXReportObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMTXReportObjectOperationCompleted);
            }
            this.InvokeAsync("GetMTXReportObject", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetMTXReportObjectOperationCompleted, userState);
        }
        
        private void OnGetMTXReportObjectOperationCompleted(object arg) {
            if ((this.GetMTXReportObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMTXReportObjectCompleted(this, new GetMTXReportObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveReportRunParame" +
            "ters", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveReportRunParameters(string iReportParameters, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveReportRunParameters", new object[] {
                        iReportParameters,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveReportRunParametersAsync(string iReportParameters, string pAuthenticateKey, string oErrMsg) {
            this.SaveReportRunParametersAsync(iReportParameters, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveReportRunParametersAsync(string iReportParameters, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveReportRunParametersOperationCompleted == null)) {
                this.SaveReportRunParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveReportRunParametersOperationCompleted);
            }
            this.InvokeAsync("SaveReportRunParameters", new object[] {
                        iReportParameters,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveReportRunParametersOperationCompleted, userState);
        }
        
        private void OnSaveReportRunParametersOperationCompleted(object arg) {
            if ((this.SaveReportRunParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveReportRunParametersCompleted(this, new SaveReportRunParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginReportParamete" +
            "rEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginReportParameterEdit(string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BeginReportParameterEdit", new object[] {
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginReportParameterEditAsync(string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.BeginReportParameterEditAsync(iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginReportParameterEditAsync(string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BeginReportParameterEditOperationCompleted == null)) {
                this.BeginReportParameterEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginReportParameterEditOperationCompleted);
            }
            this.InvokeAsync("BeginReportParameterEdit", new object[] {
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.BeginReportParameterEditOperationCompleted, userState);
        }
        
        private void OnBeginReportParameterEditOperationCompleted(object arg) {
            if ((this.BeginReportParameterEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginReportParameterEditCompleted(this, new BeginReportParameterEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndReportParameterE" +
            "dit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndReportParameterEdit(string iSerializedParameter, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EndReportParameterEdit", new object[] {
                        iSerializedParameter,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndReportParameterEditAsync(string iSerializedParameter, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.EndReportParameterEditAsync(iSerializedParameter, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndReportParameterEditAsync(string iSerializedParameter, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EndReportParameterEditOperationCompleted == null)) {
                this.EndReportParameterEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndReportParameterEditOperationCompleted);
            }
            this.InvokeAsync("EndReportParameterEdit", new object[] {
                        iSerializedParameter,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.EndReportParameterEditOperationCompleted, userState);
        }
        
        private void OnEndReportParameterEditOperationCompleted(object arg) {
            if ((this.EndReportParameterEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndReportParameterEditCompleted(this, new EndReportParameterEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelReportParamet" +
            "erEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelReportParameterEdit(string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelReportParameterEdit", new object[] {
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelReportParameterEditAsync(string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.CancelReportParameterEditAsync(iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelReportParameterEditAsync(string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelReportParameterEditOperationCompleted == null)) {
                this.CancelReportParameterEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelReportParameterEditOperationCompleted);
            }
            this.InvokeAsync("CancelReportParameterEdit", new object[] {
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelReportParameterEditOperationCompleted, userState);
        }
        
        private void OnCancelReportParameterEditOperationCompleted(object arg) {
            if ((this.CancelReportParameterEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelReportParameterEditCompleted(this, new CancelReportParameterEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RunReport", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RunReport(string iReportDetails, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RunReport", new object[] {
                        iReportDetails,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunReportAsync(string iReportDetails, string pAuthenticateKey, string oErrMsg) {
            this.RunReportAsync(iReportDetails, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RunReportAsync(string iReportDetails, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RunReportOperationCompleted == null)) {
                this.RunReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunReportOperationCompleted);
            }
            this.InvokeAsync("RunReport", new object[] {
                        iReportDetails,
                        pAuthenticateKey,
                        oErrMsg}, this.RunReportOperationCompleted, userState);
        }
        
        private void OnRunReportOperationCompleted(object arg) {
            if ((this.RunReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunReportCompleted(this, new RunReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetReportFileInfo", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportFileInfo(string pReportFileName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetReportFileInfo", new object[] {
                        pReportFileName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFileInfoAsync(string pReportFileName, string pAuthenticateKey, string oErrMsg) {
            this.GetReportFileInfoAsync(pReportFileName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetReportFileInfoAsync(string pReportFileName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetReportFileInfoOperationCompleted == null)) {
                this.GetReportFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetReportFileInfo", new object[] {
                        pReportFileName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetReportFileInfoOperationCompleted, userState);
        }
        
        private void OnGetReportFileInfoOperationCompleted(object arg) {
            if ((this.GetReportFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFileInfoCompleted(this, new GetReportFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetReportFileData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReportFileData(string pReportFileName, bool pRemoveFile, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetReportFileData", new object[] {
                        pReportFileName,
                        pRemoveFile,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFileDataAsync(string pReportFileName, bool pRemoveFile, string pAuthenticateKey, string oErrMsg) {
            this.GetReportFileDataAsync(pReportFileName, pRemoveFile, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetReportFileDataAsync(string pReportFileName, bool pRemoveFile, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetReportFileDataOperationCompleted == null)) {
                this.GetReportFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFileDataOperationCompleted);
            }
            this.InvokeAsync("GetReportFileData", new object[] {
                        pReportFileName,
                        pRemoveFile,
                        pAuthenticateKey,
                        oErrMsg}, this.GetReportFileDataOperationCompleted, userState);
        }
        
        private void OnGetReportFileDataOperationCompleted(object arg) {
            if ((this.GetReportFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFileDataCompleted(this, new GetReportFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetReportFileDirect" +
            "oryInfo", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReportFileDirectoryInfo(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetReportFileDirectoryInfo", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportFileDirectoryInfoAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetReportFileDirectoryInfoAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetReportFileDirectoryInfoAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetReportFileDirectoryInfoOperationCompleted == null)) {
                this.GetReportFileDirectoryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportFileDirectoryInfoOperationCompleted);
            }
            this.InvokeAsync("GetReportFileDirectoryInfo", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetReportFileDirectoryInfoOperationCompleted, userState);
        }
        
        private void OnGetReportFileDirectoryInfoOperationCompleted(object arg) {
            if ((this.GetReportFileDirectoryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportFileDirectoryInfoCompleted(this, new GetReportFileDirectoryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetExportDefinition" +
            "sNameAndNumber", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExportDefinitionsNameAndNumber(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetExportDefinitionsNameAndNumber", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExportDefinitionsNameAndNumberAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetExportDefinitionsNameAndNumberAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetExportDefinitionsNameAndNumberAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetExportDefinitionsNameAndNumberOperationCompleted == null)) {
                this.GetExportDefinitionsNameAndNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExportDefinitionsNameAndNumberOperationCompleted);
            }
            this.InvokeAsync("GetExportDefinitionsNameAndNumber", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetExportDefinitionsNameAndNumberOperationCompleted, userState);
        }
        
        private void OnGetExportDefinitionsNameAndNumberOperationCompleted(object arg) {
            if ((this.GetExportDefinitionsNameAndNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExportDefinitionsNameAndNumberCompleted(this, new GetExportDefinitionsNameAndNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemoveOldReports", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveOldReports(int iDaysOld, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RemoveOldReports", new object[] {
                        iDaysOld,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOldReportsAsync(int iDaysOld, string pAuthenticateKey, string oErrMsg) {
            this.RemoveOldReportsAsync(iDaysOld, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RemoveOldReportsAsync(int iDaysOld, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RemoveOldReportsOperationCompleted == null)) {
                this.RemoveOldReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOldReportsOperationCompleted);
            }
            this.InvokeAsync("RemoveOldReports", new object[] {
                        iDaysOld,
                        pAuthenticateKey,
                        oErrMsg}, this.RemoveOldReportsOperationCompleted, userState);
        }
        
        private void OnRemoveOldReportsOperationCompleted(object arg) {
            if ((this.RemoveOldReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOldReportsCompleted(this, new RemoveOldReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetExeFileListForCl" +
            "ient", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExeFileListForClient(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetExeFileListForClient", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExeFileListForClientAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetExeFileListForClientAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetExeFileListForClientAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetExeFileListForClientOperationCompleted == null)) {
                this.GetExeFileListForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExeFileListForClientOperationCompleted);
            }
            this.InvokeAsync("GetExeFileListForClient", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetExeFileListForClientOperationCompleted, userState);
        }
        
        private void OnGetExeFileListForClientOperationCompleted(object arg) {
            if ((this.GetExeFileListForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExeFileListForClientCompleted(this, new GetExeFileListForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetExeFileInfo", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExeFileInfo(string iExeName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetExeFileInfo", new object[] {
                        iExeName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExeFileInfoAsync(string iExeName, string pAuthenticateKey, string oErrMsg) {
            this.GetExeFileInfoAsync(iExeName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetExeFileInfoAsync(string iExeName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetExeFileInfoOperationCompleted == null)) {
                this.GetExeFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExeFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetExeFileInfo", new object[] {
                        iExeName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetExeFileInfoOperationCompleted, userState);
        }
        
        private void OnGetExeFileInfoOperationCompleted(object arg) {
            if ((this.GetExeFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExeFileInfoCompleted(this, new GetExeFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetExeFileData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetExeFileData(string iExeName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetExeFileData", new object[] {
                        iExeName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExeFileDataAsync(string iExeName, string pAuthenticateKey, string oErrMsg) {
            this.GetExeFileDataAsync(iExeName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetExeFileDataAsync(string iExeName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetExeFileDataOperationCompleted == null)) {
                this.GetExeFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExeFileDataOperationCompleted);
            }
            this.InvokeAsync("GetExeFileData", new object[] {
                        iExeName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetExeFileDataOperationCompleted, userState);
        }
        
        private void OnGetExeFileDataOperationCompleted(object arg) {
            if ((this.GetExeFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExeFileDataCompleted(this, new GetExeFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EnumLogicalDrives", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumLogicalDrives(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EnumLogicalDrives", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumLogicalDrivesAsync(string pAuthenticateKey, string oErrMsg) {
            this.EnumLogicalDrivesAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EnumLogicalDrivesAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EnumLogicalDrivesOperationCompleted == null)) {
                this.EnumLogicalDrivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumLogicalDrivesOperationCompleted);
            }
            this.InvokeAsync("EnumLogicalDrives", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.EnumLogicalDrivesOperationCompleted, userState);
        }
        
        private void OnEnumLogicalDrivesOperationCompleted(object arg) {
            if ((this.EnumLogicalDrivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumLogicalDrivesCompleted(this, new EnumLogicalDrivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EnumDirectories", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumDirectories(string path, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EnumDirectories", new object[] {
                        path,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumDirectoriesAsync(string path, string pAuthenticateKey, string oErrMsg) {
            this.EnumDirectoriesAsync(path, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EnumDirectoriesAsync(string path, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EnumDirectoriesOperationCompleted == null)) {
                this.EnumDirectoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumDirectoriesOperationCompleted);
            }
            this.InvokeAsync("EnumDirectories", new object[] {
                        path,
                        pAuthenticateKey,
                        oErrMsg}, this.EnumDirectoriesOperationCompleted, userState);
        }
        
        private void OnEnumDirectoriesOperationCompleted(object arg) {
            if ((this.EnumDirectoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumDirectoriesCompleted(this, new EnumDirectoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EnumFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] EnumFiles(string path, string searchPattern, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EnumFiles", new object[] {
                        path,
                        searchPattern,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void EnumFilesAsync(string path, string searchPattern, string pAuthenticateKey, string oErrMsg) {
            this.EnumFilesAsync(path, searchPattern, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EnumFilesAsync(string path, string searchPattern, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EnumFilesOperationCompleted == null)) {
                this.EnumFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumFilesOperationCompleted);
            }
            this.InvokeAsync("EnumFiles", new object[] {
                        path,
                        searchPattern,
                        pAuthenticateKey,
                        oErrMsg}, this.EnumFilesOperationCompleted, userState);
        }
        
        private void OnEnumFilesOperationCompleted(object arg) {
            if ((this.EnumFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumFilesCompleted(this, new EnumFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddTextToGenericLog" +
            "File", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTextToGenericLogFile(string logFilenameWithoutPath, string textToLog) {
            this.Invoke("AddTextToGenericLogFile", new object[] {
                        logFilenameWithoutPath,
                        textToLog});
        }
        
        /// <remarks/>
        public void AddTextToGenericLogFileAsync(string logFilenameWithoutPath, string textToLog) {
            this.AddTextToGenericLogFileAsync(logFilenameWithoutPath, textToLog, null);
        }
        
        /// <remarks/>
        public void AddTextToGenericLogFileAsync(string logFilenameWithoutPath, string textToLog, object userState) {
            if ((this.AddTextToGenericLogFileOperationCompleted == null)) {
                this.AddTextToGenericLogFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTextToGenericLogFileOperationCompleted);
            }
            this.InvokeAsync("AddTextToGenericLogFile", new object[] {
                        logFilenameWithoutPath,
                        textToLog}, this.AddTextToGenericLogFileOperationCompleted, userState);
        }
        
        private void OnAddTextToGenericLogFileOperationCompleted(object arg) {
            if ((this.AddTextToGenericLogFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTextToGenericLogFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateParkeonMeterC" +
            "lusterList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateParkeonMeterClusterList(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkeonURL, string parkeonUser, string parkeonPassword, ref string oErrMsg) {
            object[] results = this.Invoke("UpdateParkeonMeterClusterList", new object[] {
                        pAuthenticateKey,
                        cnfg_MeterEnforceModel,
                        parkeonURL,
                        parkeonUser,
                        parkeonPassword,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateParkeonMeterClusterListAsync(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkeonURL, string parkeonUser, string parkeonPassword, string oErrMsg) {
            this.UpdateParkeonMeterClusterListAsync(pAuthenticateKey, cnfg_MeterEnforceModel, parkeonURL, parkeonUser, parkeonPassword, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateParkeonMeterClusterListAsync(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkeonURL, string parkeonUser, string parkeonPassword, string oErrMsg, object userState) {
            if ((this.UpdateParkeonMeterClusterListOperationCompleted == null)) {
                this.UpdateParkeonMeterClusterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParkeonMeterClusterListOperationCompleted);
            }
            this.InvokeAsync("UpdateParkeonMeterClusterList", new object[] {
                        pAuthenticateKey,
                        cnfg_MeterEnforceModel,
                        parkeonURL,
                        parkeonUser,
                        parkeonPassword,
                        oErrMsg}, this.UpdateParkeonMeterClusterListOperationCompleted, userState);
        }
        
        private void OnUpdateParkeonMeterClusterListOperationCompleted(object arg) {
            if ((this.UpdateParkeonMeterClusterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateParkeonMeterClusterListCompleted(this, new UpdateParkeonMeterClusterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetVerboseParkNOWPr" +
            "ogressText", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVerboseParkNOWProgressText(string pAuthenticateKey) {
            object[] results = this.Invoke("GetVerboseParkNOWProgressText", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVerboseParkNOWProgressTextAsync(string pAuthenticateKey) {
            this.GetVerboseParkNOWProgressTextAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetVerboseParkNOWProgressTextAsync(string pAuthenticateKey, object userState) {
            if ((this.GetVerboseParkNOWProgressTextOperationCompleted == null)) {
                this.GetVerboseParkNOWProgressTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVerboseParkNOWProgressTextOperationCompleted);
            }
            this.InvokeAsync("GetVerboseParkNOWProgressText", new object[] {
                        pAuthenticateKey}, this.GetVerboseParkNOWProgressTextOperationCompleted, userState);
        }
        
        private void OnGetVerboseParkNOWProgressTextOperationCompleted(object arg) {
            if ((this.GetVerboseParkNOWProgressTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVerboseParkNOWProgressTextCompleted(this, new GetVerboseParkNOWProgressTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateParkNOWMeterC" +
            "lusterList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateParkNOWMeterClusterList(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkNowURL, string parkNowUser, string parkNowPassword, ref string oErrMsg) {
            object[] results = this.Invoke("UpdateParkNOWMeterClusterList", new object[] {
                        pAuthenticateKey,
                        cnfg_MeterEnforceModel,
                        parkNowURL,
                        parkNowUser,
                        parkNowPassword,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateParkNOWMeterClusterListAsync(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkNowURL, string parkNowUser, string parkNowPassword, string oErrMsg) {
            this.UpdateParkNOWMeterClusterListAsync(pAuthenticateKey, cnfg_MeterEnforceModel, parkNowURL, parkNowUser, parkNowPassword, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateParkNOWMeterClusterListAsync(string pAuthenticateKey, string cnfg_MeterEnforceModel, string parkNowURL, string parkNowUser, string parkNowPassword, string oErrMsg, object userState) {
            if ((this.UpdateParkNOWMeterClusterListOperationCompleted == null)) {
                this.UpdateParkNOWMeterClusterListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParkNOWMeterClusterListOperationCompleted);
            }
            this.InvokeAsync("UpdateParkNOWMeterClusterList", new object[] {
                        pAuthenticateKey,
                        cnfg_MeterEnforceModel,
                        parkNowURL,
                        parkNowUser,
                        parkNowPassword,
                        oErrMsg}, this.UpdateParkNOWMeterClusterListOperationCompleted, userState);
        }
        
        private void OnUpdateParkNOWMeterClusterListOperationCompleted(object arg) {
            if ((this.UpdateParkNOWMeterClusterListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateParkNOWMeterClusterListCompleted(this, new UpdateParkNOWMeterClusterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdatePayByCellZone" +
            "List", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePayByCellZoneList(string pAuthenticateKey, string PBC_ServiceURL, string customerID, ref string oErrMsg) {
            object[] results = this.Invoke("UpdatePayByCellZoneList", new object[] {
                        pAuthenticateKey,
                        PBC_ServiceURL,
                        customerID,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePayByCellZoneListAsync(string pAuthenticateKey, string PBC_ServiceURL, string customerID, string oErrMsg) {
            this.UpdatePayByCellZoneListAsync(pAuthenticateKey, PBC_ServiceURL, customerID, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdatePayByCellZoneListAsync(string pAuthenticateKey, string PBC_ServiceURL, string customerID, string oErrMsg, object userState) {
            if ((this.UpdatePayByCellZoneListOperationCompleted == null)) {
                this.UpdatePayByCellZoneListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePayByCellZoneListOperationCompleted);
            }
            this.InvokeAsync("UpdatePayByCellZoneList", new object[] {
                        pAuthenticateKey,
                        PBC_ServiceURL,
                        customerID,
                        oErrMsg}, this.UpdatePayByCellZoneListOperationCompleted, userState);
        }
        
        private void OnUpdatePayByCellZoneListOperationCompleted(object arg) {
            if ((this.UpdatePayByCellZoneListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePayByCellZoneListCompleted(this, new UpdatePayByCellZoneListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdatePayByCellZone" +
            "List_PassportVendor", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePayByCellZoneList_PassportVendor(string pAuthenticateKey, string PBC_ServiceURL, string ApiKey, ref string oErrMsg) {
            object[] results = this.Invoke("UpdatePayByCellZoneList_PassportVendor", new object[] {
                        pAuthenticateKey,
                        PBC_ServiceURL,
                        ApiKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePayByCellZoneList_PassportVendorAsync(string pAuthenticateKey, string PBC_ServiceURL, string ApiKey, string oErrMsg) {
            this.UpdatePayByCellZoneList_PassportVendorAsync(pAuthenticateKey, PBC_ServiceURL, ApiKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdatePayByCellZoneList_PassportVendorAsync(string pAuthenticateKey, string PBC_ServiceURL, string ApiKey, string oErrMsg, object userState) {
            if ((this.UpdatePayByCellZoneList_PassportVendorOperationCompleted == null)) {
                this.UpdatePayByCellZoneList_PassportVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePayByCellZoneList_PassportVendorOperationCompleted);
            }
            this.InvokeAsync("UpdatePayByCellZoneList_PassportVendor", new object[] {
                        pAuthenticateKey,
                        PBC_ServiceURL,
                        ApiKey,
                        oErrMsg}, this.UpdatePayByCellZoneList_PassportVendorOperationCompleted, userState);
        }
        
        private void OnUpdatePayByCellZoneList_PassportVendorOperationCompleted(object arg) {
            if ((this.UpdatePayByCellZoneList_PassportVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePayByCellZoneList_PassportVendorCompleted(this, new UpdatePayByCellZoneList_PassportVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CloseOutCurrentUser" +
            "FromDatabase", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CloseOutCurrentUserFromDatabase(string pUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CloseOutCurrentUserFromDatabase", new object[] {
                        pUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CloseOutCurrentUserFromDatabaseAsync(string pUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.CloseOutCurrentUserFromDatabaseAsync(pUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CloseOutCurrentUserFromDatabaseAsync(string pUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CloseOutCurrentUserFromDatabaseOperationCompleted == null)) {
                this.CloseOutCurrentUserFromDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseOutCurrentUserFromDatabaseOperationCompleted);
            }
            this.InvokeAsync("CloseOutCurrentUserFromDatabase", new object[] {
                        pUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.CloseOutCurrentUserFromDatabaseOperationCompleted, userState);
        }
        
        private void OnCloseOutCurrentUserFromDatabaseOperationCompleted(object arg) {
            if ((this.CloseOutCurrentUserFromDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseOutCurrentUserFromDatabaseCompleted(this, new CloseOutCurrentUserFromDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AutoLoginAsMasterUs" +
            "er", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoLoginAsMasterUser(string MachineName, ref string oErrMsg) {
            object[] results = this.Invoke("AutoLoginAsMasterUser", new object[] {
                        MachineName,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoLoginAsMasterUserAsync(string MachineName, string oErrMsg) {
            this.AutoLoginAsMasterUserAsync(MachineName, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AutoLoginAsMasterUserAsync(string MachineName, string oErrMsg, object userState) {
            if ((this.AutoLoginAsMasterUserOperationCompleted == null)) {
                this.AutoLoginAsMasterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoLoginAsMasterUserOperationCompleted);
            }
            this.InvokeAsync("AutoLoginAsMasterUser", new object[] {
                        MachineName,
                        oErrMsg}, this.AutoLoginAsMasterUserOperationCompleted, userState);
        }
        
        private void OnAutoLoginAsMasterUserOperationCompleted(object arg) {
            if ((this.AutoLoginAsMasterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoLoginAsMasterUserCompleted(this, new AutoLoginAsMasterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/LoginUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginUser(string pUserName, string pPassword, string pAuthenticateKey, string MachineName, ref string oErrMsg) {
            object[] results = this.Invoke("LoginUser", new object[] {
                        pUserName,
                        pPassword,
                        pAuthenticateKey,
                        MachineName,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserAsync(string pUserName, string pPassword, string pAuthenticateKey, string MachineName, string oErrMsg) {
            this.LoginUserAsync(pUserName, pPassword, pAuthenticateKey, MachineName, oErrMsg, null);
        }
        
        /// <remarks/>
        public void LoginUserAsync(string pUserName, string pPassword, string pAuthenticateKey, string MachineName, string oErrMsg, object userState) {
            if ((this.LoginUserOperationCompleted == null)) {
                this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
            }
            this.InvokeAsync("LoginUser", new object[] {
                        pUserName,
                        pPassword,
                        pAuthenticateKey,
                        MachineName,
                        oErrMsg}, this.LoginUserOperationCompleted, userState);
        }
        
        private void OnLoginUserOperationCompleted(object arg) {
            if ((this.LoginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllUsers", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUsers(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllUsers", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetAllUsersAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUsersWithHandhel" +
            "dRights", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUsersWithHandheldRights(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetUsersWithHandheldRights", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersWithHandheldRightsAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetUsersWithHandheldRightsAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetUsersWithHandheldRightsAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetUsersWithHandheldRightsOperationCompleted == null)) {
                this.GetUsersWithHandheldRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersWithHandheldRightsOperationCompleted);
            }
            this.InvokeAsync("GetUsersWithHandheldRights", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetUsersWithHandheldRightsOperationCompleted, userState);
        }
        
        private void OnGetUsersWithHandheldRightsOperationCompleted(object arg) {
            if ((this.GetUsersWithHandheldRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersWithHandheldRightsCompleted(this, new GetUsersWithHandheldRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllRoles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRoles(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllRoles", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetAllRolesAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllRolesOperationCompleted == null)) {
                this.GetAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRolesOperationCompleted);
            }
            this.InvokeAsync("GetAllRoles", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllRolesOperationCompleted, userState);
        }
        
        private void OnGetAllRolesOperationCompleted(object arg) {
            if ((this.GetAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRolesCompleted(this, new GetAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllRights", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRights(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllRights", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRightsAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetAllRightsAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllRightsAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllRightsOperationCompleted == null)) {
                this.GetAllRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRightsOperationCompleted);
            }
            this.InvokeAsync("GetAllRights", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllRightsOperationCompleted, userState);
        }
        
        private void OnGetAllRightsOperationCompleted(object arg) {
            if ((this.GetAllRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRightsCompleted(this, new GetAllRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/InsertOrUpdateData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertOrUpdateData(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("InsertOrUpdateData", new object[] {
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrUpdateDataAsync(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.InsertOrUpdateDataAsync(iDataSet, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void InsertOrUpdateDataAsync(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.InsertOrUpdateDataOperationCompleted == null)) {
                this.InsertOrUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrUpdateDataOperationCompleted);
            }
            this.InvokeAsync("InsertOrUpdateData", new object[] {
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.InsertOrUpdateDataOperationCompleted, userState);
        }
        
        private void OnInsertOrUpdateDataOperationCompleted(object arg) {
            if ((this.InsertOrUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrUpdateDataCompleted(this, new InsertOrUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EffectiveUserRights" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EffectiveUserRights(int UserKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EffectiveUserRights", new object[] {
                        UserKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EffectiveUserRightsAsync(int UserKey, string pAuthenticateKey, string oErrMsg) {
            this.EffectiveUserRightsAsync(UserKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EffectiveUserRightsAsync(int UserKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EffectiveUserRightsOperationCompleted == null)) {
                this.EffectiveUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEffectiveUserRightsOperationCompleted);
            }
            this.InvokeAsync("EffectiveUserRights", new object[] {
                        UserKey,
                        pAuthenticateKey,
                        oErrMsg}, this.EffectiveUserRightsOperationCompleted, userState);
        }
        
        private void OnEffectiveUserRightsOperationCompleted(object arg) {
            if ((this.EffectiveUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EffectiveUserRightsCompleted(this, new EffectiveUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EffectiveRoleRights" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EffectiveRoleRights(int RoleKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EffectiveRoleRights", new object[] {
                        RoleKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EffectiveRoleRightsAsync(int RoleKey, string pAuthenticateKey, string oErrMsg) {
            this.EffectiveRoleRightsAsync(RoleKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EffectiveRoleRightsAsync(int RoleKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EffectiveRoleRightsOperationCompleted == null)) {
                this.EffectiveRoleRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEffectiveRoleRightsOperationCompleted);
            }
            this.InvokeAsync("EffectiveRoleRights", new object[] {
                        RoleKey,
                        pAuthenticateKey,
                        oErrMsg}, this.EffectiveRoleRightsOperationCompleted, userState);
        }
        
        private void OnEffectiveRoleRightsOperationCompleted(object arg) {
            if ((this.EffectiveRoleRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EffectiveRoleRightsCompleted(this, new EffectiveRoleRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetRightsForRole" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetRightsForRole(int RoleKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetRightsForRole", new object[] {
                        RoleKey,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetRightsForRoleAsync(int RoleKey, string pAuthenticateKey) {
            this.ApiGetRightsForRoleAsync(RoleKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetRightsForRoleAsync(int RoleKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetRightsForRoleOperationCompleted == null)) {
                this.ApiGetRightsForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetRightsForRoleOperationCompleted);
            }
            this.InvokeAsync("ApiGetRightsForRole", new object[] {
                        RoleKey,
                        pAuthenticateKey}, this.ApiGetRightsForRoleOperationCompleted, userState);
        }
        
        private void OnApiGetRightsForRoleOperationCompleted(object arg) {
            if ((this.ApiGetRightsForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetRightsForRoleCompleted(this, new ApiGetRightsForRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiReplaceRightsFor" +
            "Role", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiReplaceRightsForRole(int RoleKey, string RoleRightsAsString, string pAuthenticateKey) {
            this.Invoke("ApiReplaceRightsForRole", new object[] {
                        RoleKey,
                        RoleRightsAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiReplaceRightsForRoleAsync(int RoleKey, string RoleRightsAsString, string pAuthenticateKey) {
            this.ApiReplaceRightsForRoleAsync(RoleKey, RoleRightsAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiReplaceRightsForRoleAsync(int RoleKey, string RoleRightsAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiReplaceRightsForRoleOperationCompleted == null)) {
                this.ApiReplaceRightsForRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiReplaceRightsForRoleOperationCompleted);
            }
            this.InvokeAsync("ApiReplaceRightsForRole", new object[] {
                        RoleKey,
                        RoleRightsAsString,
                        pAuthenticateKey}, this.ApiReplaceRightsForRoleOperationCompleted, userState);
        }
        
        private void OnApiReplaceRightsForRoleOperationCompleted(object arg) {
            if ((this.ApiReplaceRightsForRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiReplaceRightsForRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetAllRoles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetAllRoles(string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetAllRoles", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetAllRolesAsync(string pAuthenticateKey) {
            this.ApiGetAllRolesAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetAllRolesAsync(string pAuthenticateKey, object userState) {
            if ((this.ApiGetAllRolesOperationCompleted == null)) {
                this.ApiGetAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetAllRolesOperationCompleted);
            }
            this.InvokeAsync("ApiGetAllRoles", new object[] {
                        pAuthenticateKey}, this.ApiGetAllRolesOperationCompleted, userState);
        }
        
        private void OnApiGetAllRolesOperationCompleted(object arg) {
            if ((this.ApiGetAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetAllRolesCompleted(this, new ApiGetAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetRole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetRole(int RoleKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetRole", new object[] {
                        RoleKey,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetRoleAsync(int RoleKey, string pAuthenticateKey) {
            this.ApiGetRoleAsync(RoleKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetRoleAsync(int RoleKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetRoleOperationCompleted == null)) {
                this.ApiGetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetRoleOperationCompleted);
            }
            this.InvokeAsync("ApiGetRole", new object[] {
                        RoleKey,
                        pAuthenticateKey}, this.ApiGetRoleOperationCompleted, userState);
        }
        
        private void OnApiGetRoleOperationCompleted(object arg) {
            if ((this.ApiGetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetRoleCompleted(this, new ApiGetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetRoleByName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetRoleByName(string RoleName, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetRoleByName", new object[] {
                        RoleName,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetRoleByNameAsync(string RoleName, string pAuthenticateKey) {
            this.ApiGetRoleByNameAsync(RoleName, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetRoleByNameAsync(string RoleName, string pAuthenticateKey, object userState) {
            if ((this.ApiGetRoleByNameOperationCompleted == null)) {
                this.ApiGetRoleByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetRoleByNameOperationCompleted);
            }
            this.InvokeAsync("ApiGetRoleByName", new object[] {
                        RoleName,
                        pAuthenticateKey}, this.ApiGetRoleByNameOperationCompleted, userState);
        }
        
        private void OnApiGetRoleByNameOperationCompleted(object arg) {
            if ((this.ApiGetRoleByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetRoleByNameCompleted(this, new ApiGetRoleByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiAddRole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiAddRole(string RoleAsString, string pAuthenticateKey) {
            this.Invoke("ApiAddRole", new object[] {
                        RoleAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiAddRoleAsync(string RoleAsString, string pAuthenticateKey) {
            this.ApiAddRoleAsync(RoleAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiAddRoleAsync(string RoleAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiAddRoleOperationCompleted == null)) {
                this.ApiAddRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiAddRoleOperationCompleted);
            }
            this.InvokeAsync("ApiAddRole", new object[] {
                        RoleAsString,
                        pAuthenticateKey}, this.ApiAddRoleOperationCompleted, userState);
        }
        
        private void OnApiAddRoleOperationCompleted(object arg) {
            if ((this.ApiAddRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiAddRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiSaveRole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiSaveRole(string RoleAsString, string pAuthenticateKey) {
            this.Invoke("ApiSaveRole", new object[] {
                        RoleAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiSaveRoleAsync(string RoleAsString, string pAuthenticateKey) {
            this.ApiSaveRoleAsync(RoleAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiSaveRoleAsync(string RoleAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiSaveRoleOperationCompleted == null)) {
                this.ApiSaveRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiSaveRoleOperationCompleted);
            }
            this.InvokeAsync("ApiSaveRole", new object[] {
                        RoleAsString,
                        pAuthenticateKey}, this.ApiSaveRoleOperationCompleted, userState);
        }
        
        private void OnApiSaveRoleOperationCompleted(object arg) {
            if ((this.ApiSaveRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiSaveRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiDeleteRole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiDeleteRole(int RoleKey, string pAuthenticateKey) {
            this.Invoke("ApiDeleteRole", new object[] {
                        RoleKey,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiDeleteRoleAsync(int RoleKey, string pAuthenticateKey) {
            this.ApiDeleteRoleAsync(RoleKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiDeleteRoleAsync(int RoleKey, string pAuthenticateKey, object userState) {
            if ((this.ApiDeleteRoleOperationCompleted == null)) {
                this.ApiDeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("ApiDeleteRole", new object[] {
                        RoleKey,
                        pAuthenticateKey}, this.ApiDeleteRoleOperationCompleted, userState);
        }
        
        private void OnApiDeleteRoleOperationCompleted(object arg) {
            if ((this.ApiDeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiDeleteRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetRolesForUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetRolesForUser(int UserKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetRolesForUser", new object[] {
                        UserKey,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetRolesForUserAsync(int UserKey, string pAuthenticateKey) {
            this.ApiGetRolesForUserAsync(UserKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetRolesForUserAsync(int UserKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetRolesForUserOperationCompleted == null)) {
                this.ApiGetRolesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetRolesForUserOperationCompleted);
            }
            this.InvokeAsync("ApiGetRolesForUser", new object[] {
                        UserKey,
                        pAuthenticateKey}, this.ApiGetRolesForUserOperationCompleted, userState);
        }
        
        private void OnApiGetRolesForUserOperationCompleted(object arg) {
            if ((this.ApiGetRolesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetRolesForUserCompleted(this, new ApiGetRolesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiReplaceRolesForU" +
            "ser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiReplaceRolesForUser(int UserKey, string UserRolesAsString, string pAuthenticateKey) {
            this.Invoke("ApiReplaceRolesForUser", new object[] {
                        UserKey,
                        UserRolesAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiReplaceRolesForUserAsync(int UserKey, string UserRolesAsString, string pAuthenticateKey) {
            this.ApiReplaceRolesForUserAsync(UserKey, UserRolesAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiReplaceRolesForUserAsync(int UserKey, string UserRolesAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiReplaceRolesForUserOperationCompleted == null)) {
                this.ApiReplaceRolesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiReplaceRolesForUserOperationCompleted);
            }
            this.InvokeAsync("ApiReplaceRolesForUser", new object[] {
                        UserKey,
                        UserRolesAsString,
                        pAuthenticateKey}, this.ApiReplaceRolesForUserOperationCompleted, userState);
        }
        
        private void OnApiReplaceRolesForUserOperationCompleted(object arg) {
            if ((this.ApiReplaceRolesForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiReplaceRolesForUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetAllUsers", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetAllUsers(string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetAllUsers", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetAllUsersAsync(string pAuthenticateKey) {
            this.ApiGetAllUsersAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetAllUsersAsync(string pAuthenticateKey, object userState) {
            if ((this.ApiGetAllUsersOperationCompleted == null)) {
                this.ApiGetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("ApiGetAllUsers", new object[] {
                        pAuthenticateKey}, this.ApiGetAllUsersOperationCompleted, userState);
        }
        
        private void OnApiGetAllUsersOperationCompleted(object arg) {
            if ((this.ApiGetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetAllUsersCompleted(this, new ApiGetAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetUser(int UserKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetUser", new object[] {
                        UserKey,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetUserAsync(int UserKey, string pAuthenticateKey) {
            this.ApiGetUserAsync(UserKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetUserAsync(int UserKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetUserOperationCompleted == null)) {
                this.ApiGetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetUserOperationCompleted);
            }
            this.InvokeAsync("ApiGetUser", new object[] {
                        UserKey,
                        pAuthenticateKey}, this.ApiGetUserOperationCompleted, userState);
        }
        
        private void OnApiGetUserOperationCompleted(object arg) {
            if ((this.ApiGetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetUserCompleted(this, new ApiGetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetUserByUserNam" +
            "e", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApiGetUserByUserName(string UserName, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetUserByUserName", new object[] {
                        UserName,
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetUserByUserNameAsync(string UserName, string pAuthenticateKey) {
            this.ApiGetUserByUserNameAsync(UserName, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetUserByUserNameAsync(string UserName, string pAuthenticateKey, object userState) {
            if ((this.ApiGetUserByUserNameOperationCompleted == null)) {
                this.ApiGetUserByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetUserByUserNameOperationCompleted);
            }
            this.InvokeAsync("ApiGetUserByUserName", new object[] {
                        UserName,
                        pAuthenticateKey}, this.ApiGetUserByUserNameOperationCompleted, userState);
        }
        
        private void OnApiGetUserByUserNameOperationCompleted(object arg) {
            if ((this.ApiGetUserByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetUserByUserNameCompleted(this, new ApiGetUserByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiAddUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiAddUser(string UserAsString, string pAuthenticateKey) {
            this.Invoke("ApiAddUser", new object[] {
                        UserAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiAddUserAsync(string UserAsString, string pAuthenticateKey) {
            this.ApiAddUserAsync(UserAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiAddUserAsync(string UserAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiAddUserOperationCompleted == null)) {
                this.ApiAddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiAddUserOperationCompleted);
            }
            this.InvokeAsync("ApiAddUser", new object[] {
                        UserAsString,
                        pAuthenticateKey}, this.ApiAddUserOperationCompleted, userState);
        }
        
        private void OnApiAddUserOperationCompleted(object arg) {
            if ((this.ApiAddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiAddUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiSaveUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiSaveUser(string UserAsString, string pAuthenticateKey) {
            this.Invoke("ApiSaveUser", new object[] {
                        UserAsString,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiSaveUserAsync(string UserAsString, string pAuthenticateKey) {
            this.ApiSaveUserAsync(UserAsString, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiSaveUserAsync(string UserAsString, string pAuthenticateKey, object userState) {
            if ((this.ApiSaveUserOperationCompleted == null)) {
                this.ApiSaveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiSaveUserOperationCompleted);
            }
            this.InvokeAsync("ApiSaveUser", new object[] {
                        UserAsString,
                        pAuthenticateKey}, this.ApiSaveUserOperationCompleted, userState);
        }
        
        private void OnApiSaveUserOperationCompleted(object arg) {
            if ((this.ApiSaveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiSaveUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiDeleteUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiDeleteUser(int UserKey, string pAuthenticateKey) {
            this.Invoke("ApiDeleteUser", new object[] {
                        UserKey,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiDeleteUserAsync(int UserKey, string pAuthenticateKey) {
            this.ApiDeleteUserAsync(UserKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiDeleteUserAsync(int UserKey, string pAuthenticateKey, object userState) {
            if ((this.ApiDeleteUserOperationCompleted == null)) {
                this.ApiDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiDeleteUserOperationCompleted);
            }
            this.InvokeAsync("ApiDeleteUser", new object[] {
                        UserKey,
                        pAuthenticateKey}, this.ApiDeleteUserOperationCompleted, userState);
        }
        
        private void OnApiDeleteUserOperationCompleted(object arg) {
            if ((this.ApiDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiDeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetCitationImage" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ApiGetCitationImage(string citationStructureName, long citationUniqueKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetCitationImage", new object[] {
                        citationStructureName,
                        citationUniqueKey,
                        pAuthenticateKey});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetCitationImageAsync(string citationStructureName, long citationUniqueKey, string pAuthenticateKey) {
            this.ApiGetCitationImageAsync(citationStructureName, citationUniqueKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetCitationImageAsync(string citationStructureName, long citationUniqueKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetCitationImageOperationCompleted == null)) {
                this.ApiGetCitationImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetCitationImageOperationCompleted);
            }
            this.InvokeAsync("ApiGetCitationImage", new object[] {
                        citationStructureName,
                        citationUniqueKey,
                        pAuthenticateKey}, this.ApiGetCitationImageOperationCompleted, userState);
        }
        
        private void OnApiGetCitationImageOperationCompleted(object arg) {
            if ((this.ApiGetCitationImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetCitationImageCompleted(this, new ApiGetCitationImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetCitationDetai" +
            "ls", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApiGetCitationDetails(string citationStructureName, long citationUniqueKey, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetCitationDetails", new object[] {
                        citationStructureName,
                        citationUniqueKey,
                        pAuthenticateKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetCitationDetailsAsync(string citationStructureName, long citationUniqueKey, string pAuthenticateKey) {
            this.ApiGetCitationDetailsAsync(citationStructureName, citationUniqueKey, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetCitationDetailsAsync(string citationStructureName, long citationUniqueKey, string pAuthenticateKey, object userState) {
            if ((this.ApiGetCitationDetailsOperationCompleted == null)) {
                this.ApiGetCitationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetCitationDetailsOperationCompleted);
            }
            this.InvokeAsync("ApiGetCitationDetails", new object[] {
                        citationStructureName,
                        citationUniqueKey,
                        pAuthenticateKey}, this.ApiGetCitationDetailsOperationCompleted, userState);
        }
        
        private void OnApiGetCitationDetailsOperationCompleted(object arg) {
            if ((this.ApiGetCitationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetCitationDetailsCompleted(this, new ApiGetCitationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetCitationNumbe" +
            "rFormat", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApiGetCitationNumberFormat(string citationStructureName, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetCitationNumberFormat", new object[] {
                        citationStructureName,
                        pAuthenticateKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetCitationNumberFormatAsync(string citationStructureName, string pAuthenticateKey) {
            this.ApiGetCitationNumberFormatAsync(citationStructureName, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetCitationNumberFormatAsync(string citationStructureName, string pAuthenticateKey, object userState) {
            if ((this.ApiGetCitationNumberFormatOperationCompleted == null)) {
                this.ApiGetCitationNumberFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetCitationNumberFormatOperationCompleted);
            }
            this.InvokeAsync("ApiGetCitationNumberFormat", new object[] {
                        citationStructureName,
                        pAuthenticateKey}, this.ApiGetCitationNumberFormatOperationCompleted, userState);
        }
        
        private void OnApiGetCitationNumberFormatOperationCompleted(object arg) {
            if ((this.ApiGetCitationNumberFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetCitationNumberFormatCompleted(this, new ApiGetCitationNumberFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiPemsDBPushTest", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiPemsDBPushTest(long citationUniqueKey) {
            this.Invoke("ApiPemsDBPushTest", new object[] {
                        citationUniqueKey});
        }
        
        /// <remarks/>
        public void ApiPemsDBPushTestAsync(long citationUniqueKey) {
            this.ApiPemsDBPushTestAsync(citationUniqueKey, null);
        }
        
        /// <remarks/>
        public void ApiPemsDBPushTestAsync(long citationUniqueKey, object userState) {
            if ((this.ApiPemsDBPushTestOperationCompleted == null)) {
                this.ApiPemsDBPushTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiPemsDBPushTestOperationCompleted);
            }
            this.InvokeAsync("ApiPemsDBPushTest", new object[] {
                        citationUniqueKey}, this.ApiPemsDBPushTestOperationCompleted, userState);
        }
        
        private void OnApiPemsDBPushTestOperationCompleted(object arg) {
            if ((this.ApiPemsDBPushTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiPemsDBPushTestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PushNoteRecordsData" +
            "ToPEMS", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PushNoteRecordsDataToPEMS(string iNotesStructName, System.Data.DataSet data, string pAuthenticateKey) {
            this.Invoke("PushNoteRecordsDataToPEMS", new object[] {
                        iNotesStructName,
                        data,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void PushNoteRecordsDataToPEMSAsync(string iNotesStructName, System.Data.DataSet data, string pAuthenticateKey) {
            this.PushNoteRecordsDataToPEMSAsync(iNotesStructName, data, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void PushNoteRecordsDataToPEMSAsync(string iNotesStructName, System.Data.DataSet data, string pAuthenticateKey, object userState) {
            if ((this.PushNoteRecordsDataToPEMSOperationCompleted == null)) {
                this.PushNoteRecordsDataToPEMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushNoteRecordsDataToPEMSOperationCompleted);
            }
            this.InvokeAsync("PushNoteRecordsDataToPEMS", new object[] {
                        iNotesStructName,
                        data,
                        pAuthenticateKey}, this.PushNoteRecordsDataToPEMSOperationCompleted, userState);
        }
        
        private void OnPushNoteRecordsDataToPEMSOperationCompleted(object arg) {
            if ((this.PushNoteRecordsDataToPEMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushNoteRecordsDataToPEMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetAllListGroupN" +
            "ames", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ApiGetAllListGroupNames(string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetAllListGroupNames", new object[] {
                        pAuthenticateKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetAllListGroupNamesAsync(string pAuthenticateKey) {
            this.ApiGetAllListGroupNamesAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetAllListGroupNamesAsync(string pAuthenticateKey, object userState) {
            if ((this.ApiGetAllListGroupNamesOperationCompleted == null)) {
                this.ApiGetAllListGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetAllListGroupNamesOperationCompleted);
            }
            this.InvokeAsync("ApiGetAllListGroupNames", new object[] {
                        pAuthenticateKey}, this.ApiGetAllListGroupNamesOperationCompleted, userState);
        }
        
        private void OnApiGetAllListGroupNamesOperationCompleted(object arg) {
            if ((this.ApiGetAllListGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetAllListGroupNamesCompleted(this, new ApiGetAllListGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiGetListGroupData" +
            "Set", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ApiGetListGroupDataSet(string listGroupName, string pAuthenticateKey) {
            object[] results = this.Invoke("ApiGetListGroupDataSet", new object[] {
                        listGroupName,
                        pAuthenticateKey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ApiGetListGroupDataSetAsync(string listGroupName, string pAuthenticateKey) {
            this.ApiGetListGroupDataSetAsync(listGroupName, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiGetListGroupDataSetAsync(string listGroupName, string pAuthenticateKey, object userState) {
            if ((this.ApiGetListGroupDataSetOperationCompleted == null)) {
                this.ApiGetListGroupDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiGetListGroupDataSetOperationCompleted);
            }
            this.InvokeAsync("ApiGetListGroupDataSet", new object[] {
                        listGroupName,
                        pAuthenticateKey}, this.ApiGetListGroupDataSetOperationCompleted, userState);
        }
        
        private void OnApiGetListGroupDataSetOperationCompleted(object arg) {
            if ((this.ApiGetListGroupDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiGetListGroupDataSetCompleted(this, new ApiGetListGroupDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ApiSaveListGroupDat" +
            "aSet", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApiSaveListGroupDataSet(string listGroupName, System.Data.DataSet dataSet, string pAuthenticateKey) {
            this.Invoke("ApiSaveListGroupDataSet", new object[] {
                        listGroupName,
                        dataSet,
                        pAuthenticateKey});
        }
        
        /// <remarks/>
        public void ApiSaveListGroupDataSetAsync(string listGroupName, System.Data.DataSet dataSet, string pAuthenticateKey) {
            this.ApiSaveListGroupDataSetAsync(listGroupName, dataSet, pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void ApiSaveListGroupDataSetAsync(string listGroupName, System.Data.DataSet dataSet, string pAuthenticateKey, object userState) {
            if ((this.ApiSaveListGroupDataSetOperationCompleted == null)) {
                this.ApiSaveListGroupDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApiSaveListGroupDataSetOperationCompleted);
            }
            this.InvokeAsync("ApiSaveListGroupDataSet", new object[] {
                        listGroupName,
                        dataSet,
                        pAuthenticateKey}, this.ApiSaveListGroupDataSetOperationCompleted, userState);
        }
        
        private void OnApiSaveListGroupDataSetOperationCompleted(object arg) {
            if ((this.ApiSaveListGroupDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApiSaveListGroupDataSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ChangeRoleRights", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeRoleRights(int iRoleKey, string iEffectiveRightsAsString, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ChangeRoleRights", new object[] {
                        iRoleKey,
                        iEffectiveRightsAsString,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeRoleRightsAsync(int iRoleKey, string iEffectiveRightsAsString, string pAuthenticateKey, string oErrMsg) {
            this.ChangeRoleRightsAsync(iRoleKey, iEffectiveRightsAsString, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ChangeRoleRightsAsync(int iRoleKey, string iEffectiveRightsAsString, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ChangeRoleRightsOperationCompleted == null)) {
                this.ChangeRoleRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeRoleRightsOperationCompleted);
            }
            this.InvokeAsync("ChangeRoleRights", new object[] {
                        iRoleKey,
                        iEffectiveRightsAsString,
                        pAuthenticateKey,
                        oErrMsg}, this.ChangeRoleRightsOperationCompleted, userState);
        }
        
        private void OnChangeRoleRightsOperationCompleted(object arg) {
            if ((this.ChangeRoleRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeRoleRightsCompleted(this, new ChangeRoleRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ChangeUserRights", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserRights(int iUserKey, string iEffectiveRightsAsString, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ChangeUserRights", new object[] {
                        iUserKey,
                        iEffectiveRightsAsString,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserRightsAsync(int iUserKey, string iEffectiveRightsAsString, string pAuthenticateKey, string oErrMsg) {
            this.ChangeUserRightsAsync(iUserKey, iEffectiveRightsAsString, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ChangeUserRightsAsync(int iUserKey, string iEffectiveRightsAsString, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ChangeUserRightsOperationCompleted == null)) {
                this.ChangeUserRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserRightsOperationCompleted);
            }
            this.InvokeAsync("ChangeUserRights", new object[] {
                        iUserKey,
                        iEffectiveRightsAsString,
                        pAuthenticateKey,
                        oErrMsg}, this.ChangeUserRightsOperationCompleted, userState);
        }
        
        private void OnChangeUserRightsOperationCompleted(object arg) {
            if ((this.ChangeUserRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserRightsCompleted(this, new ChangeUserRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUserKeyForName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserKeyForName(string iUserName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetUserKeyForName", new object[] {
                        iUserName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserKeyForNameAsync(string iUserName, string pAuthenticateKey, string oErrMsg) {
            this.GetUserKeyForNameAsync(iUserName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetUserKeyForNameAsync(string iUserName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetUserKeyForNameOperationCompleted == null)) {
                this.GetUserKeyForNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserKeyForNameOperationCompleted);
            }
            this.InvokeAsync("GetUserKeyForName", new object[] {
                        iUserName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetUserKeyForNameOperationCompleted, userState);
        }
        
        private void OnGetUserKeyForNameOperationCompleted(object arg) {
            if ((this.GetUserKeyForNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserKeyForNameCompleted(this, new GetUserKeyForNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetRoleKeyForName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRoleKeyForName(string iRoleName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetRoleKeyForName", new object[] {
                        iRoleName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleKeyForNameAsync(string iRoleName, string pAuthenticateKey, string oErrMsg) {
            this.GetRoleKeyForNameAsync(iRoleName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetRoleKeyForNameAsync(string iRoleName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetRoleKeyForNameOperationCompleted == null)) {
                this.GetRoleKeyForNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleKeyForNameOperationCompleted);
            }
            this.InvokeAsync("GetRoleKeyForName", new object[] {
                        iRoleName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetRoleKeyForNameOperationCompleted, userState);
        }
        
        private void OnGetRoleKeyForNameOperationCompleted(object arg) {
            if ((this.GetRoleKeyForNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleKeyForNameCompleted(this, new GetRoleKeyForNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ChangeUserRoles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserRoles(int iUserKey, System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ChangeUserRoles", new object[] {
                        iUserKey,
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserRolesAsync(int iUserKey, System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.ChangeUserRolesAsync(iUserKey, iDataSet, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ChangeUserRolesAsync(int iUserKey, System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ChangeUserRolesOperationCompleted == null)) {
                this.ChangeUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserRolesOperationCompleted);
            }
            this.InvokeAsync("ChangeUserRoles", new object[] {
                        iUserKey,
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.ChangeUserRolesOperationCompleted, userState);
        }
        
        private void OnChangeUserRolesOperationCompleted(object arg) {
            if ((this.ChangeUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserRolesCompleted(this, new ChangeUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUserRoles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserRoles(int iUserKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetUserRoles", new object[] {
                        iUserKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(int iUserKey, string pAuthenticateKey, string oErrMsg) {
            this.GetUserRolesAsync(iUserKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetUserRolesAsync(int iUserKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetUserRolesOperationCompleted == null)) {
                this.GetUserRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRolesOperationCompleted);
            }
            this.InvokeAsync("GetUserRoles", new object[] {
                        iUserKey,
                        pAuthenticateKey,
                        oErrMsg}, this.GetUserRolesOperationCompleted, userState);
        }
        
        private void OnGetUserRolesOperationCompleted(object arg) {
            if ((this.GetUserRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRolesCompleted(this, new GetUserRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteUser", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser(int iUserKey, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        iUserKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int iUserKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.DeleteUserAsync(iUserKey, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int iUserKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        iUserKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteRole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRole(int iRoleKey, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteRole", new object[] {
                        iRoleKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(int iRoleKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.DeleteRoleAsync(iRoleKey, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteRoleAsync(int iRoleKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteRoleOperationCompleted == null)) {
                this.DeleteRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteRole", new object[] {
                        iRoleKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteRoleOperationCompleted, userState);
        }
        
        private void OnDeleteRoleOperationCompleted(object arg) {
            if ((this.DeleteRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRoleCompleted(this, new DeleteRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RegisterAccessRight" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterAccessRight(string iName, string iCategory, string iDescription, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RegisterAccessRight", new object[] {
                        iName,
                        iCategory,
                        iDescription,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAccessRightAsync(string iName, string iCategory, string iDescription, string pAuthenticateKey, string oErrMsg) {
            this.RegisterAccessRightAsync(iName, iCategory, iDescription, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RegisterAccessRightAsync(string iName, string iCategory, string iDescription, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RegisterAccessRightOperationCompleted == null)) {
                this.RegisterAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAccessRightOperationCompleted);
            }
            this.InvokeAsync("RegisterAccessRight", new object[] {
                        iName,
                        iCategory,
                        iDescription,
                        pAuthenticateKey,
                        oErrMsg}, this.RegisterAccessRightOperationCompleted, userState);
        }
        
        private void OnRegisterAccessRightOperationCompleted(object arg) {
            if ((this.RegisterAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAccessRightCompleted(this, new RegisterAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RegisterAccessRight" +
            "s", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterAccessRights([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] BinaryDataTable, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RegisterAccessRights", new object[] {
                        BinaryDataTable,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAccessRightsAsync(byte[] BinaryDataTable, string pAuthenticateKey, string oErrMsg) {
            this.RegisterAccessRightsAsync(BinaryDataTable, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RegisterAccessRightsAsync(byte[] BinaryDataTable, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RegisterAccessRightsOperationCompleted == null)) {
                this.RegisterAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterAccessRightsOperationCompleted);
            }
            this.InvokeAsync("RegisterAccessRights", new object[] {
                        BinaryDataTable,
                        pAuthenticateKey,
                        oErrMsg}, this.RegisterAccessRightsOperationCompleted, userState);
        }
        
        private void OnRegisterAccessRightsOperationCompleted(object arg) {
            if ((this.RegisterAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterAccessRightsCompleted(this, new RegisterAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteAccessRight", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccessRight(string iName, string iCategory, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteAccessRight", new object[] {
                        iName,
                        iCategory,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAccessRightAsync(string iName, string iCategory, string pAuthenticateKey, string oErrMsg) {
            this.DeleteAccessRightAsync(iName, iCategory, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteAccessRightAsync(string iName, string iCategory, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteAccessRightOperationCompleted == null)) {
                this.DeleteAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccessRightOperationCompleted);
            }
            this.InvokeAsync("DeleteAccessRight", new object[] {
                        iName,
                        iCategory,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteAccessRightOperationCompleted, userState);
        }
        
        private void OnDeleteAccessRightOperationCompleted(object arg) {
            if ((this.DeleteAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccessRightCompleted(this, new DeleteAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RenameAccessRight", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameAccessRight(string iOldName, string iOldCategory, string iNewName, string iNewCategory, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RenameAccessRight", new object[] {
                        iOldName,
                        iOldCategory,
                        iNewName,
                        iNewCategory,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameAccessRightAsync(string iOldName, string iOldCategory, string iNewName, string iNewCategory, string pAuthenticateKey, string oErrMsg) {
            this.RenameAccessRightAsync(iOldName, iOldCategory, iNewName, iNewCategory, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RenameAccessRightAsync(string iOldName, string iOldCategory, string iNewName, string iNewCategory, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RenameAccessRightOperationCompleted == null)) {
                this.RenameAccessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameAccessRightOperationCompleted);
            }
            this.InvokeAsync("RenameAccessRight", new object[] {
                        iOldName,
                        iOldCategory,
                        iNewName,
                        iNewCategory,
                        pAuthenticateKey,
                        oErrMsg}, this.RenameAccessRightOperationCompleted, userState);
        }
        
        private void OnRenameAccessRightOperationCompleted(object arg) {
            if ((this.RenameAccessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameAccessRightCompleted(this, new RenameAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAccessRightKey", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccessRightKey(string iName, string iCategory, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAccessRightKey", new object[] {
                        iName,
                        iCategory,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessRightKeyAsync(string iName, string iCategory, string pAuthenticateKey, string oErrMsg) {
            this.GetAccessRightKeyAsync(iName, iCategory, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAccessRightKeyAsync(string iName, string iCategory, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAccessRightKeyOperationCompleted == null)) {
                this.GetAccessRightKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessRightKeyOperationCompleted);
            }
            this.InvokeAsync("GetAccessRightKey", new object[] {
                        iName,
                        iCategory,
                        pAuthenticateKey,
                        oErrMsg}, this.GetAccessRightKeyOperationCompleted, userState);
        }
        
        private void OnGetAccessRightKeyOperationCompleted(object arg) {
            if ((this.GetAccessRightKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessRightKeyCompleted(this, new GetAccessRightKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddAccessRightToRol" +
            "e", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAccessRightToRole(int iRoleKey, string iSerializedRight, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AddAccessRightToRole", new object[] {
                        iRoleKey,
                        iSerializedRight,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccessRightToRoleAsync(int iRoleKey, string iSerializedRight, string pAuthenticateKey, string oErrMsg) {
            this.AddAccessRightToRoleAsync(iRoleKey, iSerializedRight, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AddAccessRightToRoleAsync(int iRoleKey, string iSerializedRight, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AddAccessRightToRoleOperationCompleted == null)) {
                this.AddAccessRightToRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccessRightToRoleOperationCompleted);
            }
            this.InvokeAsync("AddAccessRightToRole", new object[] {
                        iRoleKey,
                        iSerializedRight,
                        pAuthenticateKey,
                        oErrMsg}, this.AddAccessRightToRoleOperationCompleted, userState);
        }
        
        private void OnAddAccessRightToRoleOperationCompleted(object arg) {
            if ((this.AddAccessRightToRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccessRightToRoleCompleted(this, new AddAccessRightToRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddAccessRightToUse" +
            "r", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAccessRightToUser(int iUserKey, string iSerializedRight, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AddAccessRightToUser", new object[] {
                        iUserKey,
                        iSerializedRight,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAccessRightToUserAsync(int iUserKey, string iSerializedRight, string pAuthenticateKey, string oErrMsg) {
            this.AddAccessRightToUserAsync(iUserKey, iSerializedRight, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AddAccessRightToUserAsync(int iUserKey, string iSerializedRight, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AddAccessRightToUserOperationCompleted == null)) {
                this.AddAccessRightToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAccessRightToUserOperationCompleted);
            }
            this.InvokeAsync("AddAccessRightToUser", new object[] {
                        iUserKey,
                        iSerializedRight,
                        pAuthenticateKey,
                        oErrMsg}, this.AddAccessRightToUserOperationCompleted, userState);
        }
        
        private void OnAddAccessRightToUserOperationCompleted(object arg) {
            if ((this.AddAccessRightToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAccessRightToUserCompleted(this, new AddAccessRightToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ChangeUserPassword", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserPassword(int iUserKey, string iUserPassword, string iOldPassword, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        iUserKey,
                        iUserPassword,
                        iOldPassword,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int iUserKey, string iUserPassword, string iOldPassword, string pAuthenticateKey, string oErrMsg) {
            this.ChangeUserPasswordAsync(iUserKey, iUserPassword, iOldPassword, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(int iUserKey, string iUserPassword, string iOldPassword, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        iUserKey,
                        iUserPassword,
                        iOldPassword,
                        pAuthenticateKey,
                        oErrMsg}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSecurityPolicy", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecurityPolicy GetSecurityPolicy(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSecurityPolicy", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((SecurityPolicy)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityPolicyAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetSecurityPolicyAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSecurityPolicyAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSecurityPolicyOperationCompleted == null)) {
                this.GetSecurityPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityPolicyOperationCompleted);
            }
            this.InvokeAsync("GetSecurityPolicy", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetSecurityPolicyOperationCompleted, userState);
        }
        
        private void OnGetSecurityPolicyOperationCompleted(object arg) {
            if ((this.GetSecurityPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityPolicyCompleted(this, new GetSecurityPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetSecurityPolicy", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSecurityPolicy(SecurityPolicy iSecurityPolicy, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetSecurityPolicy", new object[] {
                        iSecurityPolicy,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetSecurityPolicyAsync(SecurityPolicy iSecurityPolicy, string pAuthenticateKey, string oErrMsg) {
            this.SetSecurityPolicyAsync(iSecurityPolicy, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetSecurityPolicyAsync(SecurityPolicy iSecurityPolicy, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetSecurityPolicyOperationCompleted == null)) {
                this.SetSecurityPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSecurityPolicyOperationCompleted);
            }
            this.InvokeAsync("SetSecurityPolicy", new object[] {
                        iSecurityPolicy,
                        pAuthenticateKey,
                        oErrMsg}, this.SetSecurityPolicyOperationCompleted, userState);
        }
        
        private void OnSetSecurityPolicyOperationCompleted(object arg) {
            if ((this.SetSecurityPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSecurityPolicyCompleted(this, new SetSecurityPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GenerateHandheldUse" +
            "rStructFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerateHandheldUserStructFile(string iUserStructAsString, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, ref string oErrMsg) {
            object[] results = this.Invoke("GenerateHandheldUserStructFile", new object[] {
                        iUserStructAsString,
                        iEncryptionType,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerateHandheldUserStructFileAsync(string iUserStructAsString, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, string oErrMsg) {
            this.GenerateHandheldUserStructFileAsync(iUserStructAsString, iEncryptionType, pAuthenticateKey, iSubConfigKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GenerateHandheldUserStructFileAsync(string iUserStructAsString, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, string oErrMsg, object userState) {
            if ((this.GenerateHandheldUserStructFileOperationCompleted == null)) {
                this.GenerateHandheldUserStructFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateHandheldUserStructFileOperationCompleted);
            }
            this.InvokeAsync("GenerateHandheldUserStructFile", new object[] {
                        iUserStructAsString,
                        iEncryptionType,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg}, this.GenerateHandheldUserStructFileOperationCompleted, userState);
        }
        
        private void OnGenerateHandheldUserStructFileOperationCompleted(object arg) {
            if ((this.GenerateHandheldUserStructFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateHandheldUserStructFileCompleted(this, new GenerateHandheldUserStructFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GenerateHandheldUse" +
            "rStructFile_Ex", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GenerateHandheldUserStructFile_Ex(string iUserStructAsString, ref string iDestFileName, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, ref string oErrMsg) {
            object[] results = this.Invoke("GenerateHandheldUserStructFile_Ex", new object[] {
                        iUserStructAsString,
                        iDestFileName,
                        iEncryptionType,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg});
            iDestFileName = ((string)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GenerateHandheldUserStructFile_ExAsync(string iUserStructAsString, string iDestFileName, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, string oErrMsg) {
            this.GenerateHandheldUserStructFile_ExAsync(iUserStructAsString, iDestFileName, iEncryptionType, pAuthenticateKey, iSubConfigKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GenerateHandheldUserStructFile_ExAsync(string iUserStructAsString, string iDestFileName, UserStructEncryptionType iEncryptionType, string pAuthenticateKey, int iSubConfigKey, string oErrMsg, object userState) {
            if ((this.GenerateHandheldUserStructFile_ExOperationCompleted == null)) {
                this.GenerateHandheldUserStructFile_ExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateHandheldUserStructFile_ExOperationCompleted);
            }
            this.InvokeAsync("GenerateHandheldUserStructFile_Ex", new object[] {
                        iUserStructAsString,
                        iDestFileName,
                        iEncryptionType,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg}, this.GenerateHandheldUserStructFile_ExOperationCompleted, userState);
        }
        
        private void OnGenerateHandheldUserStructFile_ExOperationCompleted(object arg) {
            if ((this.GenerateHandheldUserStructFile_ExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateHandheldUserStructFile_ExCompleted(this, new GenerateHandheldUserStructFile_ExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUserSessions", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserSessions(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetUserSessions", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSessionsAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg) {
            this.GetUserSessionsAsync(UserName, iDateFrom, iDateTo, SearchType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetUserSessionsAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetUserSessionsOperationCompleted == null)) {
                this.GetUserSessionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSessionsOperationCompleted);
            }
            this.InvokeAsync("GetUserSessions", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg}, this.GetUserSessionsOperationCompleted, userState);
        }
        
        private void OnGetUserSessionsOperationCompleted(object arg) {
            if ((this.GetUserSessionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSessionsCompleted(this, new GetUserSessionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetOpenLocks", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOpenLocks(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetOpenLocks", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenLocksAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg) {
            this.GetOpenLocksAsync(UserName, iDateFrom, iDateTo, SearchType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetOpenLocksAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetOpenLocksOperationCompleted == null)) {
                this.GetOpenLocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenLocksOperationCompleted);
            }
            this.InvokeAsync("GetOpenLocks", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg}, this.GetOpenLocksOperationCompleted, userState);
        }
        
        private void OnGetOpenLocksOperationCompleted(object arg) {
            if ((this.GetOpenLocksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenLocksCompleted(this, new GetOpenLocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSessionUserNames" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSessionUserNames(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSessionUserNames", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionUserNamesAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetSessionUserNamesAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSessionUserNamesAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSessionUserNamesOperationCompleted == null)) {
                this.GetSessionUserNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionUserNamesOperationCompleted);
            }
            this.InvokeAsync("GetSessionUserNames", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetSessionUserNamesOperationCompleted, userState);
        }
        
        private void OnGetSessionUserNamesOperationCompleted(object arg) {
            if ((this.GetSessionUserNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionUserNamesCompleted(this, new GetSessionUserNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetEventLogData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEventLogData(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetEventLogData", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventLogDataAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg) {
            this.GetEventLogDataAsync(UserName, iDateFrom, iDateTo, SearchType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetEventLogDataAsync(string UserName, System.DateTime iDateFrom, System.DateTime iDateTo, SessionLockSearchType SearchType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetEventLogDataOperationCompleted == null)) {
                this.GetEventLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventLogDataOperationCompleted);
            }
            this.InvokeAsync("GetEventLogData", new object[] {
                        UserName,
                        iDateFrom,
                        iDateTo,
                        SearchType,
                        pAuthenticateKey,
                        oErrMsg}, this.GetEventLogDataOperationCompleted, userState);
        }
        
        private void OnGetEventLogDataOperationCompleted(object arg) {
            if ((this.GetEventLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventLogDataCompleted(this, new GetEventLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BackupSecurityTable" +
            "s", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupSecurityTables(string DestinationPath, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BackupSecurityTables", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackupSecurityTablesAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg) {
            this.BackupSecurityTablesAsync(DestinationPath, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BackupSecurityTablesAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BackupSecurityTablesOperationCompleted == null)) {
                this.BackupSecurityTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupSecurityTablesOperationCompleted);
            }
            this.InvokeAsync("BackupSecurityTables", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg}, this.BackupSecurityTablesOperationCompleted, userState);
        }
        
        private void OnBackupSecurityTablesOperationCompleted(object arg) {
            if ((this.BackupSecurityTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupSecurityTablesCompleted(this, new BackupSecurityTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RestoreSecurityTabl" +
            "es", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestoreSecurityTables(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RestoreSecurityTables", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreSecurityTablesAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.RestoreSecurityTablesAsync(SourcePath, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RestoreSecurityTablesAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RestoreSecurityTablesOperationCompleted == null)) {
                this.RestoreSecurityTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreSecurityTablesOperationCompleted);
            }
            this.InvokeAsync("RestoreSecurityTables", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.RestoreSecurityTablesOperationCompleted, userState);
        }
        
        private void OnRestoreSecurityTablesOperationCompleted(object arg) {
            if ((this.RestoreSecurityTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreSecurityTablesCompleted(this, new RestoreSecurityTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddUserWithDefaultR" +
            "ole", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUserWithDefaultRole(string iUser_Session_KeyStr, string iUserName, string iUserPwd, string iOfficerName, string iOfficerID, DefaultRole iDefaultRole, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AddUserWithDefaultRole", new object[] {
                        iUser_Session_KeyStr,
                        iUserName,
                        iUserPwd,
                        iOfficerName,
                        iOfficerID,
                        iDefaultRole,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserWithDefaultRoleAsync(string iUser_Session_KeyStr, string iUserName, string iUserPwd, string iOfficerName, string iOfficerID, DefaultRole iDefaultRole, string pAuthenticateKey, string oErrMsg) {
            this.AddUserWithDefaultRoleAsync(iUser_Session_KeyStr, iUserName, iUserPwd, iOfficerName, iOfficerID, iDefaultRole, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AddUserWithDefaultRoleAsync(string iUser_Session_KeyStr, string iUserName, string iUserPwd, string iOfficerName, string iOfficerID, DefaultRole iDefaultRole, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AddUserWithDefaultRoleOperationCompleted == null)) {
                this.AddUserWithDefaultRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserWithDefaultRoleOperationCompleted);
            }
            this.InvokeAsync("AddUserWithDefaultRole", new object[] {
                        iUser_Session_KeyStr,
                        iUserName,
                        iUserPwd,
                        iOfficerName,
                        iOfficerID,
                        iDefaultRole,
                        pAuthenticateKey,
                        oErrMsg}, this.AddUserWithDefaultRoleOperationCompleted, userState);
        }
        
        private void OnAddUserWithDefaultRoleOperationCompleted(object arg) {
            if ((this.AddUserWithDefaultRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserWithDefaultRoleCompleted(this, new AddUserWithDefaultRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/KeyMgr_GetEncryptio" +
            "nConfigDataSet", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet KeyMgr_GetEncryptionConfigDataSet(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("KeyMgr_GetEncryptionConfigDataSet", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void KeyMgr_GetEncryptionConfigDataSetAsync(string pAuthenticateKey, string oErrMsg) {
            this.KeyMgr_GetEncryptionConfigDataSetAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void KeyMgr_GetEncryptionConfigDataSetAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.KeyMgr_GetEncryptionConfigDataSetOperationCompleted == null)) {
                this.KeyMgr_GetEncryptionConfigDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyMgr_GetEncryptionConfigDataSetOperationCompleted);
            }
            this.InvokeAsync("KeyMgr_GetEncryptionConfigDataSet", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.KeyMgr_GetEncryptionConfigDataSetOperationCompleted, userState);
        }
        
        private void OnKeyMgr_GetEncryptionConfigDataSetOperationCompleted(object arg) {
            if ((this.KeyMgr_GetEncryptionConfigDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyMgr_GetEncryptionConfigDataSetCompleted(this, new KeyMgr_GetEncryptionConfigDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/KeyMgr_AddNewEncryp" +
            "tionKey", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void KeyMgr_AddNewEncryptionKey(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("KeyMgr_AddNewEncryptionKey", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void KeyMgr_AddNewEncryptionKeyAsync(string pAuthenticateKey, string oErrMsg) {
            this.KeyMgr_AddNewEncryptionKeyAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void KeyMgr_AddNewEncryptionKeyAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.KeyMgr_AddNewEncryptionKeyOperationCompleted == null)) {
                this.KeyMgr_AddNewEncryptionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyMgr_AddNewEncryptionKeyOperationCompleted);
            }
            this.InvokeAsync("KeyMgr_AddNewEncryptionKey", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.KeyMgr_AddNewEncryptionKeyOperationCompleted, userState);
        }
        
        private void OnKeyMgr_AddNewEncryptionKeyOperationCompleted(object arg) {
            if ((this.KeyMgr_AddNewEncryptionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyMgr_AddNewEncryptionKeyCompleted(this, new KeyMgr_AddNewEncryptionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/KeyMgr_EnsureCompli" +
            "anceWithCurrentKey", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void KeyMgr_EnsureComplianceWithCurrentKey(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("KeyMgr_EnsureComplianceWithCurrentKey", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void KeyMgr_EnsureComplianceWithCurrentKeyAsync(string pAuthenticateKey, string oErrMsg) {
            this.KeyMgr_EnsureComplianceWithCurrentKeyAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void KeyMgr_EnsureComplianceWithCurrentKeyAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.KeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted == null)) {
                this.KeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted);
            }
            this.InvokeAsync("KeyMgr_EnsureComplianceWithCurrentKey", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.KeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted, userState);
        }
        
        private void OnKeyMgr_EnsureComplianceWithCurrentKeyOperationCompleted(object arg) {
            if ((this.KeyMgr_EnsureComplianceWithCurrentKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyMgr_EnsureComplianceWithCurrentKeyCompleted(this, new KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/KeyMgr_GetVerbosePr" +
            "ogressText", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string KeyMgr_GetVerboseProgressText(bool ReturnSummaryDataSetAsString, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("KeyMgr_GetVerboseProgressText", new object[] {
                        ReturnSummaryDataSetAsString,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void KeyMgr_GetVerboseProgressTextAsync(bool ReturnSummaryDataSetAsString, string pAuthenticateKey, string errorMessage) {
            this.KeyMgr_GetVerboseProgressTextAsync(ReturnSummaryDataSetAsString, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void KeyMgr_GetVerboseProgressTextAsync(bool ReturnSummaryDataSetAsString, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.KeyMgr_GetVerboseProgressTextOperationCompleted == null)) {
                this.KeyMgr_GetVerboseProgressTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyMgr_GetVerboseProgressTextOperationCompleted);
            }
            this.InvokeAsync("KeyMgr_GetVerboseProgressText", new object[] {
                        ReturnSummaryDataSetAsString,
                        pAuthenticateKey,
                        errorMessage}, this.KeyMgr_GetVerboseProgressTextOperationCompleted, userState);
        }
        
        private void OnKeyMgr_GetVerboseProgressTextOperationCompleted(object arg) {
            if ((this.KeyMgr_GetVerboseProgressTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyMgr_GetVerboseProgressTextCompleted(this, new KeyMgr_GetVerboseProgressTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSerializedClient" +
            "Def", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSerializedClientDef(string pAuthenticateKey) {
            object[] results = this.Invoke("GetSerializedClientDef", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerializedClientDefAsync(string pAuthenticateKey) {
            this.GetSerializedClientDefAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetSerializedClientDefAsync(string pAuthenticateKey, object userState) {
            if ((this.GetSerializedClientDefOperationCompleted == null)) {
                this.GetSerializedClientDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerializedClientDefOperationCompleted);
            }
            this.InvokeAsync("GetSerializedClientDef", new object[] {
                        pAuthenticateKey}, this.GetSerializedClientDefOperationCompleted, userState);
        }
        
        private void OnGetSerializedClientDefOperationCompleted(object arg) {
            if ((this.GetSerializedClientDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerializedClientDefCompleted(this, new GetSerializedClientDefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetClientDefFileInf" +
            "o", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClientDefFileInfo(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetClientDefFileInfo", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientDefFileInfoAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetClientDefFileInfoAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetClientDefFileInfoAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetClientDefFileInfoOperationCompleted == null)) {
                this.GetClientDefFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientDefFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetClientDefFileInfo", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetClientDefFileInfoOperationCompleted, userState);
        }
        
        private void OnGetClientDefFileInfoOperationCompleted(object arg) {
            if ((this.GetClientDefFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientDefFileInfoCompleted(this, new GetClientDefFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetClientDefFileDat" +
            "a", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetClientDefFileData(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetClientDefFileData", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientDefFileDataAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetClientDefFileDataAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetClientDefFileDataAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetClientDefFileDataOperationCompleted == null)) {
                this.GetClientDefFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientDefFileDataOperationCompleted);
            }
            this.InvokeAsync("GetClientDefFileData", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetClientDefFileDataOperationCompleted, userState);
        }
        
        private void OnGetClientDefFileDataOperationCompleted(object arg) {
            if ((this.GetClientDefFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientDefFileDataCompleted(this, new GetClientDefFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ValidateAllocationR" +
            "ange", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateAllocationRange(string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, string iSequenceName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ValidateAllocationRange", new object[] {
                        iAllocLo,
                        iAllocHi,
                        iPrefix,
                        iSuffix,
                        iSequenceName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAllocationRangeAsync(string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, string iSequenceName, string pAuthenticateKey, string oErrMsg) {
            this.ValidateAllocationRangeAsync(iAllocLo, iAllocHi, iPrefix, iSuffix, iSequenceName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ValidateAllocationRangeAsync(string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, string iSequenceName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ValidateAllocationRangeOperationCompleted == null)) {
                this.ValidateAllocationRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAllocationRangeOperationCompleted);
            }
            this.InvokeAsync("ValidateAllocationRange", new object[] {
                        iAllocLo,
                        iAllocHi,
                        iPrefix,
                        iSuffix,
                        iSequenceName,
                        pAuthenticateKey,
                        oErrMsg}, this.ValidateAllocationRangeOperationCompleted, userState);
        }
        
        private void OnValidateAllocationRangeOperationCompleted(object arg) {
            if ((this.ValidateAllocationRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAllocationRangeCompleted(this, new ValidateAllocationRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/WriteAllocToTable", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WriteAllocToTable(string iSeqName, string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, long iSubConfigurationKey, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("WriteAllocToTable", new object[] {
                        iSeqName,
                        iAllocLo,
                        iAllocHi,
                        iPrefix,
                        iSuffix,
                        iSubConfigurationKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WriteAllocToTableAsync(string iSeqName, string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, long iSubConfigurationKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.WriteAllocToTableAsync(iSeqName, iAllocLo, iAllocHi, iPrefix, iSuffix, iSubConfigurationKey, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void WriteAllocToTableAsync(string iSeqName, string iAllocLo, string iAllocHi, string iPrefix, string iSuffix, long iSubConfigurationKey, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.WriteAllocToTableOperationCompleted == null)) {
                this.WriteAllocToTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteAllocToTableOperationCompleted);
            }
            this.InvokeAsync("WriteAllocToTable", new object[] {
                        iSeqName,
                        iAllocLo,
                        iAllocHi,
                        iPrefix,
                        iSuffix,
                        iSubConfigurationKey,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.WriteAllocToTableOperationCompleted, userState);
        }
        
        private void OnWriteAllocToTableOperationCompleted(object arg) {
            if ((this.WriteAllocToTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteAllocToTableCompleted(this, new WriteAllocToTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportAllocation", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportAllocation(string iSeqName, string iUser_Session_KeyStr, bool iBookChecking, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ImportAllocation", new object[] {
                        iSeqName,
                        iUser_Session_KeyStr,
                        iBookChecking,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportAllocationAsync(string iSeqName, string iUser_Session_KeyStr, bool iBookChecking, string pAuthenticateKey, string oErrMsg) {
            this.ImportAllocationAsync(iSeqName, iUser_Session_KeyStr, iBookChecking, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ImportAllocationAsync(string iSeqName, string iUser_Session_KeyStr, bool iBookChecking, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ImportAllocationOperationCompleted == null)) {
                this.ImportAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportAllocationOperationCompleted);
            }
            this.InvokeAsync("ImportAllocation", new object[] {
                        iSeqName,
                        iUser_Session_KeyStr,
                        iBookChecking,
                        pAuthenticateKey,
                        oErrMsg}, this.ImportAllocationOperationCompleted, userState);
        }
        
        private void OnImportAllocationOperationCompleted(object arg) {
            if ((this.ImportAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportAllocationCompleted(this, new ImportAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSerialNoInfo", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSerialNoInfo(string iSerialNo, ref System.Data.DataSet iDataSet, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSerialNoInfo", new object[] {
                        iSerialNo,
                        iDataSet,
                        pAuthenticateKey,
                        oErrMsg});
            iDataSet = ((System.Data.DataSet)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSerialNoInfoAsync(string iSerialNo, System.Data.DataSet iDataSet, string pAuthenticateKey, string oErrMsg) {
            this.GetSerialNoInfoAsync(iSerialNo, iDataSet, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSerialNoInfoAsync(string iSerialNo, System.Data.DataSet iDataSet, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSerialNoInfoOperationCompleted == null)) {
                this.GetSerialNoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSerialNoInfoOperationCompleted);
            }
            this.InvokeAsync("GetSerialNoInfo", new object[] {
                        iSerialNo,
                        iDataSet,
                        pAuthenticateKey,
                        oErrMsg}, this.GetSerialNoInfoOperationCompleted, userState);
        }
        
        private void OnGetSerialNoInfoOperationCompleted(object arg) {
            if ((this.GetSerialNoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSerialNoInfoCompleted(this, new GetSerialNoInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommSerialNoInfo" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommSerialNoInfo(string iSerialNo, bool iAddUnit, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetCommSerialNoInfo", new object[] {
                        iSerialNo,
                        iAddUnit,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommSerialNoInfoAsync(string iSerialNo, bool iAddUnit, string pAuthenticateKey, string oErrMsg) {
            this.GetCommSerialNoInfoAsync(iSerialNo, iAddUnit, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetCommSerialNoInfoAsync(string iSerialNo, bool iAddUnit, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetCommSerialNoInfoOperationCompleted == null)) {
                this.GetCommSerialNoInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommSerialNoInfoOperationCompleted);
            }
            this.InvokeAsync("GetCommSerialNoInfo", new object[] {
                        iSerialNo,
                        iAddUnit,
                        pAuthenticateKey,
                        oErrMsg}, this.GetCommSerialNoInfoOperationCompleted, userState);
        }
        
        private void OnGetCommSerialNoInfoOperationCompleted(object arg) {
            if ((this.GetCommSerialNoInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommSerialNoInfoCompleted(this, new GetCommSerialNoInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/InsertUpdateUnitInt" +
            "oTable", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertUpdateUnitIntoTable(TUnitSerialNoRec iUnitRec, bool iUpdate, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("InsertUpdateUnitIntoTable", new object[] {
                        iUnitRec,
                        iUpdate,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUpdateUnitIntoTableAsync(TUnitSerialNoRec iUnitRec, bool iUpdate, string pAuthenticateKey, string oErrMsg) {
            this.InsertUpdateUnitIntoTableAsync(iUnitRec, iUpdate, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void InsertUpdateUnitIntoTableAsync(TUnitSerialNoRec iUnitRec, bool iUpdate, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.InsertUpdateUnitIntoTableOperationCompleted == null)) {
                this.InsertUpdateUnitIntoTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUpdateUnitIntoTableOperationCompleted);
            }
            this.InvokeAsync("InsertUpdateUnitIntoTable", new object[] {
                        iUnitRec,
                        iUpdate,
                        pAuthenticateKey,
                        oErrMsg}, this.InsertUpdateUnitIntoTableOperationCompleted, userState);
        }
        
        private void OnInsertUpdateUnitIntoTableOperationCompleted(object arg) {
            if ((this.InsertUpdateUnitIntoTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUpdateUnitIntoTableCompleted(this, new InsertUpdateUnitIntoTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSequenceNamesFor" +
            "CustomerCfg", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSequenceNamesForCustomerCfg(string iCustomerCfgName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSequenceNamesForCustomerCfg", new object[] {
                        iCustomerCfgName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSequenceNamesForCustomerCfgAsync(string iCustomerCfgName, string pAuthenticateKey, string oErrMsg) {
            this.GetSequenceNamesForCustomerCfgAsync(iCustomerCfgName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSequenceNamesForCustomerCfgAsync(string iCustomerCfgName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSequenceNamesForCustomerCfgOperationCompleted == null)) {
                this.GetSequenceNamesForCustomerCfgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSequenceNamesForCustomerCfgOperationCompleted);
            }
            this.InvokeAsync("GetSequenceNamesForCustomerCfg", new object[] {
                        iCustomerCfgName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetSequenceNamesForCustomerCfgOperationCompleted, userState);
        }
        
        private void OnGetSequenceNamesForCustomerCfgOperationCompleted(object arg) {
            if ((this.GetSequenceNamesForCustomerCfgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSequenceNamesForCustomerCfgCompleted(this, new GetSequenceNamesForCustomerCfgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetNewUnitBooks", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetNewUnitBooks(string iSerialNo, string iSequenceName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetNewUnitBooks", new object[] {
                        iSerialNo,
                        iSequenceName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewUnitBooksAsync(string iSerialNo, string iSequenceName, string pAuthenticateKey, string oErrMsg) {
            this.GetNewUnitBooksAsync(iSerialNo, iSequenceName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetNewUnitBooksAsync(string iSerialNo, string iSequenceName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetNewUnitBooksOperationCompleted == null)) {
                this.GetNewUnitBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewUnitBooksOperationCompleted);
            }
            this.InvokeAsync("GetNewUnitBooks", new object[] {
                        iSerialNo,
                        iSequenceName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetNewUnitBooksOperationCompleted, userState);
        }
        
        private void OnGetNewUnitBooksOperationCompleted(object arg) {
            if ((this.GetNewUnitBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewUnitBooksCompleted(this, new GetNewUnitBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SendCurrentUnitBook" +
            "s", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCurrentUnitBooks(string iSerialNo, string iSequenceName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] SequenceFile, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SendCurrentUnitBooks", new object[] {
                        iSerialNo,
                        iSequenceName,
                        SequenceFile,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendCurrentUnitBooksAsync(string iSerialNo, string iSequenceName, byte[] SequenceFile, string pAuthenticateKey, string oErrMsg) {
            this.SendCurrentUnitBooksAsync(iSerialNo, iSequenceName, SequenceFile, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SendCurrentUnitBooksAsync(string iSerialNo, string iSequenceName, byte[] SequenceFile, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SendCurrentUnitBooksOperationCompleted == null)) {
                this.SendCurrentUnitBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCurrentUnitBooksOperationCompleted);
            }
            this.InvokeAsync("SendCurrentUnitBooks", new object[] {
                        iSerialNo,
                        iSequenceName,
                        SequenceFile,
                        pAuthenticateKey,
                        oErrMsg}, this.SendCurrentUnitBooksOperationCompleted, userState);
        }
        
        private void OnSendCurrentUnitBooksOperationCompleted(object arg) {
            if ((this.SendCurrentUnitBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCurrentUnitBooksCompleted(this, new SendCurrentUnitBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RecordUnloadedUnitB" +
            "ooksInDatabase", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RecordUnloadedUnitBooksInDatabase(string iSerialNo, string iSequenceName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] SequenceFile, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RecordUnloadedUnitBooksInDatabase", new object[] {
                        iSerialNo,
                        iSequenceName,
                        SequenceFile,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecordUnloadedUnitBooksInDatabaseAsync(string iSerialNo, string iSequenceName, byte[] SequenceFile, string pAuthenticateKey, string oErrMsg) {
            this.RecordUnloadedUnitBooksInDatabaseAsync(iSerialNo, iSequenceName, SequenceFile, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RecordUnloadedUnitBooksInDatabaseAsync(string iSerialNo, string iSequenceName, byte[] SequenceFile, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RecordUnloadedUnitBooksInDatabaseOperationCompleted == null)) {
                this.RecordUnloadedUnitBooksInDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecordUnloadedUnitBooksInDatabaseOperationCompleted);
            }
            this.InvokeAsync("RecordUnloadedUnitBooksInDatabase", new object[] {
                        iSerialNo,
                        iSequenceName,
                        SequenceFile,
                        pAuthenticateKey,
                        oErrMsg}, this.RecordUnloadedUnitBooksInDatabaseOperationCompleted, userState);
        }
        
        private void OnRecordUnloadedUnitBooksInDatabaseOperationCompleted(object arg) {
            if ((this.RecordUnloadedUnitBooksInDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecordUnloadedUnitBooksInDatabaseCompleted(this, new RecordUnloadedUnitBooksInDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllSerialNos", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSerialNos(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllSerialNos", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSerialNosAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetAllSerialNosAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllSerialNosAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllSerialNosOperationCompleted == null)) {
                this.GetAllSerialNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSerialNosOperationCompleted);
            }
            this.InvokeAsync("GetAllSerialNos", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllSerialNosOperationCompleted, userState);
        }
        
        private void OnGetAllSerialNosOperationCompleted(object arg) {
            if ((this.GetAllSerialNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSerialNosCompleted(this, new GetAllSerialNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllAssignedBooks" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAssignedBooks(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllAssignedBooks", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAssignedBooksAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetAllAssignedBooksAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllAssignedBooksAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllAssignedBooksOperationCompleted == null)) {
                this.GetAllAssignedBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAssignedBooksOperationCompleted);
            }
            this.InvokeAsync("GetAllAssignedBooks", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllAssignedBooksOperationCompleted, userState);
        }
        
        private void OnGetAllAssignedBooksOperationCompleted(object arg) {
            if ((this.GetAllAssignedBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAssignedBooksCompleted(this, new GetAllAssignedBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AllocationLeft", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AllocationLeft(string iSequenceName, ref long BooksLeft, ref bool MinBookWarning, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AllocationLeft", new object[] {
                        iSequenceName,
                        BooksLeft,
                        MinBookWarning,
                        pAuthenticateKey,
                        oErrMsg});
            BooksLeft = ((long)(results[1]));
            MinBookWarning = ((bool)(results[2]));
            oErrMsg = ((string)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AllocationLeftAsync(string iSequenceName, long BooksLeft, bool MinBookWarning, string pAuthenticateKey, string oErrMsg) {
            this.AllocationLeftAsync(iSequenceName, BooksLeft, MinBookWarning, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AllocationLeftAsync(string iSequenceName, long BooksLeft, bool MinBookWarning, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AllocationLeftOperationCompleted == null)) {
                this.AllocationLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocationLeftOperationCompleted);
            }
            this.InvokeAsync("AllocationLeft", new object[] {
                        iSequenceName,
                        BooksLeft,
                        MinBookWarning,
                        pAuthenticateKey,
                        oErrMsg}, this.AllocationLeftOperationCompleted, userState);
        }
        
        private void OnAllocationLeftOperationCompleted(object arg) {
            if ((this.AllocationLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocationLeftCompleted(this, new AllocationLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AllocationBooksLeft" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AllocationBooksLeft(string iSequenceName, ref bool MinBookWarning, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AllocationBooksLeft", new object[] {
                        iSequenceName,
                        MinBookWarning,
                        pAuthenticateKey,
                        oErrMsg});
            MinBookWarning = ((bool)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AllocationBooksLeftAsync(string iSequenceName, bool MinBookWarning, string pAuthenticateKey, string oErrMsg) {
            this.AllocationBooksLeftAsync(iSequenceName, MinBookWarning, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AllocationBooksLeftAsync(string iSequenceName, bool MinBookWarning, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AllocationBooksLeftOperationCompleted == null)) {
                this.AllocationBooksLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocationBooksLeftOperationCompleted);
            }
            this.InvokeAsync("AllocationBooksLeft", new object[] {
                        iSequenceName,
                        MinBookWarning,
                        pAuthenticateKey,
                        oErrMsg}, this.AllocationBooksLeftOperationCompleted, userState);
        }
        
        private void OnAllocationBooksLeftOperationCompleted(object arg) {
            if ((this.AllocationBooksLeftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocationBooksLeftCompleted(this, new AllocationBooksLeftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitCfgInDevice", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitCfgInDevice(string iSerialNo, string iCfgInDevice, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitCfgInDevice", new object[] {
                        iSerialNo,
                        iCfgInDevice,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitCfgInDeviceAsync(string iSerialNo, string iCfgInDevice, string pAuthenticateKey, string oErrMsg) {
            this.SetUnitCfgInDeviceAsync(iSerialNo, iCfgInDevice, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitCfgInDeviceAsync(string iSerialNo, string iCfgInDevice, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetUnitCfgInDeviceOperationCompleted == null)) {
                this.SetUnitCfgInDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitCfgInDeviceOperationCompleted);
            }
            this.InvokeAsync("SetUnitCfgInDevice", new object[] {
                        iSerialNo,
                        iCfgInDevice,
                        pAuthenticateKey,
                        oErrMsg}, this.SetUnitCfgInDeviceOperationCompleted, userState);
        }
        
        private void OnSetUnitCfgInDeviceOperationCompleted(object arg) {
            if ((this.SetUnitCfgInDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitCfgInDeviceCompleted(this, new SetUnitCfgInDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommLogData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCommLogData(string iUnitSerialNo, string iObject, string iVerb, System.DateTime iDateFrom, System.DateTime iDateTo, bool PartialMatch, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetCommLogData", new object[] {
                        iUnitSerialNo,
                        iObject,
                        iVerb,
                        iDateFrom,
                        iDateTo,
                        PartialMatch,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommLogDataAsync(string iUnitSerialNo, string iObject, string iVerb, System.DateTime iDateFrom, System.DateTime iDateTo, bool PartialMatch, string pAuthenticateKey, string oErrMsg) {
            this.GetCommLogDataAsync(iUnitSerialNo, iObject, iVerb, iDateFrom, iDateTo, PartialMatch, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetCommLogDataAsync(string iUnitSerialNo, string iObject, string iVerb, System.DateTime iDateFrom, System.DateTime iDateTo, bool PartialMatch, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetCommLogDataOperationCompleted == null)) {
                this.GetCommLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommLogDataOperationCompleted);
            }
            this.InvokeAsync("GetCommLogData", new object[] {
                        iUnitSerialNo,
                        iObject,
                        iVerb,
                        iDateFrom,
                        iDateTo,
                        PartialMatch,
                        pAuthenticateKey,
                        oErrMsg}, this.GetCommLogDataOperationCompleted, userState);
        }
        
        private void OnGetCommLogDataOperationCompleted(object arg) {
            if ((this.GetCommLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommLogDataCompleted(this, new GetCommLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PutAcwRangeFileInTa" +
            "ble", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutAcwRangeFileInTable(string iUser_Session_KeyStr, string iSeqName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("PutAcwRangeFileInTable", new object[] {
                        iUser_Session_KeyStr,
                        iSeqName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutAcwRangeFileInTableAsync(string iUser_Session_KeyStr, string iSeqName, string pAuthenticateKey, string oErrMsg) {
            this.PutAcwRangeFileInTableAsync(iUser_Session_KeyStr, iSeqName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void PutAcwRangeFileInTableAsync(string iUser_Session_KeyStr, string iSeqName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.PutAcwRangeFileInTableOperationCompleted == null)) {
                this.PutAcwRangeFileInTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutAcwRangeFileInTableOperationCompleted);
            }
            this.InvokeAsync("PutAcwRangeFileInTable", new object[] {
                        iUser_Session_KeyStr,
                        iSeqName,
                        pAuthenticateKey,
                        oErrMsg}, this.PutAcwRangeFileInTableOperationCompleted, userState);
        }
        
        private void OnPutAcwRangeFileInTableOperationCompleted(object arg) {
            if ((this.PutAcwRangeFileInTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutAcwRangeFileInTableCompleted(this, new PutAcwRangeFileInTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitStatus", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitStatus(string iSerialNo, string iStatus, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitStatus", new object[] {
                        iSerialNo,
                        iStatus,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitStatusAsync(string iSerialNo, string iStatus, string pAuthenticateKey, string oErrMsg) {
            this.SetUnitStatusAsync(iSerialNo, iStatus, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitStatusAsync(string iSerialNo, string iStatus, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetUnitStatusOperationCompleted == null)) {
                this.SetUnitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitStatusOperationCompleted);
            }
            this.InvokeAsync("SetUnitStatus", new object[] {
                        iSerialNo,
                        iStatus,
                        pAuthenticateKey,
                        oErrMsg}, this.SetUnitStatusOperationCompleted, userState);
        }
        
        private void OnSetUnitStatusOperationCompleted(object arg) {
            if ((this.SetUnitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitStatusCompleted(this, new SetUnitStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitStatusAtomic" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitStatusAtomic(string iSerialNo, string iStatus, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitStatusAtomic", new object[] {
                        iSerialNo,
                        iStatus,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitStatusAtomicAsync(string iSerialNo, string iStatus, string pAuthenticateKey, string oErrMsg) {
            this.SetUnitStatusAtomicAsync(iSerialNo, iStatus, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitStatusAtomicAsync(string iSerialNo, string iStatus, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetUnitStatusAtomicOperationCompleted == null)) {
                this.SetUnitStatusAtomicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitStatusAtomicOperationCompleted);
            }
            this.InvokeAsync("SetUnitStatusAtomic", new object[] {
                        iSerialNo,
                        iStatus,
                        pAuthenticateKey,
                        oErrMsg}, this.SetUnitStatusAtomicOperationCompleted, userState);
        }
        
        private void OnSetUnitStatusAtomicOperationCompleted(object arg) {
            if ((this.SetUnitStatusAtomicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitStatusAtomicCompleted(this, new SetUnitStatusAtomicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitLastCommDate" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitLastCommDate(string iSerialNo, System.DateTime iLastCommDate, string pAuthenticateKey, string iComputerName, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitLastCommDate", new object[] {
                        iSerialNo,
                        iLastCommDate,
                        pAuthenticateKey,
                        iComputerName,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitLastCommDateAsync(string iSerialNo, System.DateTime iLastCommDate, string pAuthenticateKey, string iComputerName, string oErrMsg) {
            this.SetUnitLastCommDateAsync(iSerialNo, iLastCommDate, pAuthenticateKey, iComputerName, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitLastCommDateAsync(string iSerialNo, System.DateTime iLastCommDate, string pAuthenticateKey, string iComputerName, string oErrMsg, object userState) {
            if ((this.SetUnitLastCommDateOperationCompleted == null)) {
                this.SetUnitLastCommDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitLastCommDateOperationCompleted);
            }
            this.InvokeAsync("SetUnitLastCommDate", new object[] {
                        iSerialNo,
                        iLastCommDate,
                        pAuthenticateKey,
                        iComputerName,
                        oErrMsg}, this.SetUnitLastCommDateOperationCompleted, userState);
        }
        
        private void OnSetUnitLastCommDateOperationCompleted(object arg) {
            if ((this.SetUnitLastCommDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitLastCommDateCompleted(this, new SetUnitLastCommDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteFreezeOrThawU" +
            "nit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFreezeOrThawUnit(string iSerialNo, CiteRangeActionType WhichAction, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteFreezeOrThawUnit", new object[] {
                        iSerialNo,
                        WhichAction,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFreezeOrThawUnitAsync(string iSerialNo, CiteRangeActionType WhichAction, string pAuthenticateKey, string oErrMsg) {
            this.DeleteFreezeOrThawUnitAsync(iSerialNo, WhichAction, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteFreezeOrThawUnitAsync(string iSerialNo, CiteRangeActionType WhichAction, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteFreezeOrThawUnitOperationCompleted == null)) {
                this.DeleteFreezeOrThawUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFreezeOrThawUnitOperationCompleted);
            }
            this.InvokeAsync("DeleteFreezeOrThawUnit", new object[] {
                        iSerialNo,
                        WhichAction,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteFreezeOrThawUnitOperationCompleted, userState);
        }
        
        private void OnDeleteFreezeOrThawUnitOperationCompleted(object arg) {
            if ((this.DeleteFreezeOrThawUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFreezeOrThawUnitCompleted(this, new DeleteFreezeOrThawUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUnassignedSerial" +
            "NoList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUnassignedSerialNoList(HardwareType iHWType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetUnassignedSerialNoList", new object[] {
                        iHWType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnassignedSerialNoListAsync(HardwareType iHWType, string pAuthenticateKey, string oErrMsg) {
            this.GetUnassignedSerialNoListAsync(iHWType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetUnassignedSerialNoListAsync(HardwareType iHWType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetUnassignedSerialNoListOperationCompleted == null)) {
                this.GetUnassignedSerialNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnassignedSerialNoListOperationCompleted);
            }
            this.InvokeAsync("GetUnassignedSerialNoList", new object[] {
                        iHWType,
                        pAuthenticateKey,
                        oErrMsg}, this.GetUnassignedSerialNoListOperationCompleted, userState);
        }
        
        private void OnGetUnassignedSerialNoListOperationCompleted(object arg) {
            if ((this.GetUnassignedSerialNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnassignedSerialNoListCompleted(this, new GetUnassignedSerialNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllUnitBooks", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllUnitBooks(string UnitSerialNo, bool IncludeClosedBooks, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllUnitBooks", new object[] {
                        UnitSerialNo,
                        IncludeClosedBooks,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnitBooksAsync(string UnitSerialNo, bool IncludeClosedBooks, string pAuthenticateKey, string oErrMsg) {
            this.GetAllUnitBooksAsync(UnitSerialNo, IncludeClosedBooks, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllUnitBooksAsync(string UnitSerialNo, bool IncludeClosedBooks, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllUnitBooksOperationCompleted == null)) {
                this.GetAllUnitBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnitBooksOperationCompleted);
            }
            this.InvokeAsync("GetAllUnitBooks", new object[] {
                        UnitSerialNo,
                        IncludeClosedBooks,
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllUnitBooksOperationCompleted, userState);
        }
        
        private void OnGetAllUnitBooksOperationCompleted(object arg) {
            if ((this.GetAllUnitBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnitBooksCompleted(this, new GetAllUnitBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateBookLastIssue" +
            "d", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateBookLastIssued(string iSeqName, string iBookNum, long iLastIssued, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("UpdateBookLastIssued", new object[] {
                        iSeqName,
                        iBookNum,
                        iLastIssued,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBookLastIssuedAsync(string iSeqName, string iBookNum, long iLastIssued, string pAuthenticateKey, string oErrMsg) {
            this.UpdateBookLastIssuedAsync(iSeqName, iBookNum, iLastIssued, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateBookLastIssuedAsync(string iSeqName, string iBookNum, long iLastIssued, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.UpdateBookLastIssuedOperationCompleted == null)) {
                this.UpdateBookLastIssuedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBookLastIssuedOperationCompleted);
            }
            this.InvokeAsync("UpdateBookLastIssued", new object[] {
                        iSeqName,
                        iBookNum,
                        iLastIssued,
                        pAuthenticateKey,
                        oErrMsg}, this.UpdateBookLastIssuedOperationCompleted, userState);
        }
        
        private void OnUpdateBookLastIssuedOperationCompleted(object arg) {
            if ((this.UpdateBookLastIssuedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBookLastIssuedCompleted(this, new UpdateBookLastIssuedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitSubCfgInDevi" +
            "ce", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitSubCfgInDevice(string iSerialNo, long iSubCfgInDeviceKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitSubCfgInDevice", new object[] {
                        iSerialNo,
                        iSubCfgInDeviceKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitSubCfgInDeviceAsync(string iSerialNo, long iSubCfgInDeviceKey, string pAuthenticateKey, string oErrMsg) {
            this.SetUnitSubCfgInDeviceAsync(iSerialNo, iSubCfgInDeviceKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitSubCfgInDeviceAsync(string iSerialNo, long iSubCfgInDeviceKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetUnitSubCfgInDeviceOperationCompleted == null)) {
                this.SetUnitSubCfgInDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitSubCfgInDeviceOperationCompleted);
            }
            this.InvokeAsync("SetUnitSubCfgInDevice", new object[] {
                        iSerialNo,
                        iSubCfgInDeviceKey,
                        pAuthenticateKey,
                        oErrMsg}, this.SetUnitSubCfgInDeviceOperationCompleted, userState);
        }
        
        private void OnSetUnitSubCfgInDeviceOperationCompleted(object arg) {
            if ((this.SetUnitSubCfgInDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitSubCfgInDeviceCompleted(this, new SetUnitSubCfgInDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetUnitMeterTraxCfg" +
            "InDevice", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUnitMeterTraxCfgInDevice(string iSerialNo, string iMeterTraxCfgInDevice, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetUnitMeterTraxCfgInDevice", new object[] {
                        iSerialNo,
                        iMeterTraxCfgInDevice,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUnitMeterTraxCfgInDeviceAsync(string iSerialNo, string iMeterTraxCfgInDevice, string pAuthenticateKey, string oErrMsg) {
            this.SetUnitMeterTraxCfgInDeviceAsync(iSerialNo, iMeterTraxCfgInDevice, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetUnitMeterTraxCfgInDeviceAsync(string iSerialNo, string iMeterTraxCfgInDevice, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetUnitMeterTraxCfgInDeviceOperationCompleted == null)) {
                this.SetUnitMeterTraxCfgInDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUnitMeterTraxCfgInDeviceOperationCompleted);
            }
            this.InvokeAsync("SetUnitMeterTraxCfgInDevice", new object[] {
                        iSerialNo,
                        iMeterTraxCfgInDevice,
                        pAuthenticateKey,
                        oErrMsg}, this.SetUnitMeterTraxCfgInDeviceOperationCompleted, userState);
        }
        
        private void OnSetUnitMeterTraxCfgInDeviceOperationCompleted(object arg) {
            if ((this.SetUnitMeterTraxCfgInDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUnitMeterTraxCfgInDeviceCompleted(this, new SetUnitMeterTraxCfgInDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUnitsAssignedToS" +
            "ubConfig", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnitsAssignedToSubConfig(long SubConfigKey, string pAuthenticateKey, ref string ErrorMsg) {
            object[] results = this.Invoke("GetUnitsAssignedToSubConfig", new object[] {
                        SubConfigKey,
                        pAuthenticateKey,
                        ErrorMsg});
            ErrorMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitsAssignedToSubConfigAsync(long SubConfigKey, string pAuthenticateKey, string ErrorMsg) {
            this.GetUnitsAssignedToSubConfigAsync(SubConfigKey, pAuthenticateKey, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void GetUnitsAssignedToSubConfigAsync(long SubConfigKey, string pAuthenticateKey, string ErrorMsg, object userState) {
            if ((this.GetUnitsAssignedToSubConfigOperationCompleted == null)) {
                this.GetUnitsAssignedToSubConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitsAssignedToSubConfigOperationCompleted);
            }
            this.InvokeAsync("GetUnitsAssignedToSubConfig", new object[] {
                        SubConfigKey,
                        pAuthenticateKey,
                        ErrorMsg}, this.GetUnitsAssignedToSubConfigOperationCompleted, userState);
        }
        
        private void OnGetUnitsAssignedToSubConfigOperationCompleted(object arg) {
            if ((this.GetUnitsAssignedToSubConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitsAssignedToSubConfigCompleted(this, new GetUnitsAssignedToSubConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/MarkAllocAndSequenc" +
            "eAsDeleted", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MarkAllocAndSequenceAsDeleted(long SubConfigKey, string pAuthenticateKey, ref string ErrorMsg) {
            object[] results = this.Invoke("MarkAllocAndSequenceAsDeleted", new object[] {
                        SubConfigKey,
                        pAuthenticateKey,
                        ErrorMsg});
            ErrorMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MarkAllocAndSequenceAsDeletedAsync(long SubConfigKey, string pAuthenticateKey, string ErrorMsg) {
            this.MarkAllocAndSequenceAsDeletedAsync(SubConfigKey, pAuthenticateKey, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void MarkAllocAndSequenceAsDeletedAsync(long SubConfigKey, string pAuthenticateKey, string ErrorMsg, object userState) {
            if ((this.MarkAllocAndSequenceAsDeletedOperationCompleted == null)) {
                this.MarkAllocAndSequenceAsDeletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkAllocAndSequenceAsDeletedOperationCompleted);
            }
            this.InvokeAsync("MarkAllocAndSequenceAsDeleted", new object[] {
                        SubConfigKey,
                        pAuthenticateKey,
                        ErrorMsg}, this.MarkAllocAndSequenceAsDeletedOperationCompleted, userState);
        }
        
        private void OnMarkAllocAndSequenceAsDeletedOperationCompleted(object arg) {
            if ((this.MarkAllocAndSequenceAsDeletedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkAllocAndSequenceAsDeletedCompleted(this, new MarkAllocAndSequenceAsDeletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AssignNewSubConfigT" +
            "oUnits", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AssignNewSubConfigToUnits(long CurrentSubConfig, long NewSubConfig, string pAuthenticateKey, ref string ErrorMsg) {
            object[] results = this.Invoke("AssignNewSubConfigToUnits", new object[] {
                        CurrentSubConfig,
                        NewSubConfig,
                        pAuthenticateKey,
                        ErrorMsg});
            ErrorMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AssignNewSubConfigToUnitsAsync(long CurrentSubConfig, long NewSubConfig, string pAuthenticateKey, string ErrorMsg) {
            this.AssignNewSubConfigToUnitsAsync(CurrentSubConfig, NewSubConfig, pAuthenticateKey, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void AssignNewSubConfigToUnitsAsync(long CurrentSubConfig, long NewSubConfig, string pAuthenticateKey, string ErrorMsg, object userState) {
            if ((this.AssignNewSubConfigToUnitsOperationCompleted == null)) {
                this.AssignNewSubConfigToUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignNewSubConfigToUnitsOperationCompleted);
            }
            this.InvokeAsync("AssignNewSubConfigToUnits", new object[] {
                        CurrentSubConfig,
                        NewSubConfig,
                        pAuthenticateKey,
                        ErrorMsg}, this.AssignNewSubConfigToUnitsOperationCompleted, userState);
        }
        
        private void OnAssignNewSubConfigToUnitsOperationCompleted(object arg) {
            if ((this.AssignNewSubConfigToUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignNewSubConfigToUnitsCompleted(this, new AssignNewSubConfigToUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteAllocationsAn" +
            "dSequences", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAllocationsAndSequences(string SequenceName, string pAuthenticateKey, ref string ErrorMsg) {
            object[] results = this.Invoke("DeleteAllocationsAndSequences", new object[] {
                        SequenceName,
                        pAuthenticateKey,
                        ErrorMsg});
            ErrorMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllocationsAndSequencesAsync(string SequenceName, string pAuthenticateKey, string ErrorMsg) {
            this.DeleteAllocationsAndSequencesAsync(SequenceName, pAuthenticateKey, ErrorMsg, null);
        }
        
        /// <remarks/>
        public void DeleteAllocationsAndSequencesAsync(string SequenceName, string pAuthenticateKey, string ErrorMsg, object userState) {
            if ((this.DeleteAllocationsAndSequencesOperationCompleted == null)) {
                this.DeleteAllocationsAndSequencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllocationsAndSequencesOperationCompleted);
            }
            this.InvokeAsync("DeleteAllocationsAndSequences", new object[] {
                        SequenceName,
                        pAuthenticateKey,
                        ErrorMsg}, this.DeleteAllocationsAndSequencesOperationCompleted, userState);
        }
        
        private void OnDeleteAllocationsAndSequencesOperationCompleted(object arg) {
            if ((this.DeleteAllocationsAndSequencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllocationsAndSequencesCompleted(this, new DeleteAllocationsAndSequencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/InsertCommLogIntoTa" +
            "ble", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertCommLogIntoTable(string iUnitSerialNo, string iObject, string iVerb, long iCount, string pAuthenticateKey, string iComputerName, ref string oErrMsg) {
            object[] results = this.Invoke("InsertCommLogIntoTable", new object[] {
                        iUnitSerialNo,
                        iObject,
                        iVerb,
                        iCount,
                        pAuthenticateKey,
                        iComputerName,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCommLogIntoTableAsync(string iUnitSerialNo, string iObject, string iVerb, long iCount, string pAuthenticateKey, string iComputerName, string oErrMsg) {
            this.InsertCommLogIntoTableAsync(iUnitSerialNo, iObject, iVerb, iCount, pAuthenticateKey, iComputerName, oErrMsg, null);
        }
        
        /// <remarks/>
        public void InsertCommLogIntoTableAsync(string iUnitSerialNo, string iObject, string iVerb, long iCount, string pAuthenticateKey, string iComputerName, string oErrMsg, object userState) {
            if ((this.InsertCommLogIntoTableOperationCompleted == null)) {
                this.InsertCommLogIntoTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCommLogIntoTableOperationCompleted);
            }
            this.InvokeAsync("InsertCommLogIntoTable", new object[] {
                        iUnitSerialNo,
                        iObject,
                        iVerb,
                        iCount,
                        pAuthenticateKey,
                        iComputerName,
                        oErrMsg}, this.InsertCommLogIntoTableOperationCompleted, userState);
        }
        
        private void OnInsertCommLogIntoTableOperationCompleted(object arg) {
            if ((this.InsertCommLogIntoTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCommLogIntoTableCompleted(this, new InsertCommLogIntoTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetMeterTraxFileByt" +
            "es", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetMeterTraxFileBytes(string iFileName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetMeterTraxFileBytes", new object[] {
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterTraxFileBytesAsync(string iFileName, string pAuthenticateKey, string oErrMsg) {
            this.GetMeterTraxFileBytesAsync(iFileName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetMeterTraxFileBytesAsync(string iFileName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetMeterTraxFileBytesOperationCompleted == null)) {
                this.GetMeterTraxFileBytesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterTraxFileBytesOperationCompleted);
            }
            this.InvokeAsync("GetMeterTraxFileBytes", new object[] {
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetMeterTraxFileBytesOperationCompleted, userState);
        }
        
        private void OnGetMeterTraxFileBytesOperationCompleted(object arg) {
            if ((this.GetMeterTraxFileBytesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterTraxFileBytesCompleted(this, new GetMeterTraxFileBytesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetDefinitionList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDefinitionList(bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetDefinitionList", new object[] {
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefinitionListAsync(bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.GetDefinitionListAsync(iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetDefinitionListAsync(bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetDefinitionListOperationCompleted == null)) {
                this.GetDefinitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefinitionListOperationCompleted);
            }
            this.InvokeAsync("GetDefinitionList", new object[] {
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.GetDefinitionListOperationCompleted, userState);
        }
        
        private void OnGetDefinitionListOperationCompleted(object arg) {
            if ((this.GetDefinitionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefinitionListCompleted(this, new GetDefinitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveImportExportDef" +
            "inition", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveImportExportDefinition(string iDefinitionObject, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveImportExportDefinition", new object[] {
                        iDefinitionObject,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImportExportDefinitionAsync(string iDefinitionObject, string pAuthenticateKey, string oErrMsg) {
            this.SaveImportExportDefinitionAsync(iDefinitionObject, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveImportExportDefinitionAsync(string iDefinitionObject, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveImportExportDefinitionOperationCompleted == null)) {
                this.SaveImportExportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImportExportDefinitionOperationCompleted);
            }
            this.InvokeAsync("SaveImportExportDefinition", new object[] {
                        iDefinitionObject,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveImportExportDefinitionOperationCompleted, userState);
        }
        
        private void OnSaveImportExportDefinitionOperationCompleted(object arg) {
            if ((this.SaveImportExportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImportExportDefinitionCompleted(this, new SaveImportExportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveImportExpor" +
            "tDefinition", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveImportExportDefinition(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveImportExportDefinition", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveImportExportDefinitionAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.RetrieveImportExportDefinitionAsync(iStructName, iDefinitionNumber, iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveImportExportDefinitionAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveImportExportDefinitionOperationCompleted == null)) {
                this.RetrieveImportExportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveImportExportDefinitionOperationCompleted);
            }
            this.InvokeAsync("RetrieveImportExportDefinition", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveImportExportDefinitionOperationCompleted, userState);
        }
        
        private void OnRetrieveImportExportDefinitionOperationCompleted(object arg) {
            if ((this.RetrieveImportExportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveImportExportDefinitionCompleted(this, new RetrieveImportExportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginDefinitionEdit" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginDefinitionEdit(string iStructName, int iDefinitionNumber, bool iIsExport, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BeginDefinitionEdit", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginDefinitionEditAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.BeginDefinitionEditAsync(iStructName, iDefinitionNumber, iIsExport, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginDefinitionEditAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BeginDefinitionEditOperationCompleted == null)) {
                this.BeginDefinitionEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginDefinitionEditOperationCompleted);
            }
            this.InvokeAsync("BeginDefinitionEdit", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.BeginDefinitionEditOperationCompleted, userState);
        }
        
        private void OnBeginDefinitionEditOperationCompleted(object arg) {
            if ((this.BeginDefinitionEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginDefinitionEditCompleted(this, new BeginDefinitionEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndDefinitionEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndDefinitionEdit(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EndDefinitionEdit", new object[] {
                        iSerializedDefinition,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndDefinitionEditAsync(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.EndDefinitionEditAsync(iSerializedDefinition, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndDefinitionEditAsync(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EndDefinitionEditOperationCompleted == null)) {
                this.EndDefinitionEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndDefinitionEditOperationCompleted);
            }
            this.InvokeAsync("EndDefinitionEdit", new object[] {
                        iSerializedDefinition,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.EndDefinitionEditOperationCompleted, userState);
        }
        
        private void OnEndDefinitionEditOperationCompleted(object arg) {
            if ((this.EndDefinitionEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndDefinitionEditCompleted(this, new EndDefinitionEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelDefinitionEdi" +
            "t", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelDefinitionEdit(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelDefinitionEdit", new object[] {
                        iSerializedDefinition,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDefinitionEditAsync(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.CancelDefinitionEditAsync(iSerializedDefinition, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelDefinitionEditAsync(string iSerializedDefinition, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelDefinitionEditOperationCompleted == null)) {
                this.CancelDefinitionEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDefinitionEditOperationCompleted);
            }
            this.InvokeAsync("CancelDefinitionEdit", new object[] {
                        iSerializedDefinition,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelDefinitionEditOperationCompleted, userState);
        }
        
        private void OnCancelDefinitionEditOperationCompleted(object arg) {
            if ((this.CancelDefinitionEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDefinitionEditCompleted(this, new CancelDefinitionEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteImportExportD" +
            "efinition", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImportExportDefinition(string iStructName, int iDefinitionNumber, string iDefinitionName, bool iIsExport, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteImportExportDefinition", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iDefinitionName,
                        iIsExport,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImportExportDefinitionAsync(string iStructName, int iDefinitionNumber, string iDefinitionName, bool iIsExport, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.DeleteImportExportDefinitionAsync(iStructName, iDefinitionNumber, iDefinitionName, iIsExport, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteImportExportDefinitionAsync(string iStructName, int iDefinitionNumber, string iDefinitionName, bool iIsExport, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteImportExportDefinitionOperationCompleted == null)) {
                this.DeleteImportExportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImportExportDefinitionOperationCompleted);
            }
            this.InvokeAsync("DeleteImportExportDefinition", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iDefinitionName,
                        iIsExport,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteImportExportDefinitionOperationCompleted, userState);
        }
        
        private void OnDeleteImportExportDefinitionOperationCompleted(object arg) {
            if ((this.DeleteImportExportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImportExportDefinitionCompleted(this, new DeleteImportExportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveImportExportDel" +
            "imiters", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveImportExportDelimiters(string iDelimiterObject, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveImportExportDelimiters", new object[] {
                        iDelimiterObject,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImportExportDelimitersAsync(string iDelimiterObject, string pAuthenticateKey, string oErrMsg) {
            this.SaveImportExportDelimitersAsync(iDelimiterObject, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveImportExportDelimitersAsync(string iDelimiterObject, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveImportExportDelimitersOperationCompleted == null)) {
                this.SaveImportExportDelimitersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImportExportDelimitersOperationCompleted);
            }
            this.InvokeAsync("SaveImportExportDelimiters", new object[] {
                        iDelimiterObject,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveImportExportDelimitersOperationCompleted, userState);
        }
        
        private void OnSaveImportExportDelimitersOperationCompleted(object arg) {
            if ((this.SaveImportExportDelimitersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImportExportDelimitersCompleted(this, new SaveImportExportDelimitersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveImportExpor" +
            "tDelimiters", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveImportExportDelimiters(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveImportExportDelimiters", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveImportExportDelimitersAsync(string pAuthenticateKey, string oErrMsg) {
            this.RetrieveImportExportDelimitersAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveImportExportDelimitersAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveImportExportDelimitersOperationCompleted == null)) {
                this.RetrieveImportExportDelimitersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveImportExportDelimitersOperationCompleted);
            }
            this.InvokeAsync("RetrieveImportExportDelimiters", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveImportExportDelimitersOperationCompleted, userState);
        }
        
        private void OnRetrieveImportExportDelimitersOperationCompleted(object arg) {
            if ((this.RetrieveImportExportDelimitersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveImportExportDelimitersCompleted(this, new RetrieveImportExportDelimitersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveImportExpor" +
            "tDefinitionHistory", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveImportExportDefinitionHistory(bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveImportExportDefinitionHistory", new object[] {
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveImportExportDefinitionHistoryAsync(bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.RetrieveImportExportDefinitionHistoryAsync(iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveImportExportDefinitionHistoryAsync(bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveImportExportDefinitionHistoryOperationCompleted == null)) {
                this.RetrieveImportExportDefinitionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveImportExportDefinitionHistoryOperationCompleted);
            }
            this.InvokeAsync("RetrieveImportExportDefinitionHistory", new object[] {
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveImportExportDefinitionHistoryOperationCompleted, userState);
        }
        
        private void OnRetrieveImportExportDefinitionHistoryOperationCompleted(object arg) {
            if ((this.RetrieveImportExportDefinitionHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveImportExportDefinitionHistoryCompleted(this, new RetrieveImportExportDefinitionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveImportExpor" +
            "tExecuteHistory", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveImportExportExecuteHistory(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveImportExportExecuteHistory", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveImportExportExecuteHistoryAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.RetrieveImportExportExecuteHistoryAsync(iStructName, iDefinitionNumber, iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveImportExportExecuteHistoryAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveImportExportExecuteHistoryOperationCompleted == null)) {
                this.RetrieveImportExportExecuteHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveImportExportExecuteHistoryOperationCompleted);
            }
            this.InvokeAsync("RetrieveImportExportExecuteHistory", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveImportExportExecuteHistoryOperationCompleted, userState);
        }
        
        private void OnRetrieveImportExportExecuteHistoryOperationCompleted(object arg) {
            if ((this.RetrieveImportExportExecuteHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveImportExportExecuteHistoryCompleted(this, new RetrieveImportExportExecuteHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveImportExpor" +
            "tSummary", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveImportExportSummary(string iStructName, int iDefinitionNumber, bool iIsExport, int iHistoryKey, System.DateTime iDate, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveImportExportSummary", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iHistoryKey,
                        iDate,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveImportExportSummaryAsync(string iStructName, int iDefinitionNumber, bool iIsExport, int iHistoryKey, System.DateTime iDate, string pAuthenticateKey, string oErrMsg) {
            this.RetrieveImportExportSummaryAsync(iStructName, iDefinitionNumber, iIsExport, iHistoryKey, iDate, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveImportExportSummaryAsync(string iStructName, int iDefinitionNumber, bool iIsExport, int iHistoryKey, System.DateTime iDate, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveImportExportSummaryOperationCompleted == null)) {
                this.RetrieveImportExportSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveImportExportSummaryOperationCompleted);
            }
            this.InvokeAsync("RetrieveImportExportSummary", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iHistoryKey,
                        iDate,
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveImportExportSummaryOperationCompleted, userState);
        }
        
        private void OnRetrieveImportExportSummaryOperationCompleted(object arg) {
            if ((this.RetrieveImportExportSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveImportExportSummaryCompleted(this, new RetrieveImportExportSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CreateWarningsTrack" +
            "ingExports", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateWarningsTrackingExports(string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, ref string oErrMsg) {
            object[] results = this.Invoke("CreateWarningsTrackingExports", new object[] {
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWarningsTrackingExportsAsync(string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, string oErrMsg) {
            this.CreateWarningsTrackingExportsAsync(iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, pExecutionStart, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CreateWarningsTrackingExportsAsync(string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, string oErrMsg, object userState) {
            if ((this.CreateWarningsTrackingExportsOperationCompleted == null)) {
                this.CreateWarningsTrackingExportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWarningsTrackingExportsOperationCompleted);
            }
            this.InvokeAsync("CreateWarningsTrackingExports", new object[] {
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oErrMsg}, this.CreateWarningsTrackingExportsOperationCompleted, userState);
        }
        
        private void OnCreateWarningsTrackingExportsOperationCompleted(object arg) {
            if ((this.CreateWarningsTrackingExportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWarningsTrackingExportsCompleted(this, new CreateWarningsTrackingExportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteImportExport" +
            "Definition", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteImportExportDefinition(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, ref bool oCompleted, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteImportExportDefinition", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg});
            oCompleted = ((bool)(results[0]));
            oErrMsg = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void ExecuteImportExportDefinitionAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg) {
            this.ExecuteImportExportDefinitionAsync(iSerializedDefinition, iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, pExecutionStart, oCompleted, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteImportExportDefinitionAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg, object userState) {
            if ((this.ExecuteImportExportDefinitionOperationCompleted == null)) {
                this.ExecuteImportExportDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteImportExportDefinitionOperationCompleted);
            }
            this.InvokeAsync("ExecuteImportExportDefinition", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg}, this.ExecuteImportExportDefinitionOperationCompleted, userState);
        }
        
        private void OnExecuteImportExportDefinitionOperationCompleted(object arg) {
            if ((this.ExecuteImportExportDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteImportExportDefinitionCompleted(this, new ExecuteImportExportDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteImpExpDef_Re" +
            "turnSummary", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteImpExpDef_ReturnSummary(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, ref bool oCompleted, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteImpExpDef_ReturnSummary", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg});
            oCompleted = ((bool)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteImpExpDef_ReturnSummaryAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg) {
            this.ExecuteImpExpDef_ReturnSummaryAsync(iSerializedDefinition, iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, pExecutionStart, oCompleted, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteImpExpDef_ReturnSummaryAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg, object userState) {
            if ((this.ExecuteImpExpDef_ReturnSummaryOperationCompleted == null)) {
                this.ExecuteImpExpDef_ReturnSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteImpExpDef_ReturnSummaryOperationCompleted);
            }
            this.InvokeAsync("ExecuteImpExpDef_ReturnSummary", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg}, this.ExecuteImpExpDef_ReturnSummaryOperationCompleted, userState);
        }
        
        private void OnExecuteImpExpDef_ReturnSummaryOperationCompleted(object arg) {
            if ((this.ExecuteImpExpDef_ReturnSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteImpExpDef_ReturnSummaryCompleted(this, new ExecuteImpExpDef_ReturnSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PrepareForDefinitio" +
            "nRun", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PrepareForDefinitionRun(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, ref long iDefinitionFileSize, ref System.DateTime iDefinitionFileDate, ref bool oTargetFileExists, ref string oErrMsg) {
            object[] results = this.Invoke("PrepareForDefinitionRun", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        iDefinitionFileSize,
                        iDefinitionFileDate,
                        oTargetFileExists,
                        oErrMsg});
            iDefinitionFileSize = ((long)(results[1]));
            iDefinitionFileDate = ((System.DateTime)(results[2]));
            oTargetFileExists = ((bool)(results[3]));
            oErrMsg = ((string)(results[4]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForDefinitionRunAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, long iDefinitionFileSize, System.DateTime iDefinitionFileDate, bool oTargetFileExists, string oErrMsg) {
            this.PrepareForDefinitionRunAsync(iStructName, iDefinitionNumber, iIsExport, iUser_Session_KeyStr, pAuthenticateKey, iDefinitionFileSize, iDefinitionFileDate, oTargetFileExists, oErrMsg, null);
        }
        
        /// <remarks/>
        public void PrepareForDefinitionRunAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, long iDefinitionFileSize, System.DateTime iDefinitionFileDate, bool oTargetFileExists, string oErrMsg, object userState) {
            if ((this.PrepareForDefinitionRunOperationCompleted == null)) {
                this.PrepareForDefinitionRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForDefinitionRunOperationCompleted);
            }
            this.InvokeAsync("PrepareForDefinitionRun", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        iDefinitionFileSize,
                        iDefinitionFileDate,
                        oTargetFileExists,
                        oErrMsg}, this.PrepareForDefinitionRunOperationCompleted, userState);
        }
        
        private void OnPrepareForDefinitionRunOperationCompleted(object arg) {
            if ((this.PrepareForDefinitionRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForDefinitionRunCompleted(this, new PrepareForDefinitionRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelDefinitionRun" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelDefinitionRun(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelDefinitionRun", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelDefinitionRunAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.CancelDefinitionRunAsync(iStructName, iDefinitionNumber, iIsExport, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelDefinitionRunAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelDefinitionRunOperationCompleted == null)) {
                this.CancelDefinitionRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDefinitionRunOperationCompleted);
            }
            this.InvokeAsync("CancelDefinitionRun", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelDefinitionRunOperationCompleted, userState);
        }
        
        private void OnCancelDefinitionRunOperationCompleted(object arg) {
            if ((this.CancelDefinitionRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDefinitionRunCompleted(this, new CancelDefinitionRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteExportToByte" +
            "Array", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExecuteExportToByteArray(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteExportToByteArray", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteExportToByteArrayAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.ExecuteExportToByteArrayAsync(iSerializedDefinition, iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteExportToByteArrayAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ExecuteExportToByteArrayOperationCompleted == null)) {
                this.ExecuteExportToByteArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteExportToByteArrayOperationCompleted);
            }
            this.InvokeAsync("ExecuteExportToByteArray", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.ExecuteExportToByteArrayOperationCompleted, userState);
        }
        
        private void OnExecuteExportToByteArrayOperationCompleted(object arg) {
            if ((this.ExecuteExportToByteArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteExportToByteArrayCompleted(this, new ExecuteExportToByteArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetImportExportFile" +
            "Info", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImportExportFileInfo(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetImportExportFileInfo", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportExportFileInfoAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.GetImportExportFileInfoAsync(iStructName, iDefinitionNumber, iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetImportExportFileInfoAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetImportExportFileInfoOperationCompleted == null)) {
                this.GetImportExportFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportExportFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetImportExportFileInfo", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.GetImportExportFileInfoOperationCompleted, userState);
        }
        
        private void OnGetImportExportFileInfoOperationCompleted(object arg) {
            if ((this.GetImportExportFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportExportFileInfoCompleted(this, new GetImportExportFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetImportExportFile" +
            "Data", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetImportExportFileData(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetImportExportFileData", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImportExportFileDataAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg) {
            this.GetImportExportFileDataAsync(iStructName, iDefinitionNumber, iIsExport, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetImportExportFileDataAsync(string iStructName, int iDefinitionNumber, bool iIsExport, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetImportExportFileDataOperationCompleted == null)) {
                this.GetImportExportFileDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportExportFileDataOperationCompleted);
            }
            this.InvokeAsync("GetImportExportFileData", new object[] {
                        iStructName,
                        iDefinitionNumber,
                        iIsExport,
                        pAuthenticateKey,
                        oErrMsg}, this.GetImportExportFileDataOperationCompleted, userState);
        }
        
        private void OnGetImportExportFileDataOperationCompleted(object arg) {
            if ((this.GetImportExportFileDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportExportFileDataCompleted(this, new GetImportExportFileDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteFTPSession", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteFTPSession(string iSerializedFTPSession, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteFTPSession", new object[] {
                        iSerializedFTPSession,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteFTPSessionAsync(string iSerializedFTPSession, string pAuthenticateKey, string oErrMsg) {
            this.ExecuteFTPSessionAsync(iSerializedFTPSession, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteFTPSessionAsync(string iSerializedFTPSession, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ExecuteFTPSessionOperationCompleted == null)) {
                this.ExecuteFTPSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteFTPSessionOperationCompleted);
            }
            this.InvokeAsync("ExecuteFTPSession", new object[] {
                        iSerializedFTPSession,
                        pAuthenticateKey,
                        oErrMsg}, this.ExecuteFTPSessionOperationCompleted, userState);
        }
        
        private void OnExecuteFTPSessionOperationCompleted(object arg) {
            if ((this.ExecuteFTPSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteFTPSessionCompleted(this, new ExecuteFTPSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteExternalExe", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteExternalExe(string iExeName, string iExeParams, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteExternalExe", new object[] {
                        iExeName,
                        iExeParams,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteExternalExeAsync(string iExeName, string iExeParams, string pAuthenticateKey, string oErrMsg) {
            this.ExecuteExternalExeAsync(iExeName, iExeParams, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteExternalExeAsync(string iExeName, string iExeParams, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ExecuteExternalExeOperationCompleted == null)) {
                this.ExecuteExternalExeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteExternalExeOperationCompleted);
            }
            this.InvokeAsync("ExecuteExternalExe", new object[] {
                        iExeName,
                        iExeParams,
                        pAuthenticateKey,
                        oErrMsg}, this.ExecuteExternalExeOperationCompleted, userState);
        }
        
        private void OnExecuteExternalExeOperationCompleted(object arg) {
            if ((this.ExecuteExternalExeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteExternalExeCompleted(this, new ExecuteExternalExeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateGeoCodeInform" +
            "ationForTable", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateGeoCodeInformationForTable(System.Data.DataSet iDataSet, string iTableName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("UpdateGeoCodeInformationForTable", new object[] {
                        iDataSet,
                        iTableName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGeoCodeInformationForTableAsync(System.Data.DataSet iDataSet, string iTableName, string pAuthenticateKey, string oErrMsg) {
            this.UpdateGeoCodeInformationForTableAsync(iDataSet, iTableName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateGeoCodeInformationForTableAsync(System.Data.DataSet iDataSet, string iTableName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.UpdateGeoCodeInformationForTableOperationCompleted == null)) {
                this.UpdateGeoCodeInformationForTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGeoCodeInformationForTableOperationCompleted);
            }
            this.InvokeAsync("UpdateGeoCodeInformationForTable", new object[] {
                        iDataSet,
                        iTableName,
                        pAuthenticateKey,
                        oErrMsg}, this.UpdateGeoCodeInformationForTableOperationCompleted, userState);
        }
        
        private void OnUpdateGeoCodeInformationForTableOperationCompleted(object arg) {
            if ((this.UpdateGeoCodeInformationForTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGeoCodeInformationForTableCompleted(this, new UpdateGeoCodeInformationForTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RetrieveCourtObject" +
            "sAString", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveCourtObjectsAString(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RetrieveCourtObjectsAString", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveCourtObjectsAStringAsync(string pAuthenticateKey, string oErrMsg) {
            this.RetrieveCourtObjectsAStringAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RetrieveCourtObjectsAStringAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RetrieveCourtObjectsAStringOperationCompleted == null)) {
                this.RetrieveCourtObjectsAStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveCourtObjectsAStringOperationCompleted);
            }
            this.InvokeAsync("RetrieveCourtObjectsAString", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.RetrieveCourtObjectsAStringOperationCompleted, userState);
        }
        
        private void OnRetrieveCourtObjectsAStringOperationCompleted(object arg) {
            if ((this.RetrieveCourtObjectsAStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveCourtObjectsAStringCompleted(this, new RetrieveCourtObjectsAStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveCourtObjectsFro" +
            "mString", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveCourtObjectsFromString(string iCourtObject, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveCourtObjectsFromString", new object[] {
                        iCourtObject,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCourtObjectsFromStringAsync(string iCourtObject, string pAuthenticateKey, string oErrMsg) {
            this.SaveCourtObjectsFromStringAsync(iCourtObject, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveCourtObjectsFromStringAsync(string iCourtObject, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveCourtObjectsFromStringOperationCompleted == null)) {
                this.SaveCourtObjectsFromStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCourtObjectsFromStringOperationCompleted);
            }
            this.InvokeAsync("SaveCourtObjectsFromString", new object[] {
                        iCourtObject,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveCourtObjectsFromStringOperationCompleted, userState);
        }
        
        private void OnSaveCourtObjectsFromStringOperationCompleted(object arg) {
            if ((this.SaveCourtObjectsFromStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCourtObjectsFromStringCompleted(this, new SaveCourtObjectsFromStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/WriteOutCourtDateLi" +
            "st", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WriteOutCourtDateList(string iCurrentUserSessionKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("WriteOutCourtDateList", new object[] {
                        iCurrentUserSessionKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WriteOutCourtDateListAsync(string iCurrentUserSessionKey, string pAuthenticateKey, string oErrMsg) {
            this.WriteOutCourtDateListAsync(iCurrentUserSessionKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void WriteOutCourtDateListAsync(string iCurrentUserSessionKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.WriteOutCourtDateListOperationCompleted == null)) {
                this.WriteOutCourtDateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteOutCourtDateListOperationCompleted);
            }
            this.InvokeAsync("WriteOutCourtDateList", new object[] {
                        iCurrentUserSessionKey,
                        pAuthenticateKey,
                        oErrMsg}, this.WriteOutCourtDateListOperationCompleted, userState);
        }
        
        private void OnWriteOutCourtDateListOperationCompleted(object arg) {
            if ((this.WriteOutCourtDateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteOutCourtDateListCompleted(this, new WriteOutCourtDateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ReadInNSWXMLFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReadInNSWXMLFiles(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey) {
            this.Invoke("ReadInNSWXMLFiles", new object[] {
                        pOverride,
                        pAuthenticateKey,
                        iCurrentUserSessionKey});
        }
        
        /// <remarks/>
        public void ReadInNSWXMLFilesAsync(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey) {
            this.ReadInNSWXMLFilesAsync(pOverride, pAuthenticateKey, iCurrentUserSessionKey, null);
        }
        
        /// <remarks/>
        public void ReadInNSWXMLFilesAsync(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey, object userState) {
            if ((this.ReadInNSWXMLFilesOperationCompleted == null)) {
                this.ReadInNSWXMLFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadInNSWXMLFilesOperationCompleted);
            }
            this.InvokeAsync("ReadInNSWXMLFiles", new object[] {
                        pOverride,
                        pAuthenticateKey,
                        iCurrentUserSessionKey}, this.ReadInNSWXMLFilesOperationCompleted, userState);
        }
        
        private void OnReadInNSWXMLFilesOperationCompleted(object arg) {
            if ((this.ReadInNSWXMLFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadInNSWXMLFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/IsNSWClient", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsNSWClient(string pAuthenticateKey) {
            object[] results = this.Invoke("IsNSWClient", new object[] {
                        pAuthenticateKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsNSWClientAsync(string pAuthenticateKey) {
            this.IsNSWClientAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void IsNSWClientAsync(string pAuthenticateKey, object userState) {
            if ((this.IsNSWClientOperationCompleted == null)) {
                this.IsNSWClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsNSWClientOperationCompleted);
            }
            this.InvokeAsync("IsNSWClient", new object[] {
                        pAuthenticateKey}, this.IsNSWClientOperationCompleted, userState);
        }
        
        private void OnIsNSWClientOperationCompleted(object arg) {
            if ((this.IsNSWClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsNSWClientCompleted(this, new IsNSWClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/TransferNSWFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferNSWFiles(string pAuthenticateKey, string iCurrentUserSessionKey, ref string oErrMsg) {
            object[] results = this.Invoke("TransferNSWFiles", new object[] {
                        pAuthenticateKey,
                        iCurrentUserSessionKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferNSWFilesAsync(string pAuthenticateKey, string iCurrentUserSessionKey, string oErrMsg) {
            this.TransferNSWFilesAsync(pAuthenticateKey, iCurrentUserSessionKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void TransferNSWFilesAsync(string pAuthenticateKey, string iCurrentUserSessionKey, string oErrMsg, object userState) {
            if ((this.TransferNSWFilesOperationCompleted == null)) {
                this.TransferNSWFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferNSWFilesOperationCompleted);
            }
            this.InvokeAsync("TransferNSWFiles", new object[] {
                        pAuthenticateKey,
                        iCurrentUserSessionKey,
                        oErrMsg}, this.TransferNSWFilesOperationCompleted, userState);
        }
        
        private void OnTransferNSWFilesOperationCompleted(object arg) {
            if ((this.TransferNSWFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferNSWFilesCompleted(this, new TransferNSWFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetNSWFileTransferV" +
            "erboseOutput", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNSWFileTransferVerboseOutput(string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetNSWFileTransferVerboseOutput", new object[] {
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNSWFileTransferVerboseOutputAsync(string pAuthenticateKey, string errorMessage) {
            this.GetNSWFileTransferVerboseOutputAsync(pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetNSWFileTransferVerboseOutputAsync(string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetNSWFileTransferVerboseOutputOperationCompleted == null)) {
                this.GetNSWFileTransferVerboseOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNSWFileTransferVerboseOutputOperationCompleted);
            }
            this.InvokeAsync("GetNSWFileTransferVerboseOutput", new object[] {
                        pAuthenticateKey,
                        errorMessage}, this.GetNSWFileTransferVerboseOutputOperationCompleted, userState);
        }
        
        private void OnGetNSWFileTransferVerboseOutputOperationCompleted(object arg) {
            if ((this.GetNSWFileTransferVerboseOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNSWFileTransferVerboseOutputCompleted(this, new GetNSWFileTransferVerboseOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetTaskGroupList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskGroupList(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetTaskGroupList", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskGroupListAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetTaskGroupListAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetTaskGroupListAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetTaskGroupListOperationCompleted == null)) {
                this.GetTaskGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskGroupListOperationCompleted);
            }
            this.InvokeAsync("GetTaskGroupList", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetTaskGroupListOperationCompleted, userState);
        }
        
        private void OnGetTaskGroupListOperationCompleted(object arg) {
            if ((this.GetTaskGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskGroupListCompleted(this, new GetTaskGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveTaskGroup", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveTaskGroup(string iTaskGroup, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveTaskGroup", new object[] {
                        iTaskGroup,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTaskGroupAsync(string iTaskGroup, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.SaveTaskGroupAsync(iTaskGroup, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveTaskGroupAsync(string iTaskGroup, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveTaskGroupOperationCompleted == null)) {
                this.SaveTaskGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTaskGroupOperationCompleted);
            }
            this.InvokeAsync("SaveTaskGroup", new object[] {
                        iTaskGroup,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveTaskGroupOperationCompleted, userState);
        }
        
        private void OnSaveTaskGroupOperationCompleted(object arg) {
            if ((this.SaveTaskGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTaskGroupCompleted(this, new SaveTaskGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetTaskGroup", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskGroup(int iTaskGroupKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetTaskGroup", new object[] {
                        iTaskGroupKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskGroupAsync(int iTaskGroupKey, string pAuthenticateKey, string oErrMsg) {
            this.GetTaskGroupAsync(iTaskGroupKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetTaskGroupAsync(int iTaskGroupKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetTaskGroupOperationCompleted == null)) {
                this.GetTaskGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskGroupOperationCompleted);
            }
            this.InvokeAsync("GetTaskGroup", new object[] {
                        iTaskGroupKey,
                        pAuthenticateKey,
                        oErrMsg}, this.GetTaskGroupOperationCompleted, userState);
        }
        
        private void OnGetTaskGroupOperationCompleted(object arg) {
            if ((this.GetTaskGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskGroupCompleted(this, new GetTaskGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginTaskGroupEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginTaskGroupEdit(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BeginTaskGroupEdit", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginTaskGroupEditAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.BeginTaskGroupEditAsync(iTaskGroupKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginTaskGroupEditAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BeginTaskGroupEditOperationCompleted == null)) {
                this.BeginTaskGroupEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginTaskGroupEditOperationCompleted);
            }
            this.InvokeAsync("BeginTaskGroupEdit", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.BeginTaskGroupEditOperationCompleted, userState);
        }
        
        private void OnBeginTaskGroupEditOperationCompleted(object arg) {
            if ((this.BeginTaskGroupEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginTaskGroupEditCompleted(this, new BeginTaskGroupEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndTaskGroupEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndTaskGroupEdit(string iSerializedTaskGroup, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EndTaskGroupEdit", new object[] {
                        iSerializedTaskGroup,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndTaskGroupEditAsync(string iSerializedTaskGroup, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.EndTaskGroupEditAsync(iSerializedTaskGroup, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndTaskGroupEditAsync(string iSerializedTaskGroup, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EndTaskGroupEditOperationCompleted == null)) {
                this.EndTaskGroupEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndTaskGroupEditOperationCompleted);
            }
            this.InvokeAsync("EndTaskGroupEdit", new object[] {
                        iSerializedTaskGroup,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.EndTaskGroupEditOperationCompleted, userState);
        }
        
        private void OnEndTaskGroupEditOperationCompleted(object arg) {
            if ((this.EndTaskGroupEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndTaskGroupEditCompleted(this, new EndTaskGroupEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelTaskGroupEdit" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelTaskGroupEdit(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelTaskGroupEdit", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTaskGroupEditAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.CancelTaskGroupEditAsync(iTaskGroupKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelTaskGroupEditAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelTaskGroupEditOperationCompleted == null)) {
                this.CancelTaskGroupEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTaskGroupEditOperationCompleted);
            }
            this.InvokeAsync("CancelTaskGroupEdit", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelTaskGroupEditOperationCompleted, userState);
        }
        
        private void OnCancelTaskGroupEditOperationCompleted(object arg) {
            if ((this.CancelTaskGroupEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTaskGroupEditCompleted(this, new CancelTaskGroupEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteTaskGroup", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTaskGroup(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteTaskGroup", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskGroupAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.DeleteTaskGroupAsync(iTaskGroupKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteTaskGroupAsync(int iTaskGroupKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteTaskGroupOperationCompleted == null)) {
                this.DeleteTaskGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteTaskGroup", new object[] {
                        iTaskGroupKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteTaskGroupOperationCompleted, userState);
        }
        
        private void OnDeleteTaskGroupOperationCompleted(object arg) {
            if ((this.DeleteTaskGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskGroupCompleted(this, new DeleteTaskGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetScheduleRowVersi" +
            "onList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleRowVersionList(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetScheduleRowVersionList", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleRowVersionListAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetScheduleRowVersionListAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetScheduleRowVersionListAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetScheduleRowVersionListOperationCompleted == null)) {
                this.GetScheduleRowVersionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleRowVersionListOperationCompleted);
            }
            this.InvokeAsync("GetScheduleRowVersionList", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetScheduleRowVersionListOperationCompleted, userState);
        }
        
        private void OnGetScheduleRowVersionListOperationCompleted(object arg) {
            if ((this.GetScheduleRowVersionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleRowVersionListCompleted(this, new GetScheduleRowVersionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetScheduleList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleList(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetScheduleList", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleListAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetScheduleListAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetScheduleListAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetScheduleListOperationCompleted == null)) {
                this.GetScheduleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleListOperationCompleted);
            }
            this.InvokeAsync("GetScheduleList", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetScheduleListOperationCompleted, userState);
        }
        
        private void OnGetScheduleListOperationCompleted(object arg) {
            if ((this.GetScheduleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleListCompleted(this, new GetScheduleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RefreshScheduleList" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RefreshScheduleList(int[] iKeyList, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RefreshScheduleList", new object[] {
                        iKeyList,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshScheduleListAsync(int[] iKeyList, string pAuthenticateKey, string oErrMsg) {
            this.RefreshScheduleListAsync(iKeyList, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RefreshScheduleListAsync(int[] iKeyList, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RefreshScheduleListOperationCompleted == null)) {
                this.RefreshScheduleListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshScheduleListOperationCompleted);
            }
            this.InvokeAsync("RefreshScheduleList", new object[] {
                        iKeyList,
                        pAuthenticateKey,
                        oErrMsg}, this.RefreshScheduleListOperationCompleted, userState);
        }
        
        private void OnRefreshScheduleListOperationCompleted(object arg) {
            if ((this.RefreshScheduleListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshScheduleListCompleted(this, new RefreshScheduleListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SaveSchedule", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSchedule(string iSchedule, string iLockHolder, ref int oScheduleKey, ref int oTaskKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SaveSchedule", new object[] {
                        iSchedule,
                        iLockHolder,
                        oScheduleKey,
                        oTaskKey,
                        pAuthenticateKey,
                        oErrMsg});
            oScheduleKey = ((int)(results[0]));
            oTaskKey = ((int)(results[1]));
            oErrMsg = ((string)(results[2]));
        }
        
        /// <remarks/>
        public void SaveScheduleAsync(string iSchedule, string iLockHolder, int oScheduleKey, int oTaskKey, string pAuthenticateKey, string oErrMsg) {
            this.SaveScheduleAsync(iSchedule, iLockHolder, oScheduleKey, oTaskKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SaveScheduleAsync(string iSchedule, string iLockHolder, int oScheduleKey, int oTaskKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SaveScheduleOperationCompleted == null)) {
                this.SaveScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveScheduleOperationCompleted);
            }
            this.InvokeAsync("SaveSchedule", new object[] {
                        iSchedule,
                        iLockHolder,
                        oScheduleKey,
                        oTaskKey,
                        pAuthenticateKey,
                        oErrMsg}, this.SaveScheduleOperationCompleted, userState);
        }
        
        private void OnSaveScheduleOperationCompleted(object arg) {
            if ((this.SaveScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveScheduleCompleted(this, new SaveScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSchedule", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSchedule(int iScheduleKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSchedule", new object[] {
                        iScheduleKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleAsync(int iScheduleKey, string pAuthenticateKey, string oErrMsg) {
            this.GetScheduleAsync(iScheduleKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetScheduleAsync(int iScheduleKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetScheduleOperationCompleted == null)) {
                this.GetScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleOperationCompleted);
            }
            this.InvokeAsync("GetSchedule", new object[] {
                        iScheduleKey,
                        pAuthenticateKey,
                        oErrMsg}, this.GetScheduleOperationCompleted, userState);
        }
        
        private void OnGetScheduleOperationCompleted(object arg) {
            if ((this.GetScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleCompleted(this, new GetScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetScheduleHistory", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleHistory(System.DateTime iStartDate, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetScheduleHistory", new object[] {
                        iStartDate,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleHistoryAsync(System.DateTime iStartDate, string pAuthenticateKey, string oErrMsg) {
            this.GetScheduleHistoryAsync(iStartDate, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetScheduleHistoryAsync(System.DateTime iStartDate, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetScheduleHistoryOperationCompleted == null)) {
                this.GetScheduleHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleHistoryOperationCompleted);
            }
            this.InvokeAsync("GetScheduleHistory", new object[] {
                        iStartDate,
                        pAuthenticateKey,
                        oErrMsg}, this.GetScheduleHistoryOperationCompleted, userState);
        }
        
        private void OnGetScheduleHistoryOperationCompleted(object arg) {
            if ((this.GetScheduleHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleHistoryCompleted(this, new GetScheduleHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginScheduleRun", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginScheduleRun(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string iComputerRunOn, System.DateTime pStartDateTime, ref string oErrMsg) {
            object[] results = this.Invoke("BeginScheduleRun", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        iComputerRunOn,
                        pStartDateTime,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginScheduleRunAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string iComputerRunOn, System.DateTime pStartDateTime, string oErrMsg) {
            this.BeginScheduleRunAsync(iScheduleKey, iLockHolder, pAuthenticateKey, iComputerRunOn, pStartDateTime, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginScheduleRunAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string iComputerRunOn, System.DateTime pStartDateTime, string oErrMsg, object userState) {
            if ((this.BeginScheduleRunOperationCompleted == null)) {
                this.BeginScheduleRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginScheduleRunOperationCompleted);
            }
            this.InvokeAsync("BeginScheduleRun", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        iComputerRunOn,
                        pStartDateTime,
                        oErrMsg}, this.BeginScheduleRunOperationCompleted, userState);
        }
        
        private void OnBeginScheduleRunOperationCompleted(object arg) {
            if ((this.BeginScheduleRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginScheduleRunCompleted(this, new BeginScheduleRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndScheduleRun", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndScheduleRun(string iSerializedSchedule, string iSerializedHistory, string iLockHolder, string pAuthenticateKey, bool iForceEndRun, ref string oErrMsg) {
            object[] results = this.Invoke("EndScheduleRun", new object[] {
                        iSerializedSchedule,
                        iSerializedHistory,
                        iLockHolder,
                        pAuthenticateKey,
                        iForceEndRun,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndScheduleRunAsync(string iSerializedSchedule, string iSerializedHistory, string iLockHolder, string pAuthenticateKey, bool iForceEndRun, string oErrMsg) {
            this.EndScheduleRunAsync(iSerializedSchedule, iSerializedHistory, iLockHolder, pAuthenticateKey, iForceEndRun, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndScheduleRunAsync(string iSerializedSchedule, string iSerializedHistory, string iLockHolder, string pAuthenticateKey, bool iForceEndRun, string oErrMsg, object userState) {
            if ((this.EndScheduleRunOperationCompleted == null)) {
                this.EndScheduleRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndScheduleRunOperationCompleted);
            }
            this.InvokeAsync("EndScheduleRun", new object[] {
                        iSerializedSchedule,
                        iSerializedHistory,
                        iLockHolder,
                        pAuthenticateKey,
                        iForceEndRun,
                        oErrMsg}, this.EndScheduleRunOperationCompleted, userState);
        }
        
        private void OnEndScheduleRunOperationCompleted(object arg) {
            if ((this.EndScheduleRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndScheduleRunCompleted(this, new EndScheduleRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BeginScheduleEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BeginScheduleEdit(int iScheduleKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BeginScheduleEdit", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BeginScheduleEditAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.BeginScheduleEditAsync(iScheduleKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BeginScheduleEditAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BeginScheduleEditOperationCompleted == null)) {
                this.BeginScheduleEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginScheduleEditOperationCompleted);
            }
            this.InvokeAsync("BeginScheduleEdit", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.BeginScheduleEditOperationCompleted, userState);
        }
        
        private void OnBeginScheduleEditOperationCompleted(object arg) {
            if ((this.BeginScheduleEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginScheduleEditCompleted(this, new BeginScheduleEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndScheduleEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndScheduleEdit(string iSerializedSchedule, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("EndScheduleEdit", new object[] {
                        iSerializedSchedule,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndScheduleEditAsync(string iSerializedSchedule, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.EndScheduleEditAsync(iSerializedSchedule, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void EndScheduleEditAsync(string iSerializedSchedule, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.EndScheduleEditOperationCompleted == null)) {
                this.EndScheduleEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndScheduleEditOperationCompleted);
            }
            this.InvokeAsync("EndScheduleEdit", new object[] {
                        iSerializedSchedule,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.EndScheduleEditOperationCompleted, userState);
        }
        
        private void OnEndScheduleEditOperationCompleted(object arg) {
            if ((this.EndScheduleEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndScheduleEditCompleted(this, new EndScheduleEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CancelScheduleEdit", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelScheduleEdit(int iScheduleKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CancelScheduleEdit", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelScheduleEditAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.CancelScheduleEditAsync(iScheduleKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CancelScheduleEditAsync(int iScheduleKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CancelScheduleEditOperationCompleted == null)) {
                this.CancelScheduleEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelScheduleEditOperationCompleted);
            }
            this.InvokeAsync("CancelScheduleEdit", new object[] {
                        iScheduleKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.CancelScheduleEditOperationCompleted, userState);
        }
        
        private void OnCancelScheduleEditOperationCompleted(object arg) {
            if ((this.CancelScheduleEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelScheduleEditCompleted(this, new CancelScheduleEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteSchedule", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(int iScheduleKey, int iTaskKey, string iLockHolder, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        iScheduleKey,
                        iTaskKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int iScheduleKey, int iTaskKey, string iLockHolder, string pAuthenticateKey, string oErrMsg) {
            this.DeleteScheduleAsync(iScheduleKey, iTaskKey, iLockHolder, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int iScheduleKey, int iTaskKey, string iLockHolder, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        iScheduleKey,
                        iTaskKey,
                        iLockHolder,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BackupTaskTables", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupTaskTables(string iDestinationPath, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BackupTaskTables", new object[] {
                        iDestinationPath,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackupTaskTablesAsync(string iDestinationPath, string pAuthenticateKey, string oErrMsg) {
            this.BackupTaskTablesAsync(iDestinationPath, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BackupTaskTablesAsync(string iDestinationPath, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BackupTaskTablesOperationCompleted == null)) {
                this.BackupTaskTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupTaskTablesOperationCompleted);
            }
            this.InvokeAsync("BackupTaskTables", new object[] {
                        iDestinationPath,
                        pAuthenticateKey,
                        oErrMsg}, this.BackupTaskTablesOperationCompleted, userState);
        }
        
        private void OnBackupTaskTablesOperationCompleted(object arg) {
            if ((this.BackupTaskTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupTaskTablesCompleted(this, new BackupTaskTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RestoreTaskTables", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestoreTaskTables(string iSourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RestoreTaskTables", new object[] {
                        iSourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreTaskTablesAsync(string iSourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.RestoreTaskTablesAsync(iSourcePath, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RestoreTaskTablesAsync(string iSourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RestoreTaskTablesOperationCompleted == null)) {
                this.RestoreTaskTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreTaskTablesOperationCompleted);
            }
            this.InvokeAsync("RestoreTaskTables", new object[] {
                        iSourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.RestoreTaskTablesOperationCompleted, userState);
        }
        
        private void OnRestoreTaskTablesOperationCompleted(object arg) {
            if ((this.RestoreTaskTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreTaskTablesCompleted(this, new RestoreTaskTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetNewCommSessionFo" +
            "lder", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewCommSessionFolder(System.DateTime iSessionTimeStamp, string iHHSerialNo, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetNewCommSessionFolder", new object[] {
                        iSessionTimeStamp,
                        iHHSerialNo,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewCommSessionFolderAsync(System.DateTime iSessionTimeStamp, string iHHSerialNo, string pAuthenticateKey, string oErrMsg) {
            this.GetNewCommSessionFolderAsync(iSessionTimeStamp, iHHSerialNo, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetNewCommSessionFolderAsync(System.DateTime iSessionTimeStamp, string iHHSerialNo, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetNewCommSessionFolderOperationCompleted == null)) {
                this.GetNewCommSessionFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewCommSessionFolderOperationCompleted);
            }
            this.InvokeAsync("GetNewCommSessionFolder", new object[] {
                        iSessionTimeStamp,
                        iHHSerialNo,
                        pAuthenticateKey,
                        oErrMsg}, this.GetNewCommSessionFolderOperationCompleted, userState);
        }
        
        private void OnGetNewCommSessionFolderOperationCompleted(object arg) {
            if ((this.GetNewCommSessionFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewCommSessionFolderCompleted(this, new GetNewCommSessionFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CreateFileInCommSes" +
            "sion", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateFileInCommSession(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iFileBytes, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CreateFileInCommSession", new object[] {
                        iSessionFolder,
                        iFileName,
                        iFileTimeStamp,
                        iFileBytes,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFileInCommSessionAsync(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, byte[] iFileBytes, string pAuthenticateKey, string oErrMsg) {
            this.CreateFileInCommSessionAsync(iSessionFolder, iFileName, iFileTimeStamp, iFileBytes, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CreateFileInCommSessionAsync(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, byte[] iFileBytes, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CreateFileInCommSessionOperationCompleted == null)) {
                this.CreateFileInCommSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFileInCommSessionOperationCompleted);
            }
            this.InvokeAsync("CreateFileInCommSession", new object[] {
                        iSessionFolder,
                        iFileName,
                        iFileTimeStamp,
                        iFileBytes,
                        pAuthenticateKey,
                        oErrMsg}, this.CreateFileInCommSessionOperationCompleted, userState);
        }
        
        private void OnCreateFileInCommSessionOperationCompleted(object arg) {
            if ((this.CreateFileInCommSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFileInCommSessionCompleted(this, new CreateFileInCommSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetFileInCommSessio" +
            "n", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileInCommSession(string iSessionFolder, string iFileName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetFileInCommSession", new object[] {
                        iSessionFolder,
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInCommSessionAsync(string iSessionFolder, string iFileName, string pAuthenticateKey, string oErrMsg) {
            this.GetFileInCommSessionAsync(iSessionFolder, iFileName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetFileInCommSessionAsync(string iSessionFolder, string iFileName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetFileInCommSessionOperationCompleted == null)) {
                this.GetFileInCommSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInCommSessionOperationCompleted);
            }
            this.InvokeAsync("GetFileInCommSession", new object[] {
                        iSessionFolder,
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetFileInCommSessionOperationCompleted, userState);
        }
        
        private void OnGetFileInCommSessionOperationCompleted(object arg) {
            if ((this.GetFileInCommSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInCommSessionCompleted(this, new GetFileInCommSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportCommSessionDa" +
            "ta", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportCommSessionData(string iSessionFolder, string iSerialNo, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ImportCommSessionData", new object[] {
                        iSessionFolder,
                        iSerialNo,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportCommSessionDataAsync(string iSessionFolder, string iSerialNo, string pAuthenticateKey, string oErrMsg) {
            this.ImportCommSessionDataAsync(iSessionFolder, iSerialNo, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ImportCommSessionDataAsync(string iSessionFolder, string iSerialNo, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ImportCommSessionDataOperationCompleted == null)) {
                this.ImportCommSessionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportCommSessionDataOperationCompleted);
            }
            this.InvokeAsync("ImportCommSessionData", new object[] {
                        iSessionFolder,
                        iSerialNo,
                        pAuthenticateKey,
                        oErrMsg}, this.ImportCommSessionDataOperationCompleted, userState);
        }
        
        private void OnImportCommSessionDataOperationCompleted(object arg) {
            if ((this.ImportCommSessionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportCommSessionDataCompleted(this, new ImportCommSessionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportCommSessionDa" +
            "ta_Ex", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportCommSessionData_Ex(string iSessionFolder, string iSerialNo, string pAuthenticateKey, ref string oErrMsg, ref string oIgnoredErrors) {
            object[] results = this.Invoke("ImportCommSessionData_Ex", new object[] {
                        iSessionFolder,
                        iSerialNo,
                        pAuthenticateKey,
                        oErrMsg,
                        oIgnoredErrors});
            oErrMsg = ((string)(results[0]));
            oIgnoredErrors = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void ImportCommSessionData_ExAsync(string iSessionFolder, string iSerialNo, string pAuthenticateKey, string oErrMsg, string oIgnoredErrors) {
            this.ImportCommSessionData_ExAsync(iSessionFolder, iSerialNo, pAuthenticateKey, oErrMsg, oIgnoredErrors, null);
        }
        
        /// <remarks/>
        public void ImportCommSessionData_ExAsync(string iSessionFolder, string iSerialNo, string pAuthenticateKey, string oErrMsg, string oIgnoredErrors, object userState) {
            if ((this.ImportCommSessionData_ExOperationCompleted == null)) {
                this.ImportCommSessionData_ExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportCommSessionData_ExOperationCompleted);
            }
            this.InvokeAsync("ImportCommSessionData_Ex", new object[] {
                        iSessionFolder,
                        iSerialNo,
                        pAuthenticateKey,
                        oErrMsg,
                        oIgnoredErrors}, this.ImportCommSessionData_ExOperationCompleted, userState);
        }
        
        private void OnImportCommSessionData_ExOperationCompleted(object arg) {
            if ((this.ImportCommSessionData_ExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportCommSessionData_ExCompleted(this, new ImportCommSessionData_ExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportHHEventLog", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportHHEventLog(string iSessionFolder, string iUnitSerialNo, string iComputerName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ImportHHEventLog", new object[] {
                        iSessionFolder,
                        iUnitSerialNo,
                        iComputerName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportHHEventLogAsync(string iSessionFolder, string iUnitSerialNo, string iComputerName, string pAuthenticateKey, string oErrMsg) {
            this.ImportHHEventLogAsync(iSessionFolder, iUnitSerialNo, iComputerName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ImportHHEventLogAsync(string iSessionFolder, string iUnitSerialNo, string iComputerName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ImportHHEventLogOperationCompleted == null)) {
                this.ImportHHEventLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportHHEventLogOperationCompleted);
            }
            this.InvokeAsync("ImportHHEventLog", new object[] {
                        iSessionFolder,
                        iUnitSerialNo,
                        iComputerName,
                        pAuthenticateKey,
                        oErrMsg}, this.ImportHHEventLogOperationCompleted, userState);
        }
        
        private void OnImportHHEventLogOperationCompleted(object arg) {
            if ((this.ImportHHEventLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportHHEventLogCompleted(this, new ImportHHEventLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CompressHandheldFil" +
            "e", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CompressHandheldFile(string iSessionFolder, string iSrcFilename, string iDestFilename, bool IsBinaryFile, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("CompressHandheldFile", new object[] {
                        iSessionFolder,
                        iSrcFilename,
                        iDestFilename,
                        IsBinaryFile,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CompressHandheldFileAsync(string iSessionFolder, string iSrcFilename, string iDestFilename, bool IsBinaryFile, string pAuthenticateKey, string oErrMsg) {
            this.CompressHandheldFileAsync(iSessionFolder, iSrcFilename, iDestFilename, IsBinaryFile, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CompressHandheldFileAsync(string iSessionFolder, string iSrcFilename, string iDestFilename, bool IsBinaryFile, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.CompressHandheldFileOperationCompleted == null)) {
                this.CompressHandheldFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompressHandheldFileOperationCompleted);
            }
            this.InvokeAsync("CompressHandheldFile", new object[] {
                        iSessionFolder,
                        iSrcFilename,
                        iDestFilename,
                        IsBinaryFile,
                        pAuthenticateKey,
                        oErrMsg}, this.CompressHandheldFileOperationCompleted, userState);
        }
        
        private void OnCompressHandheldFileOperationCompleted(object arg) {
            if ((this.CompressHandheldFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompressHandheldFileCompleted(this, new CompressHandheldFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetHHConfigFileInfo" +
            "AsString", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHHConfigFileInfoAsString(HardwareType iHardwareType, string iCustomerCfg, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetHHConfigFileInfoAsString", new object[] {
                        iHardwareType,
                        iCustomerCfg,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHHConfigFileInfoAsStringAsync(HardwareType iHardwareType, string iCustomerCfg, string pAuthenticateKey, string oErrMsg) {
            this.GetHHConfigFileInfoAsStringAsync(iHardwareType, iCustomerCfg, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetHHConfigFileInfoAsStringAsync(HardwareType iHardwareType, string iCustomerCfg, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetHHConfigFileInfoAsStringOperationCompleted == null)) {
                this.GetHHConfigFileInfoAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHHConfigFileInfoAsStringOperationCompleted);
            }
            this.InvokeAsync("GetHHConfigFileInfoAsString", new object[] {
                        iHardwareType,
                        iCustomerCfg,
                        pAuthenticateKey,
                        oErrMsg}, this.GetHHConfigFileInfoAsStringOperationCompleted, userState);
        }
        
        private void OnGetHHConfigFileInfoAsStringOperationCompleted(object arg) {
            if ((this.GetHHConfigFileInfoAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHHConfigFileInfoAsStringCompleted(this, new GetHHConfigFileInfoAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetHHConfigFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetHHConfigFile(HardwareType iHardwareType, string iCustomerCfg, string iFileName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetHHConfigFile", new object[] {
                        iHardwareType,
                        iCustomerCfg,
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHHConfigFileAsync(HardwareType iHardwareType, string iCustomerCfg, string iFileName, string pAuthenticateKey, string oErrMsg) {
            this.GetHHConfigFileAsync(iHardwareType, iCustomerCfg, iFileName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetHHConfigFileAsync(HardwareType iHardwareType, string iCustomerCfg, string iFileName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetHHConfigFileOperationCompleted == null)) {
                this.GetHHConfigFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHHConfigFileOperationCompleted);
            }
            this.InvokeAsync("GetHHConfigFile", new object[] {
                        iHardwareType,
                        iCustomerCfg,
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetHHConfigFileOperationCompleted, userState);
        }
        
        private void OnGetHHConfigFileOperationCompleted(object arg) {
            if ((this.GetHHConfigFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHHConfigFileCompleted(this, new GetHHConfigFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetHHPlatformFileIn" +
            "foAsString", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHHPlatformFileInfoAsString(HardwareType iHardwareType, string iAssignedCfg, int iSubConfigKey, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetHHPlatformFileInfoAsString", new object[] {
                        iHardwareType,
                        iAssignedCfg,
                        iSubConfigKey,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHHPlatformFileInfoAsStringAsync(HardwareType iHardwareType, string iAssignedCfg, int iSubConfigKey, string pAuthenticateKey, string oErrMsg) {
            this.GetHHPlatformFileInfoAsStringAsync(iHardwareType, iAssignedCfg, iSubConfigKey, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetHHPlatformFileInfoAsStringAsync(HardwareType iHardwareType, string iAssignedCfg, int iSubConfigKey, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetHHPlatformFileInfoAsStringOperationCompleted == null)) {
                this.GetHHPlatformFileInfoAsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHHPlatformFileInfoAsStringOperationCompleted);
            }
            this.InvokeAsync("GetHHPlatformFileInfoAsString", new object[] {
                        iHardwareType,
                        iAssignedCfg,
                        iSubConfigKey,
                        pAuthenticateKey,
                        oErrMsg}, this.GetHHPlatformFileInfoAsStringOperationCompleted, userState);
        }
        
        private void OnGetHHPlatformFileInfoAsStringOperationCompleted(object arg) {
            if ((this.GetHHPlatformFileInfoAsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHHPlatformFileInfoAsStringCompleted(this, new GetHHPlatformFileInfoAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetHHPlatformFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetHHPlatformFile(HardwareType iHardwareType, string iFileName, string pAuthenticateKey, int iSubConfigKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetHHPlatformFile", new object[] {
                        iHardwareType,
                        iFileName,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHHPlatformFileAsync(HardwareType iHardwareType, string iFileName, string pAuthenticateKey, int iSubConfigKey, string oErrMsg) {
            this.GetHHPlatformFileAsync(iHardwareType, iFileName, pAuthenticateKey, iSubConfigKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetHHPlatformFileAsync(HardwareType iHardwareType, string iFileName, string pAuthenticateKey, int iSubConfigKey, string oErrMsg, object userState) {
            if ((this.GetHHPlatformFileOperationCompleted == null)) {
                this.GetHHPlatformFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHHPlatformFileOperationCompleted);
            }
            this.InvokeAsync("GetHHPlatformFile", new object[] {
                        iHardwareType,
                        iFileName,
                        pAuthenticateKey,
                        iSubConfigKey,
                        oErrMsg}, this.GetHHPlatformFileOperationCompleted, userState);
        }
        
        private void OnGetHHPlatformFileOperationCompleted(object arg) {
            if ((this.GetHHPlatformFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHHPlatformFileCompleted(this, new GetHHPlatformFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetHHFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetHHFile(string iFileName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetHHFile", new object[] {
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHHFileAsync(string iFileName, string pAuthenticateKey, string oErrMsg) {
            this.GetHHFileAsync(iFileName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetHHFileAsync(string iFileName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetHHFileOperationCompleted == null)) {
                this.GetHHFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHHFileOperationCompleted);
            }
            this.InvokeAsync("GetHHFile", new object[] {
                        iFileName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetHHFileOperationCompleted, userState);
        }
        
        private void OnGetHHFileOperationCompleted(object arg) {
            if ((this.GetHHFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHHFileCompleted(this, new GetHHFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HandheldIsValid", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HandheldIsValid(string iSerialNo, string iOfficerName, string iOfficerID, ref string oErrMsg) {
            object[] results = this.Invoke("HandheldIsValid", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HandheldIsValidAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oErrMsg) {
            this.HandheldIsValidAsync(iSerialNo, iOfficerName, iOfficerID, oErrMsg, null);
        }
        
        /// <remarks/>
        public void HandheldIsValidAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oErrMsg, object userState) {
            if ((this.HandheldIsValidOperationCompleted == null)) {
                this.HandheldIsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandheldIsValidOperationCompleted);
            }
            this.InvokeAsync("HandheldIsValid", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oErrMsg}, this.HandheldIsValidOperationCompleted, userState);
        }
        
        private void OnHandheldIsValidOperationCompleted(object arg) {
            if ((this.HandheldIsValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandheldIsValidCompleted(this, new HandheldIsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HandheldIsValidForP" +
            "arkeon", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HandheldIsValidForParkeon(string iSerialNo, string iOfficerName, string iOfficerID, ref string oParkeonUserName, ref string oParkeonPassword, ref string oErrMsg) {
            object[] results = this.Invoke("HandheldIsValidForParkeon", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oParkeonUserName,
                        oParkeonPassword,
                        oErrMsg});
            oParkeonUserName = ((string)(results[1]));
            oParkeonPassword = ((string)(results[2]));
            oErrMsg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HandheldIsValidForParkeonAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oParkeonUserName, string oParkeonPassword, string oErrMsg) {
            this.HandheldIsValidForParkeonAsync(iSerialNo, iOfficerName, iOfficerID, oParkeonUserName, oParkeonPassword, oErrMsg, null);
        }
        
        /// <remarks/>
        public void HandheldIsValidForParkeonAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oParkeonUserName, string oParkeonPassword, string oErrMsg, object userState) {
            if ((this.HandheldIsValidForParkeonOperationCompleted == null)) {
                this.HandheldIsValidForParkeonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandheldIsValidForParkeonOperationCompleted);
            }
            this.InvokeAsync("HandheldIsValidForParkeon", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oParkeonUserName,
                        oParkeonPassword,
                        oErrMsg}, this.HandheldIsValidForParkeonOperationCompleted, userState);
        }
        
        private void OnHandheldIsValidForParkeonOperationCompleted(object arg) {
            if ((this.HandheldIsValidForParkeonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandheldIsValidForParkeonCompleted(this, new HandheldIsValidForParkeonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HandheldIsValidForP" +
            "arkNOW", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HandheldIsValidForParkNOW(string iSerialNo, string iOfficerName, string iOfficerID, ref string oParkNOWUserName, ref string oParkNOWPassword, ref string oErrMsg) {
            object[] results = this.Invoke("HandheldIsValidForParkNOW", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oParkNOWUserName,
                        oParkNOWPassword,
                        oErrMsg});
            oParkNOWUserName = ((string)(results[1]));
            oParkNOWPassword = ((string)(results[2]));
            oErrMsg = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HandheldIsValidForParkNOWAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oParkNOWUserName, string oParkNOWPassword, string oErrMsg) {
            this.HandheldIsValidForParkNOWAsync(iSerialNo, iOfficerName, iOfficerID, oParkNOWUserName, oParkNOWPassword, oErrMsg, null);
        }
        
        /// <remarks/>
        public void HandheldIsValidForParkNOWAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oParkNOWUserName, string oParkNOWPassword, string oErrMsg, object userState) {
            if ((this.HandheldIsValidForParkNOWOperationCompleted == null)) {
                this.HandheldIsValidForParkNOWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandheldIsValidForParkNOWOperationCompleted);
            }
            this.InvokeAsync("HandheldIsValidForParkNOW", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oParkNOWUserName,
                        oParkNOWPassword,
                        oErrMsg}, this.HandheldIsValidForParkNOWOperationCompleted, userState);
        }
        
        private void OnHandheldIsValidForParkNOWOperationCompleted(object arg) {
            if ((this.HandheldIsValidForParkNOWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandheldIsValidForParkNOWCompleted(this, new HandheldIsValidForParkNOWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HandheldIsValidForD" +
            "PT", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HandheldIsValidForDPT(string iSerialNo, string iOfficerName, string iOfficerID, ref string oDPTStallInfoToken, ref string oErrMsg) {
            object[] results = this.Invoke("HandheldIsValidForDPT", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oDPTStallInfoToken,
                        oErrMsg});
            oDPTStallInfoToken = ((string)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HandheldIsValidForDPTAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oDPTStallInfoToken, string oErrMsg) {
            this.HandheldIsValidForDPTAsync(iSerialNo, iOfficerName, iOfficerID, oDPTStallInfoToken, oErrMsg, null);
        }
        
        /// <remarks/>
        public void HandheldIsValidForDPTAsync(string iSerialNo, string iOfficerName, string iOfficerID, string oDPTStallInfoToken, string oErrMsg, object userState) {
            if ((this.HandheldIsValidForDPTOperationCompleted == null)) {
                this.HandheldIsValidForDPTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandheldIsValidForDPTOperationCompleted);
            }
            this.InvokeAsync("HandheldIsValidForDPT", new object[] {
                        iSerialNo,
                        iOfficerName,
                        iOfficerID,
                        oDPTStallInfoToken,
                        oErrMsg}, this.HandheldIsValidForDPTOperationCompleted, userState);
        }
        
        private void OnHandheldIsValidForDPTOperationCompleted(object arg) {
            if ((this.HandheldIsValidForDPTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandheldIsValidForDPTCompleted(this, new HandheldIsValidForDPTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SearchHotSheet", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SearchHotSheet(string iSearchStructName, string iSearchParams, string pAuthenticateKey, string iOfficerName, string iOfficerID, string iSerialNo, ref string oErrMsg) {
            object[] results = this.Invoke("SearchHotSheet", new object[] {
                        iSearchStructName,
                        iSearchParams,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        iSerialNo,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchHotSheetAsync(string iSearchStructName, string iSearchParams, string pAuthenticateKey, string iOfficerName, string iOfficerID, string iSerialNo, string oErrMsg) {
            this.SearchHotSheetAsync(iSearchStructName, iSearchParams, pAuthenticateKey, iOfficerName, iOfficerID, iSerialNo, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SearchHotSheetAsync(string iSearchStructName, string iSearchParams, string pAuthenticateKey, string iOfficerName, string iOfficerID, string iSerialNo, string oErrMsg, object userState) {
            if ((this.SearchHotSheetOperationCompleted == null)) {
                this.SearchHotSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchHotSheetOperationCompleted);
            }
            this.InvokeAsync("SearchHotSheet", new object[] {
                        iSearchStructName,
                        iSearchParams,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        iSerialNo,
                        oErrMsg}, this.SearchHotSheetOperationCompleted, userState);
        }
        
        private void OnSearchHotSheetOperationCompleted(object arg) {
            if ((this.SearchHotSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchHotSheetCompleted(this, new SearchHotSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/CreateWirelessSessi" +
            "on", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateWirelessSession(string iHHSerialNo, ref string oErrMsg) {
            object[] results = this.Invoke("CreateWirelessSession", new object[] {
                        iHHSerialNo,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWirelessSessionAsync(string iHHSerialNo, string oErrMsg) {
            this.CreateWirelessSessionAsync(iHHSerialNo, oErrMsg, null);
        }
        
        /// <remarks/>
        public void CreateWirelessSessionAsync(string iHHSerialNo, string oErrMsg, object userState) {
            if ((this.CreateWirelessSessionOperationCompleted == null)) {
                this.CreateWirelessSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWirelessSessionOperationCompleted);
            }
            this.InvokeAsync("CreateWirelessSession", new object[] {
                        iHHSerialNo,
                        oErrMsg}, this.CreateWirelessSessionOperationCompleted, userState);
        }
        
        private void OnCreateWirelessSessionOperationCompleted(object arg) {
            if ((this.CreateWirelessSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWirelessSessionCompleted(this, new CreateWirelessSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PutWirelessFile", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutWirelessFile(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iFileBytes, ref string oErrMsg) {
            object[] results = this.Invoke("PutWirelessFile", new object[] {
                        iSessionFolder,
                        iFileName,
                        iFileTimeStamp,
                        iFileBytes,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutWirelessFileAsync(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, byte[] iFileBytes, string oErrMsg) {
            this.PutWirelessFileAsync(iSessionFolder, iFileName, iFileTimeStamp, iFileBytes, oErrMsg, null);
        }
        
        /// <remarks/>
        public void PutWirelessFileAsync(string iSessionFolder, string iFileName, System.DateTime iFileTimeStamp, byte[] iFileBytes, string oErrMsg, object userState) {
            if ((this.PutWirelessFileOperationCompleted == null)) {
                this.PutWirelessFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutWirelessFileOperationCompleted);
            }
            this.InvokeAsync("PutWirelessFile", new object[] {
                        iSessionFolder,
                        iFileName,
                        iFileTimeStamp,
                        iFileBytes,
                        oErrMsg}, this.PutWirelessFileOperationCompleted, userState);
        }
        
        private void OnPutWirelessFileOperationCompleted(object arg) {
            if ((this.PutWirelessFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutWirelessFileCompleted(this, new PutWirelessFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/EndWirelessSession", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EndWirelessSession(string iSessionFolder) {
            object[] results = this.Invoke("EndWirelessSession", new object[] {
                        iSessionFolder});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EndWirelessSessionAsync(string iSessionFolder) {
            this.EndWirelessSessionAsync(iSessionFolder, null);
        }
        
        /// <remarks/>
        public void EndWirelessSessionAsync(string iSessionFolder, object userState) {
            if ((this.EndWirelessSessionOperationCompleted == null)) {
                this.EndWirelessSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndWirelessSessionOperationCompleted);
            }
            this.InvokeAsync("EndWirelessSession", new object[] {
                        iSessionFolder}, this.EndWirelessSessionOperationCompleted, userState);
        }
        
        private void OnEndWirelessSessionOperationCompleted(object arg) {
            if ((this.EndWirelessSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndWirelessSessionCompleted(this, new EndWirelessSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RemoveOldSessions", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveOldSessions(int iDaysOld, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RemoveOldSessions", new object[] {
                        iDaysOld,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveOldSessionsAsync(int iDaysOld, string pAuthenticateKey, string oErrMsg) {
            this.RemoveOldSessionsAsync(iDaysOld, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RemoveOldSessionsAsync(int iDaysOld, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RemoveOldSessionsOperationCompleted == null)) {
                this.RemoveOldSessionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveOldSessionsOperationCompleted);
            }
            this.InvokeAsync("RemoveOldSessions", new object[] {
                        iDaysOld,
                        pAuthenticateKey,
                        oErrMsg}, this.RemoveOldSessionsOperationCompleted, userState);
        }
        
        private void OnRemoveOldSessionsOperationCompleted(object arg) {
            if ((this.RemoveOldSessionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveOldSessionsCompleted(this, new RemoveOldSessionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetSchemaForAutoCIT" +
            "EData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSchemaForAutoCITEData(string[] tableNames, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetSchemaForAutoCITEData", new object[] {
                        tableNames,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchemaForAutoCITEDataAsync(string[] tableNames, string pAuthenticateKey, string oErrMsg) {
            this.GetSchemaForAutoCITEDataAsync(tableNames, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetSchemaForAutoCITEDataAsync(string[] tableNames, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetSchemaForAutoCITEDataOperationCompleted == null)) {
                this.GetSchemaForAutoCITEDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchemaForAutoCITEDataOperationCompleted);
            }
            this.InvokeAsync("GetSchemaForAutoCITEData", new object[] {
                        tableNames,
                        pAuthenticateKey,
                        oErrMsg}, this.GetSchemaForAutoCITEDataOperationCompleted, userState);
        }
        
        private void OnGetSchemaForAutoCITEDataOperationCompleted(object arg) {
            if ((this.GetSchemaForAutoCITEDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchemaForAutoCITEDataCompleted(this, new GetSchemaForAutoCITEDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetProviderInformat" +
            "ion", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProviderInformation(string pAuthenticateKey) {
            object[] results = this.Invoke("GetProviderInformation", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderInformationAsync(string pAuthenticateKey) {
            this.GetProviderInformationAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetProviderInformationAsync(string pAuthenticateKey, object userState) {
            if ((this.GetProviderInformationOperationCompleted == null)) {
                this.GetProviderInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderInformationOperationCompleted);
            }
            this.InvokeAsync("GetProviderInformation", new object[] {
                        pAuthenticateKey}, this.GetProviderInformationOperationCompleted, userState);
        }
        
        private void OnGetProviderInformationOperationCompleted(object arg) {
            if ((this.GetProviderInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderInformationCompleted(this, new GetProviderInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetProviderInformat" +
            "ionByName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProviderInformationByName(string iProviderName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetProviderInformationByName", new object[] {
                        iProviderName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderInformationByNameAsync(string iProviderName, string pAuthenticateKey, string oErrMsg) {
            this.GetProviderInformationByNameAsync(iProviderName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetProviderInformationByNameAsync(string iProviderName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetProviderInformationByNameOperationCompleted == null)) {
                this.GetProviderInformationByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderInformationByNameOperationCompleted);
            }
            this.InvokeAsync("GetProviderInformationByName", new object[] {
                        iProviderName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetProviderInformationByNameOperationCompleted, userState);
        }
        
        private void OnGetProviderInformationByNameOperationCompleted(object arg) {
            if ((this.GetProviderInformationByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderInformationByNameCompleted(this, new GetProviderInformationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetProviderType", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProviderType(string pAuthenticateKey) {
            object[] results = this.Invoke("GetProviderType", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderTypeAsync(string pAuthenticateKey) {
            this.GetProviderTypeAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetProviderTypeAsync(string pAuthenticateKey, object userState) {
            if ((this.GetProviderTypeOperationCompleted == null)) {
                this.GetProviderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderTypeOperationCompleted);
            }
            this.InvokeAsync("GetProviderType", new object[] {
                        pAuthenticateKey}, this.GetProviderTypeOperationCompleted, userState);
        }
        
        private void OnGetProviderTypeOperationCompleted(object arg) {
            if ((this.GetProviderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderTypeCompleted(this, new GetProviderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetConnectionNames", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConnectionNames(string pAuthenticateKey) {
            object[] results = this.Invoke("GetConnectionNames", new object[] {
                        pAuthenticateKey});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionNamesAsync(string pAuthenticateKey) {
            this.GetConnectionNamesAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetConnectionNamesAsync(string pAuthenticateKey, object userState) {
            if ((this.GetConnectionNamesOperationCompleted == null)) {
                this.GetConnectionNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionNamesOperationCompleted);
            }
            this.InvokeAsync("GetConnectionNames", new object[] {
                        pAuthenticateKey}, this.GetConnectionNamesOperationCompleted, userState);
        }
        
        private void OnGetConnectionNamesOperationCompleted(object arg) {
            if ((this.GetConnectionNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionNamesCompleted(this, new GetConnectionNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetActiveConnection" +
            "Name", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetActiveConnectionName(string pAuthenticateKey) {
            object[] results = this.Invoke("GetActiveConnectionName", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveConnectionNameAsync(string pAuthenticateKey) {
            this.GetActiveConnectionNameAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetActiveConnectionNameAsync(string pAuthenticateKey, object userState) {
            if ((this.GetActiveConnectionNameOperationCompleted == null)) {
                this.GetActiveConnectionNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveConnectionNameOperationCompleted);
            }
            this.InvokeAsync("GetActiveConnectionName", new object[] {
                        pAuthenticateKey}, this.GetActiveConnectionNameOperationCompleted, userState);
        }
        
        private void OnGetActiveConnectionNameOperationCompleted(object arg) {
            if ((this.GetActiveConnectionNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveConnectionNameCompleted(this, new GetActiveConnectionNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetActiveConnection" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetActiveConnection(string iConnectionName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetActiveConnection", new object[] {
                        iConnectionName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetActiveConnectionAsync(string iConnectionName, string pAuthenticateKey, string oErrMsg) {
            this.SetActiveConnectionAsync(iConnectionName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetActiveConnectionAsync(string iConnectionName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetActiveConnectionOperationCompleted == null)) {
                this.SetActiveConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActiveConnectionOperationCompleted);
            }
            this.InvokeAsync("SetActiveConnection", new object[] {
                        iConnectionName,
                        pAuthenticateKey,
                        oErrMsg}, this.SetActiveConnectionOperationCompleted, userState);
        }
        
        private void OnSetActiveConnectionOperationCompleted(object arg) {
            if ((this.SetActiveConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetActiveConnectionCompleted(this, new SetActiveConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetConnectionString" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionString(string pAuthenticateKey) {
            object[] results = this.Invoke("GetConnectionString", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string pAuthenticateKey) {
            this.GetConnectionStringAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string pAuthenticateKey, object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[] {
                        pAuthenticateKey}, this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetConnectionString" +
            "ByName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionStringByName(string iConnectionName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetConnectionStringByName", new object[] {
                        iConnectionName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringByNameAsync(string iConnectionName, string pAuthenticateKey, string oErrMsg) {
            this.GetConnectionStringByNameAsync(iConnectionName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringByNameAsync(string iConnectionName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetConnectionStringByNameOperationCompleted == null)) {
                this.GetConnectionStringByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringByNameOperationCompleted);
            }
            this.InvokeAsync("GetConnectionStringByName", new object[] {
                        iConnectionName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetConnectionStringByNameOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringByNameOperationCompleted(object arg) {
            if ((this.GetConnectionStringByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringByNameCompleted(this, new GetConnectionStringByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddConnectionString" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddConnectionString(string iSerializedProviderInfo, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("AddConnectionString", new object[] {
                        iSerializedProviderInfo,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddConnectionStringAsync(string iSerializedProviderInfo, string pAuthenticateKey, string oErrMsg) {
            this.AddConnectionStringAsync(iSerializedProviderInfo, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void AddConnectionStringAsync(string iSerializedProviderInfo, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.AddConnectionStringOperationCompleted == null)) {
                this.AddConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConnectionStringOperationCompleted);
            }
            this.InvokeAsync("AddConnectionString", new object[] {
                        iSerializedProviderInfo,
                        pAuthenticateKey,
                        oErrMsg}, this.AddConnectionStringOperationCompleted, userState);
        }
        
        private void OnAddConnectionStringOperationCompleted(object arg) {
            if ((this.AddConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConnectionStringCompleted(this, new AddConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetInstalledRootFil" +
            "ePath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInstalledRootFilePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetInstalledRootFilePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstalledRootFilePathAsync(string pAuthenticateKey) {
            this.GetInstalledRootFilePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetInstalledRootFilePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetInstalledRootFilePathOperationCompleted == null)) {
                this.GetInstalledRootFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalledRootFilePathOperationCompleted);
            }
            this.InvokeAsync("GetInstalledRootFilePath", new object[] {
                        pAuthenticateKey}, this.GetInstalledRootFilePathOperationCompleted, userState);
        }
        
        private void OnGetInstalledRootFilePathOperationCompleted(object arg) {
            if ((this.GetInstalledRootFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalledRootFilePathCompleted(this, new GetInstalledRootFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetIssueApFilePath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIssueApFilePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetIssueApFilePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIssueApFilePathAsync(string pAuthenticateKey) {
            this.GetIssueApFilePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetIssueApFilePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetIssueApFilePathOperationCompleted == null)) {
                this.GetIssueApFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIssueApFilePathOperationCompleted);
            }
            this.InvokeAsync("GetIssueApFilePath", new object[] {
                        pAuthenticateKey}, this.GetIssueApFilePathOperationCompleted, userState);
        }
        
        private void OnGetIssueApFilePathOperationCompleted(object arg) {
            if ((this.GetIssueApFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIssueApFilePathCompleted(this, new GetIssueApFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAgencyListFilePa" +
            "th", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAgencyListFilePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetAgencyListFilePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAgencyListFilePathAsync(string pAuthenticateKey) {
            this.GetAgencyListFilePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetAgencyListFilePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetAgencyListFilePathOperationCompleted == null)) {
                this.GetAgencyListFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAgencyListFilePathOperationCompleted);
            }
            this.InvokeAsync("GetAgencyListFilePath", new object[] {
                        pAuthenticateKey}, this.GetAgencyListFilePathOperationCompleted, userState);
        }
        
        private void OnGetAgencyListFilePathOperationCompleted(object arg) {
            if ((this.GetAgencyListFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAgencyListFilePathCompleted(this, new GetAgencyListFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetImpExpDefFilePat" +
            "h", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImpExpDefFilePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetImpExpDefFilePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImpExpDefFilePathAsync(string pAuthenticateKey) {
            this.GetImpExpDefFilePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetImpExpDefFilePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetImpExpDefFilePathOperationCompleted == null)) {
                this.GetImpExpDefFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImpExpDefFilePathOperationCompleted);
            }
            this.InvokeAsync("GetImpExpDefFilePath", new object[] {
                        pAuthenticateKey}, this.GetImpExpDefFilePathOperationCompleted, userState);
        }
        
        private void OnGetImpExpDefFilePathOperationCompleted(object arg) {
            if ((this.GetImpExpDefFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImpExpDefFilePathCompleted(this, new GetImpExpDefFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetImportHistoryPat" +
            "h", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImportHistoryPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetImportHistoryPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImportHistoryPathAsync(string pAuthenticateKey) {
            this.GetImportHistoryPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetImportHistoryPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetImportHistoryPathOperationCompleted == null)) {
                this.GetImportHistoryPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportHistoryPathOperationCompleted);
            }
            this.InvokeAsync("GetImportHistoryPath", new object[] {
                        pAuthenticateKey}, this.GetImportHistoryPathOperationCompleted, userState);
        }
        
        private void OnGetImportHistoryPathOperationCompleted(object arg) {
            if ((this.GetImportHistoryPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportHistoryPathCompleted(this, new GetImportHistoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetExportHistoryPat" +
            "h", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExportHistoryPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetExportHistoryPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExportHistoryPathAsync(string pAuthenticateKey) {
            this.GetExportHistoryPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetExportHistoryPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetExportHistoryPathOperationCompleted == null)) {
                this.GetExportHistoryPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExportHistoryPathOperationCompleted);
            }
            this.InvokeAsync("GetExportHistoryPath", new object[] {
                        pAuthenticateKey}, this.GetExportHistoryPathOperationCompleted, userState);
        }
        
        private void OnGetExportHistoryPathOperationCompleted(object arg) {
            if ((this.GetExportHistoryPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExportHistoryPathCompleted(this, new GetExportHistoryPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetReportParameterF" +
            "ilePath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReportParameterFilePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetReportParameterFilePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportParameterFilePathAsync(string pAuthenticateKey) {
            this.GetReportParameterFilePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetReportParameterFilePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetReportParameterFilePathOperationCompleted == null)) {
                this.GetReportParameterFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportParameterFilePathOperationCompleted);
            }
            this.InvokeAsync("GetReportParameterFilePath", new object[] {
                        pAuthenticateKey}, this.GetReportParameterFilePathOperationCompleted, userState);
        }
        
        private void OnGetReportParameterFilePathOperationCompleted(object arg) {
            if ((this.GetReportParameterFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportParameterFilePathCompleted(this, new GetReportParameterFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommHandheldsPat" +
            "h", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommHandheldsPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetCommHandheldsPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommHandheldsPathAsync(string pAuthenticateKey) {
            this.GetCommHandheldsPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetCommHandheldsPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetCommHandheldsPathOperationCompleted == null)) {
                this.GetCommHandheldsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommHandheldsPathOperationCompleted);
            }
            this.InvokeAsync("GetCommHandheldsPath", new object[] {
                        pAuthenticateKey}, this.GetCommHandheldsPathOperationCompleted, userState);
        }
        
        private void OnGetCommHandheldsPathOperationCompleted(object arg) {
            if ((this.GetCommHandheldsPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommHandheldsPathCompleted(this, new GetCommHandheldsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommPlatformsPat" +
            "h", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommPlatformsPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetCommPlatformsPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommPlatformsPathAsync(string pAuthenticateKey) {
            this.GetCommPlatformsPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetCommPlatformsPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetCommPlatformsPathOperationCompleted == null)) {
                this.GetCommPlatformsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommPlatformsPathOperationCompleted);
            }
            this.InvokeAsync("GetCommPlatformsPath", new object[] {
                        pAuthenticateKey}, this.GetCommPlatformsPathOperationCompleted, userState);
        }
        
        private void OnGetCommPlatformsPathOperationCompleted(object arg) {
            if ((this.GetCommPlatformsPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommPlatformsPathCompleted(this, new GetCommPlatformsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommConfiguratio" +
            "nsPath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommConfigurationsPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetCommConfigurationsPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommConfigurationsPathAsync(string pAuthenticateKey) {
            this.GetCommConfigurationsPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetCommConfigurationsPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetCommConfigurationsPathOperationCompleted == null)) {
                this.GetCommConfigurationsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommConfigurationsPathOperationCompleted);
            }
            this.InvokeAsync("GetCommConfigurationsPath", new object[] {
                        pAuthenticateKey}, this.GetCommConfigurationsPathOperationCompleted, userState);
        }
        
        private void OnGetCommConfigurationsPathOperationCompleted(object arg) {
            if ((this.GetCommConfigurationsPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommConfigurationsPathCompleted(this, new GetCommConfigurationsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommSessionsPath" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommSessionsPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetCommSessionsPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommSessionsPathAsync(string pAuthenticateKey) {
            this.GetCommSessionsPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetCommSessionsPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetCommSessionsPathOperationCompleted == null)) {
                this.GetCommSessionsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommSessionsPathOperationCompleted);
            }
            this.InvokeAsync("GetCommSessionsPath", new object[] {
                        pAuthenticateKey}, this.GetCommSessionsPathOperationCompleted, userState);
        }
        
        private void OnGetCommSessionsPathOperationCompleted(object arg) {
            if ((this.GetCommSessionsPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommSessionsPathCompleted(this, new GetCommSessionsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetCommWirelessSess" +
            "ionsPath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommWirelessSessionsPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetCommWirelessSessionsPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommWirelessSessionsPathAsync(string pAuthenticateKey) {
            this.GetCommWirelessSessionsPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetCommWirelessSessionsPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetCommWirelessSessionsPathOperationCompleted == null)) {
                this.GetCommWirelessSessionsPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommWirelessSessionsPathOperationCompleted);
            }
            this.InvokeAsync("GetCommWirelessSessionsPath", new object[] {
                        pAuthenticateKey}, this.GetCommWirelessSessionsPathOperationCompleted, userState);
        }
        
        private void OnGetCommWirelessSessionsPathOperationCompleted(object arg) {
            if ((this.GetCommWirelessSessionsPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommWirelessSessionsPathCompleted(this, new GetCommWirelessSessionsPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetUserSuppliedList" +
            "sRootPath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserSuppliedListsRootPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetUserSuppliedListsRootPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSuppliedListsRootPathAsync(string pAuthenticateKey) {
            this.GetUserSuppliedListsRootPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetUserSuppliedListsRootPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetUserSuppliedListsRootPathOperationCompleted == null)) {
                this.GetUserSuppliedListsRootPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSuppliedListsRootPathOperationCompleted);
            }
            this.InvokeAsync("GetUserSuppliedListsRootPath", new object[] {
                        pAuthenticateKey}, this.GetUserSuppliedListsRootPathOperationCompleted, userState);
        }
        
        private void OnGetUserSuppliedListsRootPathOperationCompleted(object arg) {
            if ((this.GetUserSuppliedListsRootPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSuppliedListsRootPathCompleted(this, new GetUserSuppliedListsRootPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAcwRangePath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAcwRangePath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetAcwRangePath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAcwRangePathAsync(string pAuthenticateKey) {
            this.GetAcwRangePathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetAcwRangePathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetAcwRangePathOperationCompleted == null)) {
                this.GetAcwRangePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAcwRangePathOperationCompleted);
            }
            this.InvokeAsync("GetAcwRangePath", new object[] {
                        pAuthenticateKey}, this.GetAcwRangePathOperationCompleted, userState);
        }
        
        private void OnGetAcwRangePathOperationCompleted(object arg) {
            if ((this.GetAcwRangePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAcwRangePathCompleted(this, new GetAcwRangePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetXMLDownloadPath", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetXMLDownloadPath(string pAuthenticateKey) {
            object[] results = this.Invoke("GetXMLDownloadPath", new object[] {
                        pAuthenticateKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetXMLDownloadPathAsync(string pAuthenticateKey) {
            this.GetXMLDownloadPathAsync(pAuthenticateKey, null);
        }
        
        /// <remarks/>
        public void GetXMLDownloadPathAsync(string pAuthenticateKey, object userState) {
            if ((this.GetXMLDownloadPathOperationCompleted == null)) {
                this.GetXMLDownloadPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXMLDownloadPathOperationCompleted);
            }
            this.InvokeAsync("GetXMLDownloadPath", new object[] {
                        pAuthenticateKey}, this.GetXMLDownloadPathOperationCompleted, userState);
        }
        
        private void OnGetXMLDownloadPathOperationCompleted(object arg) {
            if ((this.GetXMLDownloadPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXMLDownloadPathCompleted(this, new GetXMLDownloadPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ForceConfigEncrypti" +
            "on", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ForceConfigEncryption(string iSectionName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ForceConfigEncryption", new object[] {
                        iSectionName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForceConfigEncryptionAsync(string iSectionName, string pAuthenticateKey, string oErrMsg) {
            this.ForceConfigEncryptionAsync(iSectionName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ForceConfigEncryptionAsync(string iSectionName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ForceConfigEncryptionOperationCompleted == null)) {
                this.ForceConfigEncryptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceConfigEncryptionOperationCompleted);
            }
            this.InvokeAsync("ForceConfigEncryption", new object[] {
                        iSectionName,
                        pAuthenticateKey,
                        oErrMsg}, this.ForceConfigEncryptionOperationCompleted, userState);
        }
        
        private void OnForceConfigEncryptionOperationCompleted(object arg) {
            if ((this.ForceConfigEncryptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceConfigEncryptionCompleted(this, new ForceConfigEncryptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetAllConfiguration" +
            "Items", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllConfigurationItems(string ComputerName, string UserName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetAllConfigurationItems", new object[] {
                        ComputerName,
                        UserName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllConfigurationItemsAsync(string ComputerName, string UserName, string pAuthenticateKey, string oErrMsg) {
            this.GetAllConfigurationItemsAsync(ComputerName, UserName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetAllConfigurationItemsAsync(string ComputerName, string UserName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetAllConfigurationItemsOperationCompleted == null)) {
                this.GetAllConfigurationItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllConfigurationItemsOperationCompleted);
            }
            this.InvokeAsync("GetAllConfigurationItems", new object[] {
                        ComputerName,
                        UserName,
                        pAuthenticateKey,
                        oErrMsg}, this.GetAllConfigurationItemsOperationCompleted, userState);
        }
        
        private void OnGetAllConfigurationItemsOperationCompleted(object arg) {
            if ((this.GetAllConfigurationItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllConfigurationItemsCompleted(this, new GetAllConfigurationItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetAllConfiguration" +
            "Items", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAllConfigurationItems(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetAllConfigurationItems", new object[] {
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAllConfigurationItemsAsync(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.SetAllConfigurationItemsAsync(iDataSet, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetAllConfigurationItemsAsync(System.Data.DataSet iDataSet, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetAllConfigurationItemsOperationCompleted == null)) {
                this.SetAllConfigurationItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAllConfigurationItemsOperationCompleted);
            }
            this.InvokeAsync("SetAllConfigurationItems", new object[] {
                        iDataSet,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.SetAllConfigurationItemsOperationCompleted, userState);
        }
        
        private void OnSetAllConfigurationItemsOperationCompleted(object arg) {
            if ((this.SetAllConfigurationItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAllConfigurationItemsCompleted(this, new SetAllConfigurationItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetOneConfiguration" +
            "Item", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOneConfigurationItem(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, string oErrMsg) {
            this.GetOneConfigurationItemAsync(Scope, ComputerName, UserName, Category, Item, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetOneConfigurationItemOperationCompleted == null)) {
                this.GetOneConfigurationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneConfigurationItemOperationCompleted);
            }
            this.InvokeAsync("GetOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        pAuthenticateKey,
                        oErrMsg}, this.GetOneConfigurationItemOperationCompleted, userState);
        }
        
        private void OnGetOneConfigurationItemOperationCompleted(object arg) {
            if ((this.GetOneConfigurationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneConfigurationItemCompleted(this, new GetOneConfigurationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/SetOneConfiguration" +
            "Item", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOneConfigurationItem(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string ItemValue, ItemDataType ItemDataType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("SetOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        ItemValue,
                        ItemDataType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string ItemValue, ItemDataType ItemDataType, string pAuthenticateKey, string oErrMsg) {
            this.SetOneConfigurationItemAsync(Scope, ComputerName, UserName, Category, Item, ItemValue, ItemDataType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void SetOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string ItemValue, ItemDataType ItemDataType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.SetOneConfigurationItemOperationCompleted == null)) {
                this.SetOneConfigurationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOneConfigurationItemOperationCompleted);
            }
            this.InvokeAsync("SetOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        ItemValue,
                        ItemDataType,
                        pAuthenticateKey,
                        oErrMsg}, this.SetOneConfigurationItemOperationCompleted, userState);
        }
        
        private void OnSetOneConfigurationItemOperationCompleted(object arg) {
            if ((this.SetOneConfigurationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOneConfigurationItemCompleted(this, new SetOneConfigurationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/DeleteOneConfigurat" +
            "ionItem", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOneConfigurationItem(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("DeleteOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, string oErrMsg) {
            this.DeleteOneConfigurationItemAsync(Scope, ComputerName, UserName, Category, Item, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void DeleteOneConfigurationItemAsync(ScopeType Scope, string ComputerName, string UserName, ItemCategory Category, string Item, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.DeleteOneConfigurationItemOperationCompleted == null)) {
                this.DeleteOneConfigurationItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOneConfigurationItemOperationCompleted);
            }
            this.InvokeAsync("DeleteOneConfigurationItem", new object[] {
                        Scope,
                        ComputerName,
                        UserName,
                        Category,
                        Item,
                        pAuthenticateKey,
                        oErrMsg}, this.DeleteOneConfigurationItemOperationCompleted, userState);
        }
        
        private void OnDeleteOneConfigurationItemOperationCompleted(object arg) {
            if ((this.DeleteOneConfigurationItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOneConfigurationItemCompleted(this, new DeleteOneConfigurationItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetEagleProgramData" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEagleProgramData(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetEagleProgramData", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEagleProgramDataAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetEagleProgramDataAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetEagleProgramDataAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetEagleProgramDataOperationCompleted == null)) {
                this.GetEagleProgramDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEagleProgramDataOperationCompleted);
            }
            this.InvokeAsync("GetEagleProgramData", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetEagleProgramDataOperationCompleted, userState);
        }
        
        private void OnGetEagleProgramDataOperationCompleted(object arg) {
            if ((this.GetEagleProgramDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEagleProgramDataCompleted(this, new GetEagleProgramDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetPopularListNames" +
            "", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPopularListNames(ListPopularListType iType, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetPopularListNames", new object[] {
                        iType,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPopularListNamesAsync(ListPopularListType iType, string pAuthenticateKey, string oErrMsg) {
            this.GetPopularListNamesAsync(iType, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetPopularListNamesAsync(ListPopularListType iType, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetPopularListNamesOperationCompleted == null)) {
                this.GetPopularListNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPopularListNamesOperationCompleted);
            }
            this.InvokeAsync("GetPopularListNames", new object[] {
                        iType,
                        pAuthenticateKey,
                        oErrMsg}, this.GetPopularListNamesOperationCompleted, userState);
        }
        
        private void OnGetPopularListNamesOperationCompleted(object arg) {
            if ((this.GetPopularListNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPopularListNamesCompleted(this, new GetPopularListNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BackupConfiguration" +
            "Table", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupConfigurationTable(string DestinationPath, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BackupConfigurationTable", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackupConfigurationTableAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg) {
            this.BackupConfigurationTableAsync(DestinationPath, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BackupConfigurationTableAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BackupConfigurationTableOperationCompleted == null)) {
                this.BackupConfigurationTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupConfigurationTableOperationCompleted);
            }
            this.InvokeAsync("BackupConfigurationTable", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg}, this.BackupConfigurationTableOperationCompleted, userState);
        }
        
        private void OnBackupConfigurationTableOperationCompleted(object arg) {
            if ((this.BackupConfigurationTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupConfigurationTableCompleted(this, new BackupConfigurationTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RestoreConfiguratio" +
            "nTable", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestoreConfigurationTable(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RestoreConfigurationTable", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreConfigurationTableAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.RestoreConfigurationTableAsync(SourcePath, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RestoreConfigurationTableAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RestoreConfigurationTableOperationCompleted == null)) {
                this.RestoreConfigurationTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreConfigurationTableOperationCompleted);
            }
            this.InvokeAsync("RestoreConfigurationTable", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.RestoreConfigurationTableOperationCompleted, userState);
        }
        
        private void OnRestoreConfigurationTableOperationCompleted(object arg) {
            if ((this.RestoreConfigurationTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreConfigurationTableCompleted(this, new RestoreConfigurationTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BackupSystemFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BackupSystemFiles(string DestinationPath, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("BackupSystemFiles", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackupSystemFilesAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg) {
            this.BackupSystemFilesAsync(DestinationPath, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void BackupSystemFilesAsync(string DestinationPath, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.BackupSystemFilesOperationCompleted == null)) {
                this.BackupSystemFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupSystemFilesOperationCompleted);
            }
            this.InvokeAsync("BackupSystemFiles", new object[] {
                        DestinationPath,
                        pAuthenticateKey,
                        oErrMsg}, this.BackupSystemFilesOperationCompleted, userState);
        }
        
        private void OnBackupSystemFilesOperationCompleted(object arg) {
            if ((this.BackupSystemFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupSystemFilesCompleted(this, new BackupSystemFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RestoreSystemFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestoreSystemFiles(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RestoreSystemFiles", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreSystemFilesAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg) {
            this.RestoreSystemFilesAsync(SourcePath, iUser_Session_KeyStr, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RestoreSystemFilesAsync(string SourcePath, string iUser_Session_KeyStr, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RestoreSystemFilesOperationCompleted == null)) {
                this.RestoreSystemFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreSystemFilesOperationCompleted);
            }
            this.InvokeAsync("RestoreSystemFiles", new object[] {
                        SourcePath,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        oErrMsg}, this.RestoreSystemFilesOperationCompleted, userState);
        }
        
        private void OnRestoreSystemFilesOperationCompleted(object arg) {
            if ((this.RestoreSystemFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreSystemFilesCompleted(this, new RestoreSystemFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RegisterComputer", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterComputer(string iComputerName, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RegisterComputer", new object[] {
                        iComputerName,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterComputerAsync(string iComputerName, string pAuthenticateKey, string oErrMsg) {
            this.RegisterComputerAsync(iComputerName, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RegisterComputerAsync(string iComputerName, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RegisterComputerOperationCompleted == null)) {
                this.RegisterComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterComputerOperationCompleted);
            }
            this.InvokeAsync("RegisterComputer", new object[] {
                        iComputerName,
                        pAuthenticateKey,
                        oErrMsg}, this.RegisterComputerOperationCompleted, userState);
        }
        
        private void OnRegisterComputerOperationCompleted(object arg) {
            if ((this.RegisterComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterComputerCompleted(this, new RegisterComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetRegisteredComput" +
            "erList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegisteredComputerList(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("GetRegisteredComputerList", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisteredComputerListAsync(string pAuthenticateKey, string oErrMsg) {
            this.GetRegisteredComputerListAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void GetRegisteredComputerListAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.GetRegisteredComputerListOperationCompleted == null)) {
                this.GetRegisteredComputerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisteredComputerListOperationCompleted);
            }
            this.InvokeAsync("GetRegisteredComputerList", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.GetRegisteredComputerListOperationCompleted, userState);
        }
        
        private void OnGetRegisteredComputerListOperationCompleted(object arg) {
            if ((this.GetRegisteredComputerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisteredComputerListCompleted(this, new GetRegisteredComputerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateRegisteredCom" +
            "puterList", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateRegisteredComputerList(System.Data.DataSet iDataSet, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("UpdateRegisteredComputerList", new object[] {
                        iDataSet,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRegisteredComputerListAsync(System.Data.DataSet iDataSet, string pAuthenticateKey, string oErrMsg) {
            this.UpdateRegisteredComputerListAsync(iDataSet, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void UpdateRegisteredComputerListAsync(System.Data.DataSet iDataSet, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.UpdateRegisteredComputerListOperationCompleted == null)) {
                this.UpdateRegisteredComputerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRegisteredComputerListOperationCompleted);
            }
            this.InvokeAsync("UpdateRegisteredComputerList", new object[] {
                        iDataSet,
                        pAuthenticateKey,
                        oErrMsg}, this.UpdateRegisteredComputerListOperationCompleted, userState);
        }
        
        private void OnUpdateRegisteredComputerListOperationCompleted(object arg) {
            if ((this.UpdateRegisteredComputerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRegisteredComputerListCompleted(this, new UpdateRegisteredComputerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ComputerTableChange" +
            "d", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ComputerTableChanged(int[] iKeyList, long[] iRowVersionList, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ComputerTableChanged", new object[] {
                        iKeyList,
                        iRowVersionList,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ComputerTableChangedAsync(int[] iKeyList, long[] iRowVersionList, string pAuthenticateKey, string oErrMsg) {
            this.ComputerTableChangedAsync(iKeyList, iRowVersionList, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ComputerTableChangedAsync(int[] iKeyList, long[] iRowVersionList, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ComputerTableChangedOperationCompleted == null)) {
                this.ComputerTableChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComputerTableChangedOperationCompleted);
            }
            this.InvokeAsync("ComputerTableChanged", new object[] {
                        iKeyList,
                        iRowVersionList,
                        pAuthenticateKey,
                        oErrMsg}, this.ComputerTableChangedOperationCompleted, userState);
        }
        
        private void OnComputerTableChangedOperationCompleted(object arg) {
            if ((this.ComputerTableChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComputerTableChangedCompleted(this, new ComputerTableChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HelloWorld", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/HelloWorldVirtualFl" +
            "dTest", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorldVirtualFldTest() {
            object[] results = this.Invoke("HelloWorldVirtualFldTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldVirtualFldTestAsync() {
            this.HelloWorldVirtualFldTestAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldVirtualFldTestAsync(object userState) {
            if ((this.HelloWorldVirtualFldTestOperationCompleted == null)) {
                this.HelloWorldVirtualFldTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldVirtualFldTestOperationCompleted);
            }
            this.InvokeAsync("HelloWorldVirtualFldTest", new object[0], this.HelloWorldVirtualFldTestOperationCompleted, userState);
        }
        
        private void OnHelloWorldVirtualFldTestOperationCompleted(object arg) {
            if ((this.HelloWorldVirtualFldTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldVirtualFldTestCompleted(this, new HelloWorldVirtualFldTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ParentStructNameFor" +
            "DetailStruct", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ParentStructNameForDetailStruct(string DetailStructName) {
            object[] results = this.Invoke("ParentStructNameForDetailStruct", new object[] {
                        DetailStructName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ParentStructNameForDetailStructAsync(string DetailStructName) {
            this.ParentStructNameForDetailStructAsync(DetailStructName, null);
        }
        
        /// <remarks/>
        public void ParentStructNameForDetailStructAsync(string DetailStructName, object userState) {
            if ((this.ParentStructNameForDetailStructOperationCompleted == null)) {
                this.ParentStructNameForDetailStructOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParentStructNameForDetailStructOperationCompleted);
            }
            this.InvokeAsync("ParentStructNameForDetailStruct", new object[] {
                        DetailStructName}, this.ParentStructNameForDetailStructOperationCompleted, userState);
        }
        
        private void OnParentStructNameForDetailStructOperationCompleted(object arg) {
            if ((this.ParentStructNameForDetailStructCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ParentStructNameForDetailStructCompleted(this, new ParentStructNameForDetailStructCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PerformQuery", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PerformQuery(string statement, object[] parameterValues, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("PerformQuery", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PerformQueryAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage) {
            this.PerformQueryAsync(statement, parameterValues, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void PerformQueryAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.PerformQueryOperationCompleted == null)) {
                this.PerformQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformQueryOperationCompleted);
            }
            this.InvokeAsync("PerformQuery", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage}, this.PerformQueryOperationCompleted, userState);
        }
        
        private void OnPerformQueryOperationCompleted(object arg) {
            if ((this.PerformQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformQueryCompleted(this, new PerformQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PerformNonQuery", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PerformNonQuery(string statement, object[] parameterValues, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("PerformNonQuery", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PerformNonQueryAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage) {
            this.PerformNonQueryAsync(statement, parameterValues, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void PerformNonQueryAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.PerformNonQueryOperationCompleted == null)) {
                this.PerformNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformNonQueryOperationCompleted);
            }
            this.InvokeAsync("PerformNonQuery", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage}, this.PerformNonQueryOperationCompleted, userState);
        }
        
        private void OnPerformNonQueryOperationCompleted(object arg) {
            if ((this.PerformNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformNonQueryCompleted(this, new PerformNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PerformExecuteScala" +
            "r", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object PerformExecuteScalar(string statement, object[] parameterValues, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("PerformExecuteScalar", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void PerformExecuteScalarAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage) {
            this.PerformExecuteScalarAsync(statement, parameterValues, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void PerformExecuteScalarAsync(string statement, object[] parameterValues, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.PerformExecuteScalarOperationCompleted == null)) {
                this.PerformExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPerformExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("PerformExecuteScalar", new object[] {
                        statement,
                        parameterValues,
                        pAuthenticateKey,
                        errorMessage}, this.PerformExecuteScalarOperationCompleted, userState);
        }
        
        private void OnPerformExecuteScalarOperationCompleted(object arg) {
            if ((this.PerformExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PerformExecuteScalarCompleted(this, new PerformExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/InsertData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertData(System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("InsertData", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDataAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.InsertDataAsync(dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void InsertDataAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.InsertDataOperationCompleted == null)) {
                this.InsertDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataOperationCompleted);
            }
            this.InvokeAsync("InsertData", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.InsertDataOperationCompleted, userState);
        }
        
        private void OnInsertDataOperationCompleted(object arg) {
            if ((this.InsertDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataCompleted(this, new InsertDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/InsertData_AlwaysSe" +
            "tGeneratedKey", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertData_AlwaysSetGeneratedKey(System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("InsertData_AlwaysSetGeneratedKey", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertData_AlwaysSetGeneratedKeyAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.InsertData_AlwaysSetGeneratedKeyAsync(dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void InsertData_AlwaysSetGeneratedKeyAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.InsertData_AlwaysSetGeneratedKeyOperationCompleted == null)) {
                this.InsertData_AlwaysSetGeneratedKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertData_AlwaysSetGeneratedKeyOperationCompleted);
            }
            this.InvokeAsync("InsertData_AlwaysSetGeneratedKey", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.InsertData_AlwaysSetGeneratedKeyOperationCompleted, userState);
        }
        
        private void OnInsertData_AlwaysSetGeneratedKeyOperationCompleted(object arg) {
            if ((this.InsertData_AlwaysSetGeneratedKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertData_AlwaysSetGeneratedKeyCompleted(this, new InsertData_AlwaysSetGeneratedKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateData", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateData(System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("UpdateData", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.UpdateDataAsync(dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void UpdateDataAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.UpdateDataOperationCompleted == null)) {
                this.UpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataOperationCompleted);
            }
            this.InvokeAsync("UpdateData", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.UpdateDataOperationCompleted, userState);
        }
        
        private void OnUpdateDataOperationCompleted(object arg) {
            if ((this.UpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataCompleted(this, new UpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/UpdateDataOneTransa" +
            "ction", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateDataOneTransaction(System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("UpdateDataOneTransaction", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataOneTransactionAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.UpdateDataOneTransactionAsync(dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void UpdateDataOneTransactionAsync(System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.UpdateDataOneTransactionOperationCompleted == null)) {
                this.UpdateDataOneTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataOneTransactionOperationCompleted);
            }
            this.InvokeAsync("UpdateDataOneTransaction", new object[] {
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.UpdateDataOneTransactionOperationCompleted, userState);
        }
        
        private void OnUpdateDataOneTransactionOperationCompleted(object arg) {
            if ((this.UpdateDataOneTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataOneTransactionCompleted(this, new UpdateDataOneTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/AddStatus", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddStatus(string serializedStatusInfo, bool returnLatestInfo, ref System.Data.DataSet dataSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("AddStatus", new object[] {
                        serializedStatusInfo,
                        returnLatestInfo,
                        dataSet,
                        pAuthenticateKey,
                        errorMessage});
            dataSet = ((System.Data.DataSet)(results[0]));
            errorMessage = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void AddStatusAsync(string serializedStatusInfo, bool returnLatestInfo, System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage) {
            this.AddStatusAsync(serializedStatusInfo, returnLatestInfo, dataSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void AddStatusAsync(string serializedStatusInfo, bool returnLatestInfo, System.Data.DataSet dataSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.AddStatusOperationCompleted == null)) {
                this.AddStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStatusOperationCompleted);
            }
            this.InvokeAsync("AddStatus", new object[] {
                        serializedStatusInfo,
                        returnLatestInfo,
                        dataSet,
                        pAuthenticateKey,
                        errorMessage}, this.AddStatusOperationCompleted, userState);
        }
        
        private void OnAddStatusOperationCompleted(object arg) {
            if ((this.AddStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStatusCompleted(this, new AddStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportRecord", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ImportRecord(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iStructBytes, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, ref string errorMessage) {
            object[] results = this.Invoke("ImportRecord", new object[] {
                        iMasterStructName,
                        iMasterKeyValues,
                        iStructName,
                        iStructCfgRev,
                        iStructBytes,
                        iAttachmentBytes,
                        iUnitSerialNumber,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        errorMessage});
            errorMessage = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportRecordAsync(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, byte[] iStructBytes, byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, string errorMessage) {
            this.ImportRecordAsync(iMasterStructName, iMasterKeyValues, iStructName, iStructCfgRev, iStructBytes, iAttachmentBytes, iUnitSerialNumber, pAuthenticateKey, iOfficerName, iOfficerID, errorMessage, null);
        }
        
        /// <remarks/>
        public void ImportRecordAsync(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, byte[] iStructBytes, byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, string errorMessage, object userState) {
            if ((this.ImportRecordOperationCompleted == null)) {
                this.ImportRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportRecordOperationCompleted);
            }
            this.InvokeAsync("ImportRecord", new object[] {
                        iMasterStructName,
                        iMasterKeyValues,
                        iStructName,
                        iStructCfgRev,
                        iStructBytes,
                        iAttachmentBytes,
                        iUnitSerialNumber,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        errorMessage}, this.ImportRecordOperationCompleted, userState);
        }
        
        private void OnImportRecordOperationCompleted(object arg) {
            if ((this.ImportRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportRecordCompleted(this, new ImportRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ImportRecordAndRetu" +
            "rnDataSet", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImportRecordAndReturnDataSet(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iStructBytes, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, ref string errorMessage) {
            object[] results = this.Invoke("ImportRecordAndReturnDataSet", new object[] {
                        iMasterStructName,
                        iMasterKeyValues,
                        iStructName,
                        iStructCfgRev,
                        iStructBytes,
                        iAttachmentBytes,
                        iUnitSerialNumber,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImportRecordAndReturnDataSetAsync(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, byte[] iStructBytes, byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, string errorMessage) {
            this.ImportRecordAndReturnDataSetAsync(iMasterStructName, iMasterKeyValues, iStructName, iStructCfgRev, iStructBytes, iAttachmentBytes, iUnitSerialNumber, pAuthenticateKey, iOfficerName, iOfficerID, errorMessage, null);
        }
        
        /// <remarks/>
        public void ImportRecordAndReturnDataSetAsync(string iMasterStructName, string iMasterKeyValues, string iStructName, int iStructCfgRev, byte[] iStructBytes, byte[] iAttachmentBytes, string iUnitSerialNumber, string pAuthenticateKey, string iOfficerName, string iOfficerID, string errorMessage, object userState) {
            if ((this.ImportRecordAndReturnDataSetOperationCompleted == null)) {
                this.ImportRecordAndReturnDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportRecordAndReturnDataSetOperationCompleted);
            }
            this.InvokeAsync("ImportRecordAndReturnDataSet", new object[] {
                        iMasterStructName,
                        iMasterKeyValues,
                        iStructName,
                        iStructCfgRev,
                        iStructBytes,
                        iAttachmentBytes,
                        iUnitSerialNumber,
                        pAuthenticateKey,
                        iOfficerName,
                        iOfficerID,
                        errorMessage}, this.ImportRecordAndReturnDataSetOperationCompleted, userState);
        }
        
        private void OnImportRecordAndReturnDataSetOperationCompleted(object arg) {
            if ((this.ImportRecordAndReturnDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportRecordAndReturnDataSetCompleted(this, new ImportRecordAndReturnDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/PostDataFiles", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PostDataFiles(string serializedFileSet, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("PostDataFiles", new object[] {
                        serializedFileSet,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PostDataFilesAsync(string serializedFileSet, string pAuthenticateKey, string errorMessage) {
            this.PostDataFilesAsync(serializedFileSet, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void PostDataFilesAsync(string serializedFileSet, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.PostDataFilesOperationCompleted == null)) {
                this.PostDataFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostDataFilesOperationCompleted);
            }
            this.InvokeAsync("PostDataFiles", new object[] {
                        serializedFileSet,
                        pAuthenticateKey,
                        errorMessage}, this.PostDataFilesOperationCompleted, userState);
        }
        
        private void OnPostDataFilesOperationCompleted(object arg) {
            if ((this.PostDataFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostDataFilesCompleted(this, new PostDataFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/TranslateProviderSp" +
            "ecificChar", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public char TranslateProviderSpecificChar(char charToTranslate, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("TranslateProviderSpecificChar", new object[] {
                        charToTranslate,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((char)(results[0]));
        }
        
        /// <remarks/>
        public void TranslateProviderSpecificCharAsync(char charToTranslate, string pAuthenticateKey, string errorMessage) {
            this.TranslateProviderSpecificCharAsync(charToTranslate, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void TranslateProviderSpecificCharAsync(char charToTranslate, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.TranslateProviderSpecificCharOperationCompleted == null)) {
                this.TranslateProviderSpecificCharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTranslateProviderSpecificCharOperationCompleted);
            }
            this.InvokeAsync("TranslateProviderSpecificChar", new object[] {
                        charToTranslate,
                        pAuthenticateKey,
                        errorMessage}, this.TranslateProviderSpecificCharOperationCompleted, userState);
        }
        
        private void OnTranslateProviderSpecificCharOperationCompleted(object arg) {
            if ((this.TranslateProviderSpecificCharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TranslateProviderSpecificCharCompleted(this, new TranslateProviderSpecificCharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetProviderSpecific" +
            "ParameterName", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProviderSpecificParameterName(string parameterName, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetProviderSpecificParameterName", new object[] {
                        parameterName,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderSpecificParameterNameAsync(string parameterName, string pAuthenticateKey, string errorMessage) {
            this.GetProviderSpecificParameterNameAsync(parameterName, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetProviderSpecificParameterNameAsync(string parameterName, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetProviderSpecificParameterNameOperationCompleted == null)) {
                this.GetProviderSpecificParameterNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderSpecificParameterNameOperationCompleted);
            }
            this.InvokeAsync("GetProviderSpecificParameterName", new object[] {
                        parameterName,
                        pAuthenticateKey,
                        errorMessage}, this.GetProviderSpecificParameterNameOperationCompleted, userState);
        }
        
        private void OnGetProviderSpecificParameterNameOperationCompleted(object arg) {
            if ((this.GetProviderSpecificParameterNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderSpecificParameterNameCompleted(this, new GetProviderSpecificParameterNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/GetProviderSpecific" +
            "StartWithString", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProviderSpecificStartWithString(string value, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("GetProviderSpecificStartWithString", new object[] {
                        value,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderSpecificStartWithStringAsync(string value, string pAuthenticateKey, string errorMessage) {
            this.GetProviderSpecificStartWithStringAsync(value, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void GetProviderSpecificStartWithStringAsync(string value, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.GetProviderSpecificStartWithStringOperationCompleted == null)) {
                this.GetProviderSpecificStartWithStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderSpecificStartWithStringOperationCompleted);
            }
            this.InvokeAsync("GetProviderSpecificStartWithString", new object[] {
                        value,
                        pAuthenticateKey,
                        errorMessage}, this.GetProviderSpecificStartWithStringOperationCompleted, userState);
        }
        
        private void OnGetProviderSpecificStartWithStringOperationCompleted(object arg) {
            if ((this.GetProviderSpecificStartWithStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderSpecificStartWithStringCompleted(this, new GetProviderSpecificStartWithStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/BackupFireBirdDB", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackupFireBirdDB(string DestFilename, string pAuthenticateKey, ref string errorMessage) {
            object[] results = this.Invoke("BackupFireBirdDB", new object[] {
                        DestFilename,
                        pAuthenticateKey,
                        errorMessage});
            errorMessage = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackupFireBirdDBAsync(string DestFilename, string pAuthenticateKey, string errorMessage) {
            this.BackupFireBirdDBAsync(DestFilename, pAuthenticateKey, errorMessage, null);
        }
        
        /// <remarks/>
        public void BackupFireBirdDBAsync(string DestFilename, string pAuthenticateKey, string errorMessage, object userState) {
            if ((this.BackupFireBirdDBOperationCompleted == null)) {
                this.BackupFireBirdDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupFireBirdDBOperationCompleted);
            }
            this.InvokeAsync("BackupFireBirdDB", new object[] {
                        DestFilename,
                        pAuthenticateKey,
                        errorMessage}, this.BackupFireBirdDBOperationCompleted, userState);
        }
        
        private void OnBackupFireBirdDBOperationCompleted(object arg) {
            if ((this.BackupFireBirdDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupFireBirdDBCompleted(this, new BackupFireBirdDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/RunReportAsynchrono" +
            "us", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RunReportAsynchronous(string iReportDetails, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("RunReportAsynchronous", new object[] {
                        iReportDetails,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunReportAsynchronousAsync(string iReportDetails, string pAuthenticateKey, string oErrMsg) {
            this.RunReportAsynchronousAsync(iReportDetails, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void RunReportAsynchronousAsync(string iReportDetails, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.RunReportAsynchronousOperationCompleted == null)) {
                this.RunReportAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunReportAsynchronousOperationCompleted);
            }
            this.InvokeAsync("RunReportAsynchronous", new object[] {
                        iReportDetails,
                        pAuthenticateKey,
                        oErrMsg}, this.RunReportAsynchronousOperationCompleted, userState);
        }
        
        private void OnRunReportAsynchronousOperationCompleted(object arg) {
            if ((this.RunReportAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunReportAsynchronousCompleted(this, new RunReportAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/KeyMgr_EnsureCompli" +
            "anceWithCurrentKeyAsynchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void KeyMgr_EnsureComplianceWithCurrentKeyAsynchronous(string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("KeyMgr_EnsureComplianceWithCurrentKeyAsynchronous", new object[] {
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousAsync(string pAuthenticateKey, string oErrMsg) {
            this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousAsync(pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousAsync(string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted == null)) {
                this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted);
            }
            this.InvokeAsync("KeyMgr_EnsureComplianceWithCurrentKeyAsynchronous", new object[] {
                        pAuthenticateKey,
                        oErrMsg}, this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted, userState);
        }
        
        private void OnKeyMgr_EnsureComplianceWithCurrentKeyAsynchronousOperationCompleted(object arg) {
            if ((this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompleted(this, new KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteImportExport" +
            "DefinitionAsynchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteImportExportDefinitionAsynchronous(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, ref bool oCompleted, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteImportExportDefinitionAsynchronous", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg});
            oCompleted = ((bool)(results[0]));
            oErrMsg = ((string)(results[1]));
        }
        
        /// <remarks/>
        public void ExecuteImportExportDefinitionAsynchronousAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg) {
            this.ExecuteImportExportDefinitionAsynchronousAsync(iSerializedDefinition, iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, pExecutionStart, oCompleted, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteImportExportDefinitionAsynchronousAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg, object userState) {
            if ((this.ExecuteImportExportDefinitionAsynchronousOperationCompleted == null)) {
                this.ExecuteImportExportDefinitionAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteImportExportDefinitionAsynchronousOperationCompleted);
            }
            this.InvokeAsync("ExecuteImportExportDefinitionAsynchronous", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg}, this.ExecuteImportExportDefinitionAsynchronousOperationCompleted, userState);
        }
        
        private void OnExecuteImportExportDefinitionAsynchronousOperationCompleted(object arg) {
            if ((this.ExecuteImportExportDefinitionAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteImportExportDefinitionAsynchronousCompleted(this, new ExecuteImportExportDefinitionAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteImpExpDef_Re" +
            "turnSummaryAsynchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteImpExpDef_ReturnSummaryAsynchronous(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, ref bool oCompleted, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteImpExpDef_ReturnSummaryAsynchronous", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg});
            oCompleted = ((bool)(results[1]));
            oErrMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteImpExpDef_ReturnSummaryAsynchronousAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg) {
            this.ExecuteImpExpDef_ReturnSummaryAsynchronousAsync(iSerializedDefinition, iOfficerName, iOfficerID, iUser_Session_KeyStr, pAuthenticateKey, pExecutionStart, oCompleted, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteImpExpDef_ReturnSummaryAsynchronousAsync(string iSerializedDefinition, string iOfficerName, string iOfficerID, string iUser_Session_KeyStr, string pAuthenticateKey, System.DateTime pExecutionStart, bool oCompleted, string oErrMsg, object userState) {
            if ((this.ExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted == null)) {
                this.ExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted);
            }
            this.InvokeAsync("ExecuteImpExpDef_ReturnSummaryAsynchronous", new object[] {
                        iSerializedDefinition,
                        iOfficerName,
                        iOfficerID,
                        iUser_Session_KeyStr,
                        pAuthenticateKey,
                        pExecutionStart,
                        oCompleted,
                        oErrMsg}, this.ExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted, userState);
        }
        
        private void OnExecuteImpExpDef_ReturnSummaryAsynchronousOperationCompleted(object arg) {
            if ((this.ExecuteImpExpDef_ReturnSummaryAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteImpExpDef_ReturnSummaryAsynchronousCompleted(this, new ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ExecuteFTPSessionAs" +
            "ynchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecuteFTPSessionAsynchronous(string iSerializedFTPSession, string pAuthenticateKey, ref string oErrMsg) {
            object[] results = this.Invoke("ExecuteFTPSessionAsynchronous", new object[] {
                        iSerializedFTPSession,
                        pAuthenticateKey,
                        oErrMsg});
            oErrMsg = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteFTPSessionAsynchronousAsync(string iSerializedFTPSession, string pAuthenticateKey, string oErrMsg) {
            this.ExecuteFTPSessionAsynchronousAsync(iSerializedFTPSession, pAuthenticateKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void ExecuteFTPSessionAsynchronousAsync(string iSerializedFTPSession, string pAuthenticateKey, string oErrMsg, object userState) {
            if ((this.ExecuteFTPSessionAsynchronousOperationCompleted == null)) {
                this.ExecuteFTPSessionAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteFTPSessionAsynchronousOperationCompleted);
            }
            this.InvokeAsync("ExecuteFTPSessionAsynchronous", new object[] {
                        iSerializedFTPSession,
                        pAuthenticateKey,
                        oErrMsg}, this.ExecuteFTPSessionAsynchronousOperationCompleted, userState);
        }
        
        private void OnExecuteFTPSessionAsynchronousOperationCompleted(object arg) {
            if ((this.ExecuteFTPSessionAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteFTPSessionAsynchronousCompleted(this, new ExecuteFTPSessionAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/ReadInNSWXMLFilesAs" +
            "ynchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReadInNSWXMLFilesAsynchronous(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey) {
            this.Invoke("ReadInNSWXMLFilesAsynchronous", new object[] {
                        pOverride,
                        pAuthenticateKey,
                        iCurrentUserSessionKey});
        }
        
        /// <remarks/>
        public void ReadInNSWXMLFilesAsynchronousAsync(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey) {
            this.ReadInNSWXMLFilesAsynchronousAsync(pOverride, pAuthenticateKey, iCurrentUserSessionKey, null);
        }
        
        /// <remarks/>
        public void ReadInNSWXMLFilesAsynchronousAsync(bool pOverride, string pAuthenticateKey, string iCurrentUserSessionKey, object userState) {
            if ((this.ReadInNSWXMLFilesAsynchronousOperationCompleted == null)) {
                this.ReadInNSWXMLFilesAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadInNSWXMLFilesAsynchronousOperationCompleted);
            }
            this.InvokeAsync("ReadInNSWXMLFilesAsynchronous", new object[] {
                        pOverride,
                        pAuthenticateKey,
                        iCurrentUserSessionKey}, this.ReadInNSWXMLFilesAsynchronousOperationCompleted, userState);
        }
        
        private void OnReadInNSWXMLFilesAsynchronousOperationCompleted(object arg) {
            if ((this.ReadInNSWXMLFilesAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadInNSWXMLFilesAsynchronousCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.autocite.com/autoissue_dotnet/autoissuehostservice/TransferNSWFilesAsy" +
            "nchronous", RequestNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", ResponseNamespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransferNSWFilesAsynchronous(string pAuthenticateKey, string iCurrentUserSessionKey, ref string oErrMsg) {
            object[] results = this.Invoke("TransferNSWFilesAsynchronous", new object[] {
                        pAuthenticateKey,
                        iCurrentUserSessionKey,
                        oErrMsg});
            oErrMsg = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferNSWFilesAsynchronousAsync(string pAuthenticateKey, string iCurrentUserSessionKey, string oErrMsg) {
            this.TransferNSWFilesAsynchronousAsync(pAuthenticateKey, iCurrentUserSessionKey, oErrMsg, null);
        }
        
        /// <remarks/>
        public void TransferNSWFilesAsynchronousAsync(string pAuthenticateKey, string iCurrentUserSessionKey, string oErrMsg, object userState) {
            if ((this.TransferNSWFilesAsynchronousOperationCompleted == null)) {
                this.TransferNSWFilesAsynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferNSWFilesAsynchronousOperationCompleted);
            }
            this.InvokeAsync("TransferNSWFilesAsynchronous", new object[] {
                        pAuthenticateKey,
                        iCurrentUserSessionKey,
                        oErrMsg}, this.TransferNSWFilesAsynchronousOperationCompleted, userState);
        }
        
        private void OnTransferNSWFilesAsynchronousOperationCompleted(object arg) {
            if ((this.TransferNSWFilesAsynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferNSWFilesAsynchronousCompleted(this, new TransferNSWFilesAsynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ListFileType {
        
        /// <remarks/>
        DataFile,
        
        /// <remarks/>
        EditFile,
        
        /// <remarks/>
        CompositeFile,
        
        /// <remarks/>
        PopularFile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum HardwareType {
        
        /// <remarks/>
        S3,
        
        /// <remarks/>
        S4,
        
        /// <remarks/>
        CE,
        
        /// <remarks/>
        PC,
        
        /// <remarks/>
        C3,
        
        /// <remarks/>
        C4,
        
        /// <remarks/>
        X3,
        
        /// <remarks/>
        C88,
        
        /// <remarks/>
        SY,
        
        /// <remarks/>
        Y2,
        
        /// <remarks/>
        I3,
        
        /// <remarks/>
        Y3,
        
        /// <remarks/>
        Y4,
        
        /// <remarks/>
        I5,
        
        /// <remarks/>
        P1,
        
        /// <remarks/>
        Y5,
        
        /// <remarks/>
        I7,
        
        /// <remarks/>
        C9,
        
        /// <remarks/>
        UNK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum LockType {
        
        /// <remarks/>
        PreventLock,
        
        /// <remarks/>
        FullLock,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public partial class SecurityPolicy {
        
        private int maxTriesField;
        
        private int retryDelayField;
        
        private int reminderDelayField;
        
        private int pwdLifetimeField;
        
        /// <remarks/>
        public int MaxTries {
            get {
                return this.maxTriesField;
            }
            set {
                this.maxTriesField = value;
            }
        }
        
        /// <remarks/>
        public int RetryDelay {
            get {
                return this.retryDelayField;
            }
            set {
                this.retryDelayField = value;
            }
        }
        
        /// <remarks/>
        public int ReminderDelay {
            get {
                return this.reminderDelayField;
            }
            set {
                this.reminderDelayField = value;
            }
        }
        
        /// <remarks/>
        public int PwdLifetime {
            get {
                return this.pwdLifetimeField;
            }
            set {
                this.pwdLifetimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public partial class TUnitSerialNoRec {
        
        private string serialNoField;
        
        private ESerialStatus statusField;
        
        private System.DateTime lastUnloadDateField;
        
        private string assignedCfgField;
        
        private string platformField;
        
        private string commMediumField;
        
        private string statusTxtField;
        
        private string cfgInDeviceField;
        
        private string pDAModelField;
        
        private string pDACommProtocolField;
        
        private long assigned_Sub_Cfg_KeyField;
        
        private long sub_Cfg_Key_In_DeviceField;
        
        private string assigned_MeterTrax_CfgField;
        
        private string meterTrax_Cfg_In_DeviceField;
        
        private string privateAPNNameField;
        
        private string dUNLogin_nField;
        
        private string dUNLogin_pField;
        
        private string meterProviderNameOverrideField;
        
        private string parkeonUserNameField;
        
        private string parkeonPasswordField;
        
        private string parkNOWUserNameField;
        
        private string parkNOWPasswordField;
        
        private string dPTStallTokenField;
        
        /// <remarks/>
        public string SerialNo {
            get {
                return this.serialNoField;
            }
            set {
                this.serialNoField = value;
            }
        }
        
        /// <remarks/>
        public ESerialStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUnloadDate {
            get {
                return this.lastUnloadDateField;
            }
            set {
                this.lastUnloadDateField = value;
            }
        }
        
        /// <remarks/>
        public string AssignedCfg {
            get {
                return this.assignedCfgField;
            }
            set {
                this.assignedCfgField = value;
            }
        }
        
        /// <remarks/>
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
        
        /// <remarks/>
        public string CommMedium {
            get {
                return this.commMediumField;
            }
            set {
                this.commMediumField = value;
            }
        }
        
        /// <remarks/>
        public string StatusTxt {
            get {
                return this.statusTxtField;
            }
            set {
                this.statusTxtField = value;
            }
        }
        
        /// <remarks/>
        public string CfgInDevice {
            get {
                return this.cfgInDeviceField;
            }
            set {
                this.cfgInDeviceField = value;
            }
        }
        
        /// <remarks/>
        public string PDAModel {
            get {
                return this.pDAModelField;
            }
            set {
                this.pDAModelField = value;
            }
        }
        
        /// <remarks/>
        public string PDACommProtocol {
            get {
                return this.pDACommProtocolField;
            }
            set {
                this.pDACommProtocolField = value;
            }
        }
        
        /// <remarks/>
        public long Assigned_Sub_Cfg_Key {
            get {
                return this.assigned_Sub_Cfg_KeyField;
            }
            set {
                this.assigned_Sub_Cfg_KeyField = value;
            }
        }
        
        /// <remarks/>
        public long Sub_Cfg_Key_In_Device {
            get {
                return this.sub_Cfg_Key_In_DeviceField;
            }
            set {
                this.sub_Cfg_Key_In_DeviceField = value;
            }
        }
        
        /// <remarks/>
        public string Assigned_MeterTrax_Cfg {
            get {
                return this.assigned_MeterTrax_CfgField;
            }
            set {
                this.assigned_MeterTrax_CfgField = value;
            }
        }
        
        /// <remarks/>
        public string MeterTrax_Cfg_In_Device {
            get {
                return this.meterTrax_Cfg_In_DeviceField;
            }
            set {
                this.meterTrax_Cfg_In_DeviceField = value;
            }
        }
        
        /// <remarks/>
        public string PrivateAPNName {
            get {
                return this.privateAPNNameField;
            }
            set {
                this.privateAPNNameField = value;
            }
        }
        
        /// <remarks/>
        public string DUNLogin_n {
            get {
                return this.dUNLogin_nField;
            }
            set {
                this.dUNLogin_nField = value;
            }
        }
        
        /// <remarks/>
        public string DUNLogin_p {
            get {
                return this.dUNLogin_pField;
            }
            set {
                this.dUNLogin_pField = value;
            }
        }
        
        /// <remarks/>
        public string MeterProviderNameOverride {
            get {
                return this.meterProviderNameOverrideField;
            }
            set {
                this.meterProviderNameOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string ParkeonUserName {
            get {
                return this.parkeonUserNameField;
            }
            set {
                this.parkeonUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParkeonPassword {
            get {
                return this.parkeonPasswordField;
            }
            set {
                this.parkeonPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string ParkNOWUserName {
            get {
                return this.parkNOWUserNameField;
            }
            set {
                this.parkNOWUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParkNOWPassword {
            get {
                return this.parkNOWPasswordField;
            }
            set {
                this.parkNOWPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string DPTStallToken {
            get {
                return this.dPTStallTokenField;
            }
            set {
                this.dPTStallTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ESerialStatus {
        
        /// <remarks/>
        InService,
        
        /// <remarks/>
        PendingRemoval,
        
        /// <remarks/>
        OutOfService,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum UserStructEncryptionType {
        
        /// <remarks/>
        encSaltedHash,
        
        /// <remarks/>
        encZLIBCompression,
        
        /// <remarks/>
        encScrambled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum SessionLockSearchType {
        
        /// <remarks/>
        OpenSessions,
        
        /// <remarks/>
        OpenLocks,
        
        /// <remarks/>
        Parameters,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum DefaultRole {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AutoTrax,
        
        /// <remarks/>
        AutoIssue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum CiteRangeActionType {
        
        /// <remarks/>
        craDeleteUnit,
        
        /// <remarks/>
        craFreezeUnit,
        
        /// <remarks/>
        craThawUnit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ScopeType {
        
        /// <remarks/>
        Global,
        
        /// <remarks/>
        Computer,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        NA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ItemCategory {
        
        /// <remarks/>
        Communications,
        
        /// <remarks/>
        GlobalSettings,
        
        /// <remarks/>
        PopularList,
        
        /// <remarks/>
        LocalSettings,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ItemDataType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Date,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.autocite.com/autoissue_dotnet/autoissuehostservice")]
    public enum ListPopularListType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        HostMaintained,
        
        /// <remarks/>
        DeviceMaintained,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RestoreFireBirdDBCompletedEventHandler(object sender, RestoreFireBirdDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreFireBirdDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreFireBirdDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFireBirdVerboseTextCompletedEventHandler(object sender, GetFireBirdVerboseTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFireBirdVerboseTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFireBirdVerboseTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetListFilesCompletedEventHandler(object sender, GetListFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetListFilesAsDataSetCompletedEventHandler(object sender, GetListFilesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListFilesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListFilesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOneHotSheetFileAsDataSetCompletedEventHandler(object sender, GetOneHotSheetFileAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneHotSheetFileAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneHotSheetFileAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BuildDataRelationsCompletedEventHandler(object sender, BuildDataRelationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BuildDataRelationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BuildDataRelationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginListEditCompletedEventHandler(object sender, BeginListEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginListEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginListEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndListEditCompletedEventHandler(object sender, EndListEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndListEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndListEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelListEditCompletedEventHandler(object sender, CancelListEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelListEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelListEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginHotSheetEditCompletedEventHandler(object sender, BeginHotSheetEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginHotSheetEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginHotSheetEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndHotSheetEditCompletedEventHandler(object sender, EndHotSheetEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndHotSheetEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndHotSheetEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelHotSheetEditCompletedEventHandler(object sender, CancelHotSheetEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelHotSheetEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelHotSheetEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllFileNamesForTableCompletedEventHandler(object sender, GetAllFileNamesForTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileNamesForTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileNamesForTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateMTX_LocationCompletedEventHandler(object sender, UpdateMTX_LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMTX_LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMTX_LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetInventoryGeoCodeCompletedEventHandler(object sender, GetInventoryGeoCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryGeoCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryGeoCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEffectiveDateCompletedEventHandler(object sender, GetEffectiveDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEffectiveDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEffectiveDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCompositeDateCompletedEventHandler(object sender, GetCompositeDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCompositeFileInformationCompletedEventHandler(object sender, GetCompositeFileInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositeFileInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositeFileInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCompositeFileInformationForHHPlatformCompletedEventHandler(object sender, GetCompositeFileInformationForHHPlatformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositeFileInformationForHHPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositeFileInformationForHHPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RefreshCompositeFilesCompletedEventHandler(object sender, RefreshCompositeFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshCompositeFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshCompositeFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RefreshCompositeFiles2CompletedEventHandler(object sender, RefreshCompositeFiles2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshCompositeFiles2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshCompositeFiles2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadACompositeFileChunkCompletedEventHandler(object sender, DownloadACompositeFileChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadACompositeFileChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadACompositeFileChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MakeCompositeListsCompletedEventHandler(object sender, MakeCompositeListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeCompositeListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeCompositeListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveEDTFileCompletedEventHandler(object sender, RemoveEDTFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveEDTFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveEDTFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveHotSheetFileCompletedEventHandler(object sender, RemoveHotSheetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveHotSheetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveHotSheetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddHotSheetFileCompletedEventHandler(object sender, AddHotSheetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHotSheetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHotSheetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemovePopularFileCompletedEventHandler(object sender, RemovePopularFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePopularFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePopularFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTablesThatBelongToSubConfigurationCompletedEventHandler(object sender, GetTablesThatBelongToSubConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTablesThatBelongToSubConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTablesThatBelongToSubConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oSubConfigName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRegistryItemsFileDataCompletedEventHandler(object sender, GetRegistryItemsFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistryItemsFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistryItemsFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteRegistryItemsFileDataCompletedEventHandler(object sender, WriteRegistryItemsFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteRegistryItemsFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteRegistryItemsFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSubConfigurationListCompletedEventHandler(object sender, GetSubConfigurationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubConfigurationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubConfigurationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSubConfigurationCompletedEventHandler(object sender, GetSubConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveSubConfigurationCompletedEventHandler(object sender, SaveSubConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSubConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSubConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginSubConfigurationEditCompletedEventHandler(object sender, BeginSubConfigurationEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginSubConfigurationEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginSubConfigurationEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndSubConfigurationEditCompletedEventHandler(object sender, EndSubConfigurationEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndSubConfigurationEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndSubConfigurationEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelSubConfigurationEditCompletedEventHandler(object sender, CancelSubConfigurationEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSubConfigurationEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSubConfigurationEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteSubConfigurationCompletedEventHandler(object sender, DeleteSubConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSubConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSubConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RenameSubConfigurationCompletedEventHandler(object sender, RenameSubConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameSubConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameSubConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PlaceLockCompletedEventHandler(object sender, PlaceLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveLockCompletedEventHandler(object sender, RemoveLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCompositeListFileDateTimeCompletedEventHandler(object sender, GetCompositeListFileDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompositeListFileDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompositeListFileDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryIssuanceRecord_BasicCompletedEventHandler(object sender, QueryIssuanceRecord_BasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryIssuanceRecord_BasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryIssuanceRecord_BasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryIssuanceRecord_ExtendedCompletedEventHandler(object sender, QueryIssuanceRecord_ExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryIssuanceRecord_ExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryIssuanceRecord_ExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventHandler(object sender, QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryIssuanceRecord_SupplementalMultimediaAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LogEventCompletedEventHandler(object sender, LogEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LogEvent_MultipleCompletedEventHandler(object sender, LogEvent_MultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogEvent_MultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogEvent_MultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GarbageCollectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportObjectCompletedEventHandler(object sender, GetReportObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMTXReportObjectCompletedEventHandler(object sender, GetMTXReportObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMTXReportObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMTXReportObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveReportRunParametersCompletedEventHandler(object sender, SaveReportRunParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveReportRunParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveReportRunParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginReportParameterEditCompletedEventHandler(object sender, BeginReportParameterEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginReportParameterEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginReportParameterEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndReportParameterEditCompletedEventHandler(object sender, EndReportParameterEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndReportParameterEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndReportParameterEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelReportParameterEditCompletedEventHandler(object sender, CancelReportParameterEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelReportParameterEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelReportParameterEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RunReportCompletedEventHandler(object sender, RunReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportFileInfoCompletedEventHandler(object sender, GetReportFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportFileDataCompletedEventHandler(object sender, GetReportFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportFileDirectoryInfoCompletedEventHandler(object sender, GetReportFileDirectoryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportFileDirectoryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportFileDirectoryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExportDefinitionsNameAndNumberCompletedEventHandler(object sender, GetExportDefinitionsNameAndNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExportDefinitionsNameAndNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExportDefinitionsNameAndNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveOldReportsCompletedEventHandler(object sender, RemoveOldReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOldReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOldReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExeFileListForClientCompletedEventHandler(object sender, GetExeFileListForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExeFileListForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExeFileListForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExeFileInfoCompletedEventHandler(object sender, GetExeFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExeFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExeFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExeFileDataCompletedEventHandler(object sender, GetExeFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExeFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExeFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnumLogicalDrivesCompletedEventHandler(object sender, EnumLogicalDrivesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumLogicalDrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumLogicalDrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnumDirectoriesCompletedEventHandler(object sender, EnumDirectoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumDirectoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumDirectoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EnumFilesCompletedEventHandler(object sender, EnumFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddTextToGenericLogFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateParkeonMeterClusterListCompletedEventHandler(object sender, UpdateParkeonMeterClusterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateParkeonMeterClusterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateParkeonMeterClusterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVerboseParkNOWProgressTextCompletedEventHandler(object sender, GetVerboseParkNOWProgressTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVerboseParkNOWProgressTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVerboseParkNOWProgressTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateParkNOWMeterClusterListCompletedEventHandler(object sender, UpdateParkNOWMeterClusterListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateParkNOWMeterClusterListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateParkNOWMeterClusterListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePayByCellZoneListCompletedEventHandler(object sender, UpdatePayByCellZoneListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePayByCellZoneListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePayByCellZoneListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdatePayByCellZoneList_PassportVendorCompletedEventHandler(object sender, UpdatePayByCellZoneList_PassportVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePayByCellZoneList_PassportVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePayByCellZoneList_PassportVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CloseOutCurrentUserFromDatabaseCompletedEventHandler(object sender, CloseOutCurrentUserFromDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseOutCurrentUserFromDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseOutCurrentUserFromDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AutoLoginAsMasterUserCompletedEventHandler(object sender, AutoLoginAsMasterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoLoginAsMasterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoLoginAsMasterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, GetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUsersWithHandheldRightsCompletedEventHandler(object sender, GetUsersWithHandheldRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersWithHandheldRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersWithHandheldRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRolesCompletedEventHandler(object sender, GetAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRightsCompletedEventHandler(object sender, GetAllRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertOrUpdateDataCompletedEventHandler(object sender, InsertOrUpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrUpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrUpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EffectiveUserRightsCompletedEventHandler(object sender, EffectiveUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EffectiveUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EffectiveUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EffectiveRoleRightsCompletedEventHandler(object sender, EffectiveRoleRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EffectiveRoleRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EffectiveRoleRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetRightsForRoleCompletedEventHandler(object sender, ApiGetRightsForRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetRightsForRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetRightsForRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiReplaceRightsForRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetAllRolesCompletedEventHandler(object sender, ApiGetAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetRoleCompletedEventHandler(object sender, ApiGetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetRoleByNameCompletedEventHandler(object sender, ApiGetRoleByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetRoleByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetRoleByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiAddRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiSaveRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiDeleteRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetRolesForUserCompletedEventHandler(object sender, ApiGetRolesForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetRolesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetRolesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiReplaceRolesForUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetAllUsersCompletedEventHandler(object sender, ApiGetAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetUserCompletedEventHandler(object sender, ApiGetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetUserByUserNameCompletedEventHandler(object sender, ApiGetUserByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiAddUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiSaveUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiDeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetCitationImageCompletedEventHandler(object sender, ApiGetCitationImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetCitationImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetCitationImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetCitationDetailsCompletedEventHandler(object sender, ApiGetCitationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetCitationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetCitationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetCitationNumberFormatCompletedEventHandler(object sender, ApiGetCitationNumberFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetCitationNumberFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetCitationNumberFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiPemsDBPushTestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PushNoteRecordsDataToPEMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetAllListGroupNamesCompletedEventHandler(object sender, ApiGetAllListGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetAllListGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetAllListGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiGetListGroupDataSetCompletedEventHandler(object sender, ApiGetListGroupDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiGetListGroupDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApiGetListGroupDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ApiSaveListGroupDataSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeRoleRightsCompletedEventHandler(object sender, ChangeRoleRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeRoleRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeRoleRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeUserRightsCompletedEventHandler(object sender, ChangeUserRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserKeyForNameCompletedEventHandler(object sender, GetUserKeyForNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserKeyForNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserKeyForNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleKeyForNameCompletedEventHandler(object sender, GetRoleKeyForNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleKeyForNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleKeyForNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeUserRolesCompletedEventHandler(object sender, ChangeUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserRolesCompletedEventHandler(object sender, GetUserRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteRoleCompletedEventHandler(object sender, DeleteRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterAccessRightCompletedEventHandler(object sender, RegisterAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterAccessRightsCompletedEventHandler(object sender, RegisterAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteAccessRightCompletedEventHandler(object sender, DeleteAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RenameAccessRightCompletedEventHandler(object sender, RenameAccessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameAccessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameAccessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessRightKeyCompletedEventHandler(object sender, GetAccessRightKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessRightKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessRightKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddAccessRightToRoleCompletedEventHandler(object sender, AddAccessRightToRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccessRightToRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccessRightToRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddAccessRightToUserCompletedEventHandler(object sender, AddAccessRightToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAccessRightToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAccessRightToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSecurityPolicyCompletedEventHandler(object sender, GetSecurityPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecurityPolicy Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecurityPolicy)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetSecurityPolicyCompletedEventHandler(object sender, SetSecurityPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSecurityPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSecurityPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateHandheldUserStructFileCompletedEventHandler(object sender, GenerateHandheldUserStructFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateHandheldUserStructFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateHandheldUserStructFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GenerateHandheldUserStructFile_ExCompletedEventHandler(object sender, GenerateHandheldUserStructFile_ExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateHandheldUserStructFile_ExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateHandheldUserStructFile_ExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string iDestFileName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserSessionsCompletedEventHandler(object sender, GetUserSessionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSessionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSessionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOpenLocksCompletedEventHandler(object sender, GetOpenLocksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenLocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenLocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSessionUserNamesCompletedEventHandler(object sender, GetSessionUserNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionUserNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionUserNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEventLogDataCompletedEventHandler(object sender, GetEventLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BackupSecurityTablesCompletedEventHandler(object sender, BackupSecurityTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupSecurityTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupSecurityTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RestoreSecurityTablesCompletedEventHandler(object sender, RestoreSecurityTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreSecurityTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreSecurityTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddUserWithDefaultRoleCompletedEventHandler(object sender, AddUserWithDefaultRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserWithDefaultRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserWithDefaultRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void KeyMgr_GetEncryptionConfigDataSetCompletedEventHandler(object sender, KeyMgr_GetEncryptionConfigDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyMgr_GetEncryptionConfigDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyMgr_GetEncryptionConfigDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void KeyMgr_AddNewEncryptionKeyCompletedEventHandler(object sender, KeyMgr_AddNewEncryptionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyMgr_AddNewEncryptionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyMgr_AddNewEncryptionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventHandler(object sender, KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyMgr_EnsureComplianceWithCurrentKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void KeyMgr_GetVerboseProgressTextCompletedEventHandler(object sender, KeyMgr_GetVerboseProgressTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyMgr_GetVerboseProgressTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyMgr_GetVerboseProgressTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSerializedClientDefCompletedEventHandler(object sender, GetSerializedClientDefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerializedClientDefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerializedClientDefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetClientDefFileInfoCompletedEventHandler(object sender, GetClientDefFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientDefFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientDefFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetClientDefFileDataCompletedEventHandler(object sender, GetClientDefFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientDefFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientDefFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ValidateAllocationRangeCompletedEventHandler(object sender, ValidateAllocationRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAllocationRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAllocationRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteAllocToTableCompletedEventHandler(object sender, WriteAllocToTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteAllocToTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteAllocToTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportAllocationCompletedEventHandler(object sender, ImportAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSerialNoInfoCompletedEventHandler(object sender, GetSerialNoInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSerialNoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSerialNoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet iDataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommSerialNoInfoCompletedEventHandler(object sender, GetCommSerialNoInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommSerialNoInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommSerialNoInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertUpdateUnitIntoTableCompletedEventHandler(object sender, InsertUpdateUnitIntoTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUpdateUnitIntoTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUpdateUnitIntoTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSequenceNamesForCustomerCfgCompletedEventHandler(object sender, GetSequenceNamesForCustomerCfgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSequenceNamesForCustomerCfgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSequenceNamesForCustomerCfgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewUnitBooksCompletedEventHandler(object sender, GetNewUnitBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewUnitBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewUnitBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendCurrentUnitBooksCompletedEventHandler(object sender, SendCurrentUnitBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCurrentUnitBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCurrentUnitBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RecordUnloadedUnitBooksInDatabaseCompletedEventHandler(object sender, RecordUnloadedUnitBooksInDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordUnloadedUnitBooksInDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecordUnloadedUnitBooksInDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllSerialNosCompletedEventHandler(object sender, GetAllSerialNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSerialNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSerialNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllAssignedBooksCompletedEventHandler(object sender, GetAllAssignedBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAssignedBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAssignedBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AllocationLeftCompletedEventHandler(object sender, AllocationLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocationLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocationLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long BooksLeft {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool MinBookWarning {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AllocationBooksLeftCompletedEventHandler(object sender, AllocationBooksLeftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocationBooksLeftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocationBooksLeftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool MinBookWarning {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitCfgInDeviceCompletedEventHandler(object sender, SetUnitCfgInDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitCfgInDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitCfgInDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommLogDataCompletedEventHandler(object sender, GetCommLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PutAcwRangeFileInTableCompletedEventHandler(object sender, PutAcwRangeFileInTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutAcwRangeFileInTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutAcwRangeFileInTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitStatusCompletedEventHandler(object sender, SetUnitStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitStatusAtomicCompletedEventHandler(object sender, SetUnitStatusAtomicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitStatusAtomicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitStatusAtomicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitLastCommDateCompletedEventHandler(object sender, SetUnitLastCommDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitLastCommDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitLastCommDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteFreezeOrThawUnitCompletedEventHandler(object sender, DeleteFreezeOrThawUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFreezeOrThawUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFreezeOrThawUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUnassignedSerialNoListCompletedEventHandler(object sender, GetUnassignedSerialNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnassignedSerialNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnassignedSerialNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllUnitBooksCompletedEventHandler(object sender, GetAllUnitBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnitBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnitBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateBookLastIssuedCompletedEventHandler(object sender, UpdateBookLastIssuedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBookLastIssuedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBookLastIssuedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitSubCfgInDeviceCompletedEventHandler(object sender, SetUnitSubCfgInDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitSubCfgInDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitSubCfgInDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetUnitMeterTraxCfgInDeviceCompletedEventHandler(object sender, SetUnitMeterTraxCfgInDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUnitMeterTraxCfgInDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUnitMeterTraxCfgInDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUnitsAssignedToSubConfigCompletedEventHandler(object sender, GetUnitsAssignedToSubConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitsAssignedToSubConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitsAssignedToSubConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MarkAllocAndSequenceAsDeletedCompletedEventHandler(object sender, MarkAllocAndSequenceAsDeletedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkAllocAndSequenceAsDeletedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkAllocAndSequenceAsDeletedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AssignNewSubConfigToUnitsCompletedEventHandler(object sender, AssignNewSubConfigToUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignNewSubConfigToUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignNewSubConfigToUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteAllocationsAndSequencesCompletedEventHandler(object sender, DeleteAllocationsAndSequencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllocationsAndSequencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllocationsAndSequencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertCommLogIntoTableCompletedEventHandler(object sender, InsertCommLogIntoTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCommLogIntoTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCommLogIntoTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMeterTraxFileBytesCompletedEventHandler(object sender, GetMeterTraxFileBytesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterTraxFileBytesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterTraxFileBytesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDefinitionListCompletedEventHandler(object sender, GetDefinitionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefinitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefinitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveImportExportDefinitionCompletedEventHandler(object sender, SaveImportExportDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImportExportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImportExportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveImportExportDefinitionCompletedEventHandler(object sender, RetrieveImportExportDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveImportExportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveImportExportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginDefinitionEditCompletedEventHandler(object sender, BeginDefinitionEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginDefinitionEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginDefinitionEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndDefinitionEditCompletedEventHandler(object sender, EndDefinitionEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndDefinitionEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndDefinitionEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelDefinitionEditCompletedEventHandler(object sender, CancelDefinitionEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDefinitionEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDefinitionEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteImportExportDefinitionCompletedEventHandler(object sender, DeleteImportExportDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImportExportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImportExportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveImportExportDelimitersCompletedEventHandler(object sender, SaveImportExportDelimitersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImportExportDelimitersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImportExportDelimitersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveImportExportDelimitersCompletedEventHandler(object sender, RetrieveImportExportDelimitersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveImportExportDelimitersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveImportExportDelimitersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveImportExportDefinitionHistoryCompletedEventHandler(object sender, RetrieveImportExportDefinitionHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveImportExportDefinitionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveImportExportDefinitionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveImportExportExecuteHistoryCompletedEventHandler(object sender, RetrieveImportExportExecuteHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveImportExportExecuteHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveImportExportExecuteHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveImportExportSummaryCompletedEventHandler(object sender, RetrieveImportExportSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveImportExportSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveImportExportSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateWarningsTrackingExportsCompletedEventHandler(object sender, CreateWarningsTrackingExportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWarningsTrackingExportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWarningsTrackingExportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteImportExportDefinitionCompletedEventHandler(object sender, ExecuteImportExportDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteImportExportDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteImportExportDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool oCompleted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteImpExpDef_ReturnSummaryCompletedEventHandler(object sender, ExecuteImpExpDef_ReturnSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteImpExpDef_ReturnSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteImpExpDef_ReturnSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool oCompleted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PrepareForDefinitionRunCompletedEventHandler(object sender, PrepareForDefinitionRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForDefinitionRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForDefinitionRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long iDefinitionFileSize {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.DateTime iDefinitionFileDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool oTargetFileExists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelDefinitionRunCompletedEventHandler(object sender, CancelDefinitionRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDefinitionRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDefinitionRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteExportToByteArrayCompletedEventHandler(object sender, ExecuteExportToByteArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteExportToByteArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteExportToByteArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImportExportFileInfoCompletedEventHandler(object sender, GetImportExportFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportExportFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportExportFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImportExportFileDataCompletedEventHandler(object sender, GetImportExportFileDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportExportFileDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportExportFileDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteFTPSessionCompletedEventHandler(object sender, ExecuteFTPSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteFTPSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteFTPSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteExternalExeCompletedEventHandler(object sender, ExecuteExternalExeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteExternalExeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteExternalExeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateGeoCodeInformationForTableCompletedEventHandler(object sender, UpdateGeoCodeInformationForTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGeoCodeInformationForTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGeoCodeInformationForTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RetrieveCourtObjectsAStringCompletedEventHandler(object sender, RetrieveCourtObjectsAStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveCourtObjectsAStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveCourtObjectsAStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveCourtObjectsFromStringCompletedEventHandler(object sender, SaveCourtObjectsFromStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCourtObjectsFromStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCourtObjectsFromStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void WriteOutCourtDateListCompletedEventHandler(object sender, WriteOutCourtDateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteOutCourtDateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteOutCourtDateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadInNSWXMLFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void IsNSWClientCompletedEventHandler(object sender, IsNSWClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsNSWClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsNSWClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void TransferNSWFilesCompletedEventHandler(object sender, TransferNSWFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferNSWFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferNSWFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNSWFileTransferVerboseOutputCompletedEventHandler(object sender, GetNSWFileTransferVerboseOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNSWFileTransferVerboseOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNSWFileTransferVerboseOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTaskGroupListCompletedEventHandler(object sender, GetTaskGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveTaskGroupCompletedEventHandler(object sender, SaveTaskGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTaskGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTaskGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTaskGroupCompletedEventHandler(object sender, GetTaskGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginTaskGroupEditCompletedEventHandler(object sender, BeginTaskGroupEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginTaskGroupEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginTaskGroupEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndTaskGroupEditCompletedEventHandler(object sender, EndTaskGroupEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndTaskGroupEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndTaskGroupEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelTaskGroupEditCompletedEventHandler(object sender, CancelTaskGroupEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTaskGroupEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTaskGroupEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteTaskGroupCompletedEventHandler(object sender, DeleteTaskGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScheduleRowVersionListCompletedEventHandler(object sender, GetScheduleRowVersionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleRowVersionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleRowVersionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScheduleListCompletedEventHandler(object sender, GetScheduleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RefreshScheduleListCompletedEventHandler(object sender, RefreshScheduleListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshScheduleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshScheduleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveScheduleCompletedEventHandler(object sender, SaveScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int oScheduleKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int oTaskKey {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScheduleCompletedEventHandler(object sender, GetScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetScheduleHistoryCompletedEventHandler(object sender, GetScheduleHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginScheduleRunCompletedEventHandler(object sender, BeginScheduleRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginScheduleRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginScheduleRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndScheduleRunCompletedEventHandler(object sender, EndScheduleRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndScheduleRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndScheduleRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BeginScheduleEditCompletedEventHandler(object sender, BeginScheduleEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginScheduleEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginScheduleEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndScheduleEditCompletedEventHandler(object sender, EndScheduleEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndScheduleEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndScheduleEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelScheduleEditCompletedEventHandler(object sender, CancelScheduleEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelScheduleEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelScheduleEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BackupTaskTablesCompletedEventHandler(object sender, BackupTaskTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupTaskTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupTaskTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RestoreTaskTablesCompletedEventHandler(object sender, RestoreTaskTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreTaskTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreTaskTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewCommSessionFolderCompletedEventHandler(object sender, GetNewCommSessionFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewCommSessionFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewCommSessionFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateFileInCommSessionCompletedEventHandler(object sender, CreateFileInCommSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFileInCommSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFileInCommSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetFileInCommSessionCompletedEventHandler(object sender, GetFileInCommSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInCommSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInCommSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportCommSessionDataCompletedEventHandler(object sender, ImportCommSessionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportCommSessionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportCommSessionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportCommSessionData_ExCompletedEventHandler(object sender, ImportCommSessionData_ExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportCommSessionData_ExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportCommSessionData_ExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oIgnoredErrors {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportHHEventLogCompletedEventHandler(object sender, ImportHHEventLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportHHEventLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportHHEventLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CompressHandheldFileCompletedEventHandler(object sender, CompressHandheldFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompressHandheldFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompressHandheldFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHHConfigFileInfoAsStringCompletedEventHandler(object sender, GetHHConfigFileInfoAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHHConfigFileInfoAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHHConfigFileInfoAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHHConfigFileCompletedEventHandler(object sender, GetHHConfigFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHHConfigFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHHConfigFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHHPlatformFileInfoAsStringCompletedEventHandler(object sender, GetHHPlatformFileInfoAsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHHPlatformFileInfoAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHHPlatformFileInfoAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHHPlatformFileCompletedEventHandler(object sender, GetHHPlatformFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHHPlatformFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHHPlatformFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetHHFileCompletedEventHandler(object sender, GetHHFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHHFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHHFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HandheldIsValidCompletedEventHandler(object sender, HandheldIsValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HandheldIsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HandheldIsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HandheldIsValidForParkeonCompletedEventHandler(object sender, HandheldIsValidForParkeonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HandheldIsValidForParkeonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HandheldIsValidForParkeonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oParkeonUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oParkeonPassword {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HandheldIsValidForParkNOWCompletedEventHandler(object sender, HandheldIsValidForParkNOWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HandheldIsValidForParkNOWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HandheldIsValidForParkNOWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oParkNOWUserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oParkNOWPassword {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HandheldIsValidForDPTCompletedEventHandler(object sender, HandheldIsValidForDPTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HandheldIsValidForDPTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HandheldIsValidForDPTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oDPTStallInfoToken {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SearchHotSheetCompletedEventHandler(object sender, SearchHotSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchHotSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchHotSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateWirelessSessionCompletedEventHandler(object sender, CreateWirelessSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWirelessSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWirelessSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PutWirelessFileCompletedEventHandler(object sender, PutWirelessFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutWirelessFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutWirelessFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EndWirelessSessionCompletedEventHandler(object sender, EndWirelessSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndWirelessSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndWirelessSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemoveOldSessionsCompletedEventHandler(object sender, RemoveOldSessionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveOldSessionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveOldSessionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSchemaForAutoCITEDataCompletedEventHandler(object sender, GetSchemaForAutoCITEDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchemaForAutoCITEDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchemaForAutoCITEDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProviderInformationCompletedEventHandler(object sender, GetProviderInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProviderInformationByNameCompletedEventHandler(object sender, GetProviderInformationByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderInformationByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderInformationByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProviderTypeCompletedEventHandler(object sender, GetProviderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConnectionNamesCompletedEventHandler(object sender, GetConnectionNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetActiveConnectionNameCompletedEventHandler(object sender, GetActiveConnectionNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveConnectionNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveConnectionNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetActiveConnectionCompletedEventHandler(object sender, SetActiveConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetActiveConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetActiveConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetConnectionStringByNameCompletedEventHandler(object sender, GetConnectionStringByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddConnectionStringCompletedEventHandler(object sender, AddConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetInstalledRootFilePathCompletedEventHandler(object sender, GetInstalledRootFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalledRootFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstalledRootFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetIssueApFilePathCompletedEventHandler(object sender, GetIssueApFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIssueApFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIssueApFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAgencyListFilePathCompletedEventHandler(object sender, GetAgencyListFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAgencyListFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAgencyListFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImpExpDefFilePathCompletedEventHandler(object sender, GetImpExpDefFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImpExpDefFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImpExpDefFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImportHistoryPathCompletedEventHandler(object sender, GetImportHistoryPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportHistoryPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportHistoryPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetExportHistoryPathCompletedEventHandler(object sender, GetExportHistoryPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExportHistoryPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExportHistoryPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReportParameterFilePathCompletedEventHandler(object sender, GetReportParameterFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportParameterFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportParameterFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommHandheldsPathCompletedEventHandler(object sender, GetCommHandheldsPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommHandheldsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommHandheldsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommPlatformsPathCompletedEventHandler(object sender, GetCommPlatformsPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommPlatformsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommPlatformsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommConfigurationsPathCompletedEventHandler(object sender, GetCommConfigurationsPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommConfigurationsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommConfigurationsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommSessionsPathCompletedEventHandler(object sender, GetCommSessionsPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommSessionsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommSessionsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCommWirelessSessionsPathCompletedEventHandler(object sender, GetCommWirelessSessionsPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommWirelessSessionsPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommWirelessSessionsPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserSuppliedListsRootPathCompletedEventHandler(object sender, GetUserSuppliedListsRootPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSuppliedListsRootPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSuppliedListsRootPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAcwRangePathCompletedEventHandler(object sender, GetAcwRangePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAcwRangePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAcwRangePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetXMLDownloadPathCompletedEventHandler(object sender, GetXMLDownloadPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXMLDownloadPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXMLDownloadPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ForceConfigEncryptionCompletedEventHandler(object sender, ForceConfigEncryptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceConfigEncryptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceConfigEncryptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllConfigurationItemsCompletedEventHandler(object sender, GetAllConfigurationItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllConfigurationItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllConfigurationItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetAllConfigurationItemsCompletedEventHandler(object sender, SetAllConfigurationItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAllConfigurationItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAllConfigurationItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOneConfigurationItemCompletedEventHandler(object sender, GetOneConfigurationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneConfigurationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneConfigurationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetOneConfigurationItemCompletedEventHandler(object sender, SetOneConfigurationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOneConfigurationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOneConfigurationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteOneConfigurationItemCompletedEventHandler(object sender, DeleteOneConfigurationItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOneConfigurationItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOneConfigurationItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetEagleProgramDataCompletedEventHandler(object sender, GetEagleProgramDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEagleProgramDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEagleProgramDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPopularListNamesCompletedEventHandler(object sender, GetPopularListNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPopularListNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPopularListNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BackupConfigurationTableCompletedEventHandler(object sender, BackupConfigurationTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupConfigurationTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupConfigurationTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RestoreConfigurationTableCompletedEventHandler(object sender, RestoreConfigurationTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreConfigurationTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreConfigurationTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BackupSystemFilesCompletedEventHandler(object sender, BackupSystemFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupSystemFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupSystemFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RestoreSystemFilesCompletedEventHandler(object sender, RestoreSystemFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreSystemFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreSystemFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RegisterComputerCompletedEventHandler(object sender, RegisterComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRegisteredComputerListCompletedEventHandler(object sender, GetRegisteredComputerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisteredComputerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisteredComputerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateRegisteredComputerListCompletedEventHandler(object sender, UpdateRegisteredComputerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRegisteredComputerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRegisteredComputerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ComputerTableChangedCompletedEventHandler(object sender, ComputerTableChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComputerTableChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ComputerTableChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldVirtualFldTestCompletedEventHandler(object sender, HelloWorldVirtualFldTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldVirtualFldTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldVirtualFldTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ParentStructNameForDetailStructCompletedEventHandler(object sender, ParentStructNameForDetailStructCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParentStructNameForDetailStructCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ParentStructNameForDetailStructCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PerformQueryCompletedEventHandler(object sender, PerformQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PerformQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PerformQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PerformNonQueryCompletedEventHandler(object sender, PerformNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PerformNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PerformNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PerformExecuteScalarCompletedEventHandler(object sender, PerformExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PerformExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PerformExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertDataCompletedEventHandler(object sender, InsertDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertData_AlwaysSetGeneratedKeyCompletedEventHandler(object sender, InsertData_AlwaysSetGeneratedKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertData_AlwaysSetGeneratedKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertData_AlwaysSetGeneratedKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateDataCompletedEventHandler(object sender, UpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateDataOneTransactionCompletedEventHandler(object sender, UpdateDataOneTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataOneTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataOneTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddStatusCompletedEventHandler(object sender, AddStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet dataSet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportRecordCompletedEventHandler(object sender, ImportRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ImportRecordAndReturnDataSetCompletedEventHandler(object sender, ImportRecordAndReturnDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportRecordAndReturnDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportRecordAndReturnDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PostDataFilesCompletedEventHandler(object sender, PostDataFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostDataFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostDataFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void TranslateProviderSpecificCharCompletedEventHandler(object sender, TranslateProviderSpecificCharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TranslateProviderSpecificCharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TranslateProviderSpecificCharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public char Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((char)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProviderSpecificParameterNameCompletedEventHandler(object sender, GetProviderSpecificParameterNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderSpecificParameterNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderSpecificParameterNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProviderSpecificStartWithStringCompletedEventHandler(object sender, GetProviderSpecificStartWithStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderSpecificStartWithStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderSpecificStartWithStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void BackupFireBirdDBCompletedEventHandler(object sender, BackupFireBirdDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupFireBirdDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackupFireBirdDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RunReportAsynchronousCompletedEventHandler(object sender, RunReportAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunReportAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunReportAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventHandler(object sender, KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyMgr_EnsureComplianceWithCurrentKeyAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteImportExportDefinitionAsynchronousCompletedEventHandler(object sender, ExecuteImportExportDefinitionAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteImportExportDefinitionAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteImportExportDefinitionAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool oCompleted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventHandler(object sender, ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteImpExpDef_ReturnSummaryAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool oCompleted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecuteFTPSessionAsynchronousCompletedEventHandler(object sender, ExecuteFTPSessionAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteFTPSessionAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteFTPSessionAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ReadInNSWXMLFilesAsynchronousCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void TransferNSWFilesAsynchronousCompletedEventHandler(object sender, TransferNSWFilesAsynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferNSWFilesAsynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferNSWFilesAsynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string oErrMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591